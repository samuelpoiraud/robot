   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"KBall_launcher.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	1
  20              	DCM_timer_period_predivised:
  21 0000 0000     		.space	2
  22              		.section	.rodata
  23              		.align	2
  24              	.LC0:
  25 0000 424C3A20 		.ascii	"BL: Lanceur de balle initialis\351\012\000"
  25      4C616E63 
  25      65757220 
  25      64652062 
  25      616C6C65 
  26              		.text
  27              		.align	2
  28              		.global	BALLLAUNCHER_init
  29              		.thumb
  30              		.thumb_func
  32              	BALLLAUNCHER_init:
  33              	.LFB111:
  34              		.file 1 "../Krusty/KBall_launcher.c"
   1:../Krusty/KBall_launcher.c **** /*  Club Robot ESEO 2012 - 2013
   2:../Krusty/KBall_launcher.c ****  *	Krusty
   3:../Krusty/KBall_launcher.c ****  *
   4:../Krusty/KBall_launcher.c ****  *	Fichier : Ball_launcher.c
   5:../Krusty/KBall_launcher.c ****  *	Package : Carte actionneur
   6:../Krusty/KBall_launcher.c ****  *	Description : Asservissement du lanceur de balle
   7:../Krusty/KBall_launcher.c ****  *  Auteur : Alexis
   8:../Krusty/KBall_launcher.c ****  *  Version 20130208
   9:../Krusty/KBall_launcher.c ****  *  Robot : Krusty
  10:../Krusty/KBall_launcher.c ****  */
  11:../Krusty/KBall_launcher.c **** 
  12:../Krusty/KBall_launcher.c **** #include "KBall_launcher.h"
  13:../Krusty/KBall_launcher.c **** #ifdef I_AM_ROBOT_KRUSTY
  14:../Krusty/KBall_launcher.c **** 
  15:../Krusty/KBall_launcher.c **** #include "../QS/QS_DCMotor2.h"
  16:../Krusty/KBall_launcher.c **** //#include "../QS/QS_can.h"
  17:../Krusty/KBall_launcher.c **** #include "../QS/QS_CANmsgList.h"
  18:../Krusty/KBall_launcher.c **** #include "../QS/QS_timer.h"
  19:../Krusty/KBall_launcher.c **** #include "../act_queue_utils.h"
  20:../Krusty/KBall_launcher.c **** #include "config_pin.h"
  21:../Krusty/KBall_launcher.c **** #include "KBall_launcher_config.h"
  22:../Krusty/KBall_launcher.c **** 
  23:../Krusty/KBall_launcher.c **** #include "config_debug.h"
  24:../Krusty/KBall_launcher.c **** #define LOG_PREFIX "BL: "
  25:../Krusty/KBall_launcher.c **** #define LOG_COMPONENT OUTPUT_LOG_COMPONENT_BALLLAUNCHER
  26:../Krusty/KBall_launcher.c **** #include "../QS/QS_outputlog.h"
  27:../Krusty/KBall_launcher.c **** 
  28:../Krusty/KBall_launcher.c **** //Define pour récuperer les valeurs du timer d'asservissement et sa période
  29:../Krusty/KBall_launcher.c **** #if DCM_TIMER == 1
  30:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_VAL_REG    TMR1
  31:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PERIOD_REG PR1
  32:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PRIORITY_REG IPC0bits.T1IP
  33:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_OVERFLOW_REG IFS0bits.T1IF
  34:../Krusty/KBall_launcher.c **** #elif DCM_TIMER == 2
  35:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_VAL_REG    TMR2
  36:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PERIOD_REG PR2
  37:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PRIORITY_REG IPC1bits.T2IP
  38:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_OVERFLOW_REG IFS0bits.T2IF
  39:../Krusty/KBall_launcher.c **** #elif DCM_TIMER == 3
  40:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_VAL_REG    TMR3
  41:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PERIOD_REG PR3
  42:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PRIORITY_REG IPC1bits.T3IP
  43:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_OVERFLOW_REG IFS0bits.T3IF
  44:../Krusty/KBall_launcher.c **** #elif DCM_TIMER == 4
  45:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_VAL_REG    TMR4
  46:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PERIOD_REG PR4
  47:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_PRIORITY_REG IPC5bits.T4IP
  48:../Krusty/KBall_launcher.c **** 	#define DCM_TIMER_OVERFLOW_REG IFS1bits.T4IF
  49:../Krusty/KBall_launcher.c **** #else
  50:../Krusty/KBall_launcher.c **** 	#error "DCM_TIMER doit etre 1 2 3 ou 4"
  51:../Krusty/KBall_launcher.c **** #endif /* DCM_TIMER == n */
  52:../Krusty/KBall_launcher.c **** 
  53:../Krusty/KBall_launcher.c **** //Constante permettant d'avoir des valeurs indépendante de la fréquence de la carte, utilisé pour l
  54:../Krusty/KBall_launcher.c **** #if defined(FREQ_10MHZ)
  55:../Krusty/KBall_launcher.c **** 	#define HALL_TIMECOUNTER_PULSE_PER_UNIT 1
  56:../Krusty/KBall_launcher.c **** #elif defined(FREQ_20MHZ)
  57:../Krusty/KBall_launcher.c **** 	#define HALL_TIMECOUNTER_PULSE_PER_UNIT 2	//pour 20Mhz
  58:../Krusty/KBall_launcher.c **** #elif defined(FREQ_40MHZ)
  59:../Krusty/KBall_launcher.c **** 	#define HALL_TIMECOUNTER_PULSE_PER_UNIT 4	//pour 40Mhz
  60:../Krusty/KBall_launcher.c **** #endif
  61:../Krusty/KBall_launcher.c **** 
  62:../Krusty/KBall_launcher.c **** #if DCMOTOR_NB_POS < 2
  63:../Krusty/KBall_launcher.c **** #error "Le nombre de position disponible dans l'asservissement DCMotor n'est pas suffisant"
  64:../Krusty/KBall_launcher.c **** #endif
  65:../Krusty/KBall_launcher.c **** #if DCM_NUMBER <= BALLLAUNCHER_DCMOTOR_ID
  66:../Krusty/KBall_launcher.c **** #error "Le nombre de DCMotor disponible n'est pas suffisant, veuillez augmenter DCM_NUMBER"
  67:../Krusty/KBall_launcher.c **** #endif
  68:../Krusty/KBall_launcher.c **** 
  69:../Krusty/KBall_launcher.c **** /*
  70:../Krusty/KBall_launcher.c ****  * Technique de captage de la vitesse:
  71:../Krusty/KBall_launcher.c ****  * A chaque passage de l'aimant, on récupère la valeur du timer de l'asservissement.
  72:../Krusty/KBall_launcher.c ****  * A chaque overflow du timer d'asservissement, on incrémente timer_overflow_number.
  73:../Krusty/KBall_launcher.c ****  * A chaque detection d'aimant, on met dans last_detection_interval, le nombre de cycle du timer d'
  74:../Krusty/KBall_launcher.c ****  *  cycles = timer_overflow_number * periode_timer + valeur_timer_passage_1 - valeur_timer_passage_
  75:../Krusty/KBall_launcher.c ****  * last_detection_interval est en fait cycles
  76:../Krusty/KBall_launcher.c ****  * Si le temps entre 2 passage d'aimant dépasse 850ms, on considère que le moteur est arreté.
  77:../Krusty/KBall_launcher.c ****  */
  78:../Krusty/KBall_launcher.c **** 
  79:../Krusty/KBall_launcher.c **** static Uint16 DCM_timer_period_predivised;
  80:../Krusty/KBall_launcher.c **** 
  81:../Krusty/KBall_launcher.c **** static Sint16 BALLLAUNCHER_get_speed();
  82:../Krusty/KBall_launcher.c **** 
  83:../Krusty/KBall_launcher.c **** void BALLLAUNCHER_init() {
  35              		.loc 1 83 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 88B0     		sub	sp, sp, #32
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 40
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  84:../Krusty/KBall_launcher.c **** 	DCMotor_config_t ball_launcher_config;
  85:../Krusty/KBall_launcher.c **** 	static bool_e initialized = FALSE;
  86:../Krusty/KBall_launcher.c **** 
  87:../Krusty/KBall_launcher.c **** 	if(initialized)
  50              		.loc 1 87 0
  51 0006 40F20003 		movw	r3, #:lower16:initialized.6300
  52 000a C0F20003 		movt	r3, #:upper16:initialized.6300
  53 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  54 0010 002B     		cmp	r3, #0
  55 0012 10D1     		bne	.L1
  88:../Krusty/KBall_launcher.c **** 		return;
  89:../Krusty/KBall_launcher.c **** 	initialized = TRUE;
  56              		.loc 1 89 0
  57 0014 40F20003 		movw	r3, #:lower16:initialized.6300
  58 0018 C0F20003 		movt	r3, #:upper16:initialized.6300
  59 001c 4FF00102 		mov	r2, #1
  60 0020 1A70     		strb	r2, [r3, #0]
  90:../Krusty/KBall_launcher.c **** 
  91:../Krusty/KBall_launcher.c **** 	DCM_init();
  61              		.loc 1 91 0
  62 0022 FFF7FEFF 		bl	DCM_init
  92:../Krusty/KBall_launcher.c **** 
  93:../Krusty/KBall_launcher.c **** 	//Précalcul de la constante
  94:../Krusty/KBall_launcher.c **** //	DCM_timer_period_predivised = ((DCM_TIMER_PERIOD_REG+1)/HALL_TIMECOUNTER_PULSE_PER_UNIT);
  95:../Krusty/KBall_launcher.c **** 
  96:../Krusty/KBall_launcher.c **** //	ball_launcher_config.sensor_read = &BALLLAUNCHER_get_speed;
  97:../Krusty/KBall_launcher.c **** //	ball_launcher_config.Kp = BALLLAUNCHER_ASSER_KP;
  98:../Krusty/KBall_launcher.c **** //	ball_launcher_config.Ki = BALLLAUNCHER_ASSER_KI;
  99:../Krusty/KBall_launcher.c **** //	ball_launcher_config.Kd = BALLLAUNCHER_ASSER_KD;
 100:../Krusty/KBall_launcher.c **** //	ball_launcher_config.pos[0] = 0;
 101:../Krusty/KBall_launcher.c **** //	ball_launcher_config.pos[1] = 0;	//en tr/min
 102:../Krusty/KBall_launcher.c **** //	ball_launcher_config.pwm_number = BALLLAUNCHER_DCMOTOR_PWM_NUM;
 103:../Krusty/KBall_launcher.c **** //	ball_launcher_config.way_latch = &BALLLAUNCHER_DCMOTOR_PORT_WAY;
 104:../Krusty/KBall_launcher.c **** //	ball_launcher_config.way_bit_number = BALLLAUNCHER_DCMOTOR_PORT_WAY_BIT;
 105:../Krusty/KBall_launcher.c **** //	ball_launcher_config.way0_max_duty = BALLLAUNCHER_DCMOTOR_MAX_PWM_WAY0;
 106:../Krusty/KBall_launcher.c **** //	ball_launcher_config.way1_max_duty = BALLLAUNCHER_DCMOTOR_MAX_PWM_WAY1;
 107:../Krusty/KBall_launcher.c **** //	ball_launcher_config.timeout = BALLLAUNCHER_ASSER_TIMEOUT;
 108:../Krusty/KBall_launcher.c **** //	ball_launcher_config.epsilon = BALLLAUNCHER_ASSER_POS_EPSILON;
 109:../Krusty/KBall_launcher.c **** //	DCM_config(BALLLAUNCHER_DCMOTOR_ID, &ball_launcher_config);
 110:../Krusty/KBall_launcher.c **** //	DCM_stop(BALLLAUNCHER_DCMOTOR_ID);
 111:../Krusty/KBall_launcher.c **** 
 112:../Krusty/KBall_launcher.c **** //	BALLLAUNCHER_HALLSENSOR_INT_PRIORITY = 6;
 113:../Krusty/KBall_launcher.c **** //	DCM_TIMER_PRIORITY_REG = 5;
 114:../Krusty/KBall_launcher.c **** //	BALLLAUNCHER_HALLSENSOR_INT_EDGE = 1;  //interrupt on falling edge
 115:../Krusty/KBall_launcher.c **** //	BALLLAUNCHER_HALLSENSOR_INT_FLAG = 0;
 116:../Krusty/KBall_launcher.c **** //	BALLLAUNCHER_HALLSENSOR_INT_ENABLE = 1;
 117:../Krusty/KBall_launcher.c **** 
 118:../Krusty/KBall_launcher.c **** 	//Si la priorité de l'interruption INTx (qui est déclanchée lors d'un passage d'un aimant devant l
 119:../Krusty/KBall_launcher.c **** 	//il est possible d'avoir une interruption INTx entre l'overflow du timer (donc il recommence a co
 120:../Krusty/KBall_launcher.c **** //	if(BALLLAUNCHER_HALLSENSOR_INT_PRIORITY <= DCM_TIMER_PRIORITY_REG)
 121:../Krusty/KBall_launcher.c **** //		COMPONENT_log(LOG_LEVEL_Error, "Attention ! La priorité de l'interruption INTx doit être supéri
 122:../Krusty/KBall_launcher.c **** 
 123:../Krusty/KBall_launcher.c **** 	info_printf("Lanceur de balle initialisé\n");
  63              		.loc 1 123 0
  64 0026 4FF00400 		mov	r0, #4
  65 002a 40F20001 		movw	r1, #:lower16:.LC0
  66 002e C0F20001 		movt	r1, #:upper16:.LC0
  67 0032 FFF7FEFF 		bl	OUTPUTLOG_printf
  68              	.L1:
 124:../Krusty/KBall_launcher.c **** }
  69              		.loc 1 124 0
  70 0036 07F12007 		add	r7, r7, #32
  71 003a BD46     		mov	sp, r7
  72 003c 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE111:
  76 003e 00BF     		.align	2
  77              		.global	BALLLAUNCHER_stop
  78              		.thumb
  79              		.thumb_func
  81              	BALLLAUNCHER_stop:
  82              	.LFB112:
 125:../Krusty/KBall_launcher.c **** 
 126:../Krusty/KBall_launcher.c **** void BALLLAUNCHER_stop() {
  83              		.loc 1 126 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0040 80B5     		push	{r7, lr}
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0042 00AF     		add	r7, sp, #0
  93              	.LCFI4:
  94              		.cfi_def_cfa_register 7
 127:../Krusty/KBall_launcher.c **** 	DCM_stop(BALLLAUNCHER_DCMOTOR_ID);
  95              		.loc 1 127 0
  96 0044 4FF00000 		mov	r0, #0
  97 0048 FFF7FEFF 		bl	DCM_stop
 128:../Krusty/KBall_launcher.c **** }
  98              		.loc 1 128 0
  99 004c 80BD     		pop	{r7, pc}
 100              		.cfi_endproc
 101              	.LFE112:
 103              		.section	.rodata
 104 0021 000000   		.align	2
 105              	.LC1:
 106 0024 424C3A20 		.ascii	"BL: Direct cmd: Motor stoped\012\000"
 106      44697265 
 106      63742063 
 106      6D643A20 
 106      4D6F746F 
 107 0042 0000     		.align	2
 108              	.LC2:
 109 0044 424C3A20 		.ascii	"BL: Direct cmd: Run motor at speed: %d\012\000"
 109      44697265 
 109      63742063 
 109      6D643A20 
 109      52756E20 
 110              		.text
 111 004e 00BF     		.align	2
 112              		.global	BALLLAUNCHER_set_speed
 113              		.thumb
 114              		.thumb_func
 116              	BALLLAUNCHER_set_speed:
 117              	.LFB113:
 129:../Krusty/KBall_launcher.c **** 
 130:../Krusty/KBall_launcher.c **** void BALLLAUNCHER_set_speed(Uint16 tr_per_min) {
 118              		.loc 1 130 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 8
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0050 80B5     		push	{r7, lr}
 123              	.LCFI5:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0052 82B0     		sub	sp, sp, #8
 128              	.LCFI6:
 129              		.cfi_def_cfa_offset 16
 130 0054 00AF     		add	r7, sp, #0
 131              	.LCFI7:
 132              		.cfi_def_cfa_register 7
 133 0056 0346     		mov	r3, r0
 134 0058 FB80     		strh	r3, [r7, #6]	@ movhi
 131:../Krusty/KBall_launcher.c **** 	if(tr_per_min == 0) {
 135              		.loc 1 131 0
 136 005a FB88     		ldrh	r3, [r7, #6]
 137 005c 002B     		cmp	r3, #0
 138 005e 0CD1     		bne	.L6
 132:../Krusty/KBall_launcher.c **** 		debug_printf("Direct cmd: Motor stoped\n");
 139              		.loc 1 132 0
 140 0060 4FF00500 		mov	r0, #5
 141 0064 40F20001 		movw	r1, #:lower16:.LC1
 142 0068 C0F20001 		movt	r1, #:upper16:.LC1
 143 006c FFF7FEFF 		bl	OUTPUTLOG_printf
 133:../Krusty/KBall_launcher.c **** 		DCM_stop(BALLLAUNCHER_DCMOTOR_ID);	//On est sur de l'arreter comme ça, même en cas de problème ca
 144              		.loc 1 133 0
 145 0070 4FF00000 		mov	r0, #0
 146 0074 FFF7FEFF 		bl	DCM_stop
 147 0078 1CE0     		b	.L5
 148              	.L6:
 134:../Krusty/KBall_launcher.c **** 	} else {
 135:../Krusty/KBall_launcher.c **** 		debug_printf("Direct cmd: Run motor at speed: %d\n", tr_per_min);
 149              		.loc 1 135 0
 150 007a FB88     		ldrh	r3, [r7, #6]
 151 007c 4FF00500 		mov	r0, #5
 152 0080 40F20001 		movw	r1, #:lower16:.LC2
 153 0084 C0F20001 		movt	r1, #:upper16:.LC2
 154 0088 1A46     		mov	r2, r3
 155 008a FFF7FEFF 		bl	OUTPUTLOG_printf
 136:../Krusty/KBall_launcher.c **** 		DCM_setPosValue(BALLLAUNCHER_DCMOTOR_ID, 1, tr_per_min);
 156              		.loc 1 136 0
 157 008e FB88     		ldrh	r3, [r7, #6]
 158 0090 1BB2     		sxth	r3, r3
 159 0092 4FF00000 		mov	r0, #0
 160 0096 4FF00101 		mov	r1, #1
 161 009a 1A46     		mov	r2, r3
 162 009c FFF7FEFF 		bl	DCM_setPosValue
 137:../Krusty/KBall_launcher.c **** 		DCM_goToPos(BALLLAUNCHER_DCMOTOR_ID, 1);
 163              		.loc 1 137 0
 164 00a0 4FF00000 		mov	r0, #0
 165 00a4 4FF00101 		mov	r1, #1
 166 00a8 FFF7FEFF 		bl	DCM_goToPos
 138:../Krusty/KBall_launcher.c **** 		DCM_restart(BALLLAUNCHER_DCMOTOR_ID); //Redémarrage si on l'avait arrêté avec DCM_stop, sinon ne 
 167              		.loc 1 138 0
 168 00ac 4FF00000 		mov	r0, #0
 169 00b0 FFF7FEFF 		bl	DCM_restart
 170              	.L5:
 139:../Krusty/KBall_launcher.c **** 	}
 140:../Krusty/KBall_launcher.c **** }
 171              		.loc 1 140 0
 172 00b4 07F10807 		add	r7, r7, #8
 173 00b8 BD46     		mov	sp, r7
 174 00ba 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE113:
 178              		.section	.rodata
 179              		.align	2
 180              	.LC3:
 181 006c 424C3A20 		.ascii	"BL: invalid CAN msg data[0]=%u !\012\000"
 181      696E7661 
 181      6C696420 
 181      43414E20 
 181      6D736720 
 182 008e 0000     		.text
 183              		.align	2
 184              		.global	BALLLAUNCHER_CAN_process_msg
 185              		.thumb
 186              		.thumb_func
 188              	BALLLAUNCHER_CAN_process_msg:
 189              	.LFB114:
 141:../Krusty/KBall_launcher.c **** 
 142:../Krusty/KBall_launcher.c **** bool_e BALLLAUNCHER_CAN_process_msg(CAN_msg_t* msg) {
 190              		.loc 1 142 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 00bc 80B5     		push	{r7, lr}
 195              	.LCFI8:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 00be 82B0     		sub	sp, sp, #8
 200              	.LCFI9:
 201              		.cfi_def_cfa_offset 16
 202 00c0 00AF     		add	r7, sp, #0
 203              	.LCFI10:
 204              		.cfi_def_cfa_register 7
 205 00c2 7860     		str	r0, [r7, #4]
 143:../Krusty/KBall_launcher.c **** 	if(msg->sid == ACT_BALLLAUNCHER) {
 206              		.loc 1 143 0
 207 00c4 7B68     		ldr	r3, [r7, #4]
 208 00c6 1A88     		ldrh	r2, [r3, #0]
 209 00c8 40F21133 		movw	r3, #785
 210 00cc 9A42     		cmp	r2, r3
 211 00ce 0DD1     		bne	.L9
 144:../Krusty/KBall_launcher.c **** 		switch(msg->data[0]) {
 145:../Krusty/KBall_launcher.c **** //			case ACT_BALLLAUNCHER_ACTIVATE:
 146:../Krusty/KBall_launcher.c **** //				ACTQ_push_operation_from_msg(msg, QUEUE_ACT_BallLauncher, &BALLLAUNCHER_run_command, U16FROMU
 147:../Krusty/KBall_launcher.c **** //				break;
 148:../Krusty/KBall_launcher.c **** 
 149:../Krusty/KBall_launcher.c **** //			case ACT_BALLLAUNCHER_STOP:
 150:../Krusty/KBall_launcher.c **** //				ACTQ_push_operation_from_msg(msg, QUEUE_ACT_BallLauncher, &BALLLAUNCHER_run_command, 0);
 151:../Krusty/KBall_launcher.c **** //				break;
 152:../Krusty/KBall_launcher.c **** 
 153:../Krusty/KBall_launcher.c **** 			default:
 154:../Krusty/KBall_launcher.c **** 				warn_printf("invalid CAN msg data[0]=%u !\n", msg->data[0]);
 212              		.loc 1 154 0
 213 00d0 7B68     		ldr	r3, [r7, #4]
 214 00d2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 215 00d4 4FF00300 		mov	r0, #3
 216 00d8 40F20001 		movw	r1, #:lower16:.LC3
 217 00dc C0F20001 		movt	r1, #:upper16:.LC3
 218 00e0 1A46     		mov	r2, r3
 219 00e2 FFF7FEFF 		bl	OUTPUTLOG_printf
 155:../Krusty/KBall_launcher.c **** 		}
 156:../Krusty/KBall_launcher.c **** 		return TRUE;
 220              		.loc 1 156 0
 221 00e6 4FF00103 		mov	r3, #1
 222 00ea 01E0     		b	.L10
 223              	.L9:
 157:../Krusty/KBall_launcher.c **** 	}
 158:../Krusty/KBall_launcher.c **** 
 159:../Krusty/KBall_launcher.c **** 	return FALSE;
 224              		.loc 1 159 0
 225 00ec 4FF00003 		mov	r3, #0
 226              	.L10:
 160:../Krusty/KBall_launcher.c **** }
 227              		.loc 1 160 0
 228 00f0 1846     		mov	r0, r3
 229 00f2 07F10807 		add	r7, r7, #8
 230 00f6 BD46     		mov	sp, r7
 231 00f8 80BD     		pop	{r7, pc}
 232              		.cfi_endproc
 233              	.LFE114:
 235              		.bss
 236              	initialized.6300:
 237 0002 00       		.space	1
 238 0003 00       		.text
 239              	.Letext0:
 240              		.file 2 "c:\\program files (x86)\\eclipse-arm-eseo\\gcc-arm-none-eabi-4_7-2013q2-20130614-win32\\g
 241              		.file 3 "../Krusty/../QS/QS_types.h"
 242              		.file 4 "../Krusty/../QS/QS_DCMotor2.h"
 243              		.file 5 "../Krusty/../QS/QS_outputlog.h"
 244              		.file 6 "../stm32f4xx/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 KBall_launcher.c
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:19     .bss:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:20     .bss:00000000 DCM_timer_period_predivised
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:23     .rodata:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:24     .rodata:00000000 .LC0
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:27     .text:00000000 $t
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:32     .text:00000000 BALLLAUNCHER_init
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:236    .bss:00000002 initialized.6300
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:81     .text:00000040 BALLLAUNCHER_stop
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:105    .rodata:00000024 .LC1
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:108    .rodata:00000044 .LC2
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:116    .text:00000050 BALLLAUNCHER_set_speed
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:180    .rodata:0000006c .LC3
C:\Users\Amaury\AppData\Local\Temp\cc5VxeeJ.s:188    .text:000000bc BALLLAUNCHER_CAN_process_msg
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.13c6c37fe6ef97541a459ad1f2cd1ddb
                           .group:00000000 wm4.stm32f4xx.h.54.d172d9d6631f11a8436908e748990b53
                           .group:00000000 wm4.core_cm4.h.32.39d0f71cd333856d56f1935d9037195e
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.163.d36d54ebc869626f337c4fcb95a9b424
                           .group:00000000 wm4.stm32f4xx.h.306.7867854ab89778ccd63e1fde7c22c0b6
                           .group:00000000 wm4.stm32f4xx_rcc.h.65.29a27820bc754566c4190ed8ad1c1d80
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.7233.cb6cb3cb095c29e1fc0eb152d26090b1
                           .group:00000000 wm4.Global_config.h.14.bea53ddf4045d71f1c9fb87037131e8e
                           .group:00000000 wm4.config_global.h.12.5c30ea43d7f0d9daa101874e8ba75f6f
                           .group:00000000 wm4.config_qs.h.12.4699be7196e891fb4cd84d522e29cde7
                           .group:00000000 wm4.config_qs.h.12.8e0ab7f7cbbdaecfb1e464f5610b5d86
                           .group:00000000 wm4.QS_macro.h.19.3d2533714681986d2ad8c517737c4640
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.QS_timer.h.23.f1c7374d1ffe22793578c04386c6b1e2
                           .group:00000000 wm4.queue.h.39.c6c83c771916888b8b8278e5c5477b11
                           .group:00000000 wm4.QS_CANmsgList.h.18.4820ab5d82fa43f9421f4e5eb46c19bc
                           .group:00000000 wm4.config_pin.h.12.92dbe1317fae649a069f2ce6e5ad725c
                           .group:00000000 wm4.config_pin.h.12.20ee5a96fdfc3c7ca3bc6056aaec7473
                           .group:00000000 wm4.KBall_launcher_config.h.13.abf6ef1489f2209d5cc12b6ffc63e461
                           .group:00000000 wm4.config_debug.h.12.ce495d07741075ca26554eb90b0ab381
                           .group:00000000 wm4.QS_outputlog.h.12.497571275ee7bc35db4cbeb19919be7a

UNDEFINED SYMBOLS
DCM_init
OUTPUTLOG_printf
DCM_stop
DCM_setPosValue
DCM_goToPos
DCM_restart
