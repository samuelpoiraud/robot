   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"KBall_sorter.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	1
  20              	desired_ball_launcher_speed:
  21 0000 0000     		.space	2
  22              	cherry_taken:
  23 0002 00       		.space	1
  24              		.data
  27              	launch_cherry:
  28 0000 01       		.byte	1
  29              		.section	.rodata
  30              		.align	2
  31              	.LC0:
  32 0000 42533A20 		.ascii	"BS: S\351quenceur de cerise initialis\351\012\000"
  32      53E97175 
  32      656E6365 
  32      75722064 
  32      65206365 
  33              		.text
  34              		.align	2
  35              		.global	BALLSORTER_init
  36              		.thumb
  37              		.thumb_func
  39              	BALLSORTER_init:
  40              	.LFB111:
  41              		.file 1 "../Krusty/KBall_sorter.c"
   1:../Krusty/KBall_sorter.c **** /*  Club Robot ESEO 2012 - 2013
   2:../Krusty/KBall_sorter.c ****  *	Krusty
   3:../Krusty/KBall_sorter.c ****  *
   4:../Krusty/KBall_sorter.c ****  *	Fichier : Ball_sorter.c
   5:../Krusty/KBall_sorter.c ****  *	Package : Carte actionneur
   6:../Krusty/KBall_sorter.c ****  *	Description : Gestion de la detection des balles cerises et de leur envoi une par une.
   7:../Krusty/KBall_sorter.c ****  *  Auteur : Alexis
   8:../Krusty/KBall_sorter.c ****  *  Version 20130315
   9:../Krusty/KBall_sorter.c ****  *  Robot : Krusty
  10:../Krusty/KBall_sorter.c ****  */
  11:../Krusty/KBall_sorter.c **** 
  12:../Krusty/KBall_sorter.c **** #include "KBall_sorter.h"
  13:../Krusty/KBall_sorter.c **** #ifdef I_AM_ROBOT_KRUSTY
  14:../Krusty/KBall_sorter.c **** 
  15:../Krusty/KBall_sorter.c **** #include "../QS/QS_can.h"
  16:../Krusty/KBall_sorter.c **** #include "../QS/QS_CANmsgList.h"
  17:../Krusty/KBall_sorter.c **** #include "../QS/QS_DCMotor2.h"
  18:../Krusty/KBall_sorter.c **** #include "../QS/QS_ax12.h"
  19:../Krusty/KBall_sorter.c **** #include "../QS/QS_adc.h"
  20:../Krusty/KBall_sorter.c **** #include "../act_queue_utils.h"
  21:../Krusty/KBall_sorter.c **** #include "config_pin.h"
  22:../Krusty/KBall_sorter.c **** #include "KBall_sorter_config.h"
  23:../Krusty/KBall_sorter.c **** #include "KBall_launcher.h"
  24:../Krusty/KBall_sorter.c **** 
  25:../Krusty/KBall_sorter.c **** #include "config_debug.h"
  26:../Krusty/KBall_sorter.c **** #define LOG_PREFIX "BS: "
  27:../Krusty/KBall_sorter.c **** #define LOG_COMPONENT OUTPUT_LOG_COMPONENT_BALLSORTER
  28:../Krusty/KBall_sorter.c **** #include "../QS/QS_outputlog.h"
  29:../Krusty/KBall_sorter.c **** 
  30:../Krusty/KBall_sorter.c **** static Uint16 desired_ball_launcher_speed = 0;
  31:../Krusty/KBall_sorter.c **** static bool_e cherry_taken = FALSE;
  32:../Krusty/KBall_sorter.c **** static bool_e launch_cherry = TRUE;	//Si TRUE on lance les cerises blanches sinon on ne les lance p
  33:../Krusty/KBall_sorter.c **** 
  34:../Krusty/KBall_sorter.c **** static void BALLSORTER_initAX12();
  35:../Krusty/KBall_sorter.c **** 
  36:../Krusty/KBall_sorter.c **** void BALLSORTER_init() {
  42              		.loc 1 36 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 00AF     		add	r7, sp, #0
  52              	.LCFI1:
  53              		.cfi_def_cfa_register 7
  37:../Krusty/KBall_sorter.c **** 	static bool_e initialized = FALSE;
  38:../Krusty/KBall_sorter.c **** 
  39:../Krusty/KBall_sorter.c **** 	if(initialized)
  54              		.loc 1 39 0
  55 0004 40F20003 		movw	r3, #:lower16:initialized.6474
  56 0008 C0F20003 		movt	r3, #:upper16:initialized.6474
  57 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  58 000e 002B     		cmp	r3, #0
  59 0010 15D1     		bne	.L4
  60              	.L2:
  40:../Krusty/KBall_sorter.c **** 		return;
  41:../Krusty/KBall_sorter.c **** 	initialized = TRUE;
  61              		.loc 1 41 0
  62 0012 40F20003 		movw	r3, #:lower16:initialized.6474
  63 0016 C0F20003 		movt	r3, #:upper16:initialized.6474
  64 001a 4FF00102 		mov	r2, #1
  65 001e 1A70     		strb	r2, [r3, #0]
  42:../Krusty/KBall_sorter.c **** 
  43:../Krusty/KBall_sorter.c **** 	AX12_init();
  66              		.loc 1 43 0
  67 0020 FFF7FEFF 		bl	AX12_init
  44:../Krusty/KBall_sorter.c **** 	ADC_init();
  68              		.loc 1 44 0
  69 0024 FFF7FEFF 		bl	ADC_init
  45:../Krusty/KBall_sorter.c **** 
  46:../Krusty/KBall_sorter.c **** 	BALLSORTER_initAX12();
  70              		.loc 1 46 0
  71 0028 00F00CF8 		bl	BALLSORTER_initAX12
  47:../Krusty/KBall_sorter.c **** 
  48:../Krusty/KBall_sorter.c **** 	info_printf("Séquenceur de cerise initialisé\n");
  72              		.loc 1 48 0
  73 002c 4FF00400 		mov	r0, #4
  74 0030 40F20001 		movw	r1, #:lower16:.LC0
  75 0034 C0F20001 		movt	r1, #:upper16:.LC0
  76 0038 FFF7FEFF 		bl	OUTPUTLOG_printf
  77 003c 00E0     		b	.L1
  78              	.L4:
  40:../Krusty/KBall_sorter.c **** 		return;
  79              		.loc 1 40 0
  80 003e 00BF     		nop
  81              	.L1:
  49:../Krusty/KBall_sorter.c **** 	//a faire: RAM de cerise, registres de cerise, ALU de cerise, GPIO de cerise, bras de cerise, pied
  50:../Krusty/KBall_sorter.c **** 	//groupama est une marque déposée sur le bord de la route actuellement orpheline, pour des demande
  51:../Krusty/KBall_sorter.c **** }
  82              		.loc 1 51 0
  83 0040 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
  85              	.LFE111:
  87              		.section	.rodata
  88 0025 000000   		.align	2
  89              	.LC1:
  90 0028 42533A20 		.ascii	"BS: AX12 initialis\351\012\000"
  90      41583132 
  90      20696E69 
  90      7469616C 
  90      6973E90A 
  91              		.text
  92 0042 00BF     		.align	2
  93              		.thumb
  94              		.thumb_func
  96              	BALLSORTER_initAX12:
  97              	.LFB112:
  52:../Krusty/KBall_sorter.c **** 
  53:../Krusty/KBall_sorter.c **** //Initialise l'AX12 s'il n'était pas allimenté lors d'initialisations précédentes, si déjà initiali
  54:../Krusty/KBall_sorter.c **** static void BALLSORTER_initAX12() {
  98              		.loc 1 54 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0044 80B5     		push	{r7, lr}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0046 00AF     		add	r7, sp, #0
 108              	.LCFI3:
 109              		.cfi_def_cfa_register 7
  55:../Krusty/KBall_sorter.c **** 	static bool_e ax12_is_initialized = FALSE;
  56:../Krusty/KBall_sorter.c **** 	if(ax12_is_initialized == FALSE && AX12_is_ready(BALLSORTER_AX12_ID) == TRUE) {
 110              		.loc 1 56 0
 111 0048 40F20003 		movw	r3, #:lower16:ax12_is_initialized.6477
 112 004c C0F20003 		movt	r3, #:upper16:ax12_is_initialized.6477
 113 0050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 114 0052 002B     		cmp	r3, #0
 115 0054 3FD1     		bne	.L5
 116              		.loc 1 56 0 is_stmt 0 discriminator 1
 117 0056 4FF00500 		mov	r0, #5
 118 005a FFF7FEFF 		bl	AX12_is_ready
 119 005e 0346     		mov	r3, r0
 120 0060 012B     		cmp	r3, #1
 121 0062 38D1     		bne	.L5
  57:../Krusty/KBall_sorter.c **** 		ax12_is_initialized = TRUE;
 122              		.loc 1 57 0 is_stmt 1
 123 0064 40F20003 		movw	r3, #:lower16:ax12_is_initialized.6477
 124 0068 C0F20003 		movt	r3, #:upper16:ax12_is_initialized.6477
 125 006c 4FF00102 		mov	r2, #1
 126 0070 1A70     		strb	r2, [r3, #0]
  58:../Krusty/KBall_sorter.c **** 		AX12_config_set_highest_voltage(BALLSORTER_AX12_ID, 136);
 127              		.loc 1 58 0
 128 0072 4FF00500 		mov	r0, #5
 129 0076 4FF08801 		mov	r1, #136
 130 007a FFF7FEFF 		bl	AX12_config_set_highest_voltage
  59:../Krusty/KBall_sorter.c **** 		AX12_config_set_lowest_voltage(BALLSORTER_AX12_ID, 70);
 131              		.loc 1 59 0
 132 007e 4FF00500 		mov	r0, #5
 133 0082 4FF04601 		mov	r1, #70
 134 0086 FFF7FEFF 		bl	AX12_config_set_lowest_voltage
  60:../Krusty/KBall_sorter.c **** 		AX12_config_set_maximum_torque_percentage(BALLSORTER_AX12_ID, BALLSORTER_AX12_MAX_TORQUE_PERCENT)
 135              		.loc 1 60 0
 136 008a 4FF00500 		mov	r0, #5
 137 008e 4FF06401 		mov	r1, #100
 138 0092 FFF7FEFF 		bl	AX12_config_set_maximum_torque_percentage
  61:../Krusty/KBall_sorter.c **** 
  62:../Krusty/KBall_sorter.c **** 		AX12_config_set_maximal_angle(BALLSORTER_AX12_ID, 300);
 139              		.loc 1 62 0
 140 0096 4FF00500 		mov	r0, #5
 141 009a 4FF49671 		mov	r1, #300
 142 009e FFF7FEFF 		bl	AX12_config_set_maximal_angle
  63:../Krusty/KBall_sorter.c **** 		AX12_config_set_minimal_angle(BALLSORTER_AX12_ID, 0);
 143              		.loc 1 63 0
 144 00a2 4FF00500 		mov	r0, #5
 145 00a6 4FF00001 		mov	r1, #0
 146 00aa FFF7FEFF 		bl	AX12_config_set_minimal_angle
  64:../Krusty/KBall_sorter.c **** 
  65:../Krusty/KBall_sorter.c **** 		AX12_config_set_error_before_led(BALLSORTER_AX12_ID, AX12_ERROR_ANGLE | AX12_ERROR_CHECKSUM | AX1
 147              		.loc 1 65 0
 148 00ae 4FF00500 		mov	r0, #5
 149 00b2 4FF07E01 		mov	r1, #126
 150 00b6 FFF7FEFF 		bl	AX12_config_set_error_before_led
  66:../Krusty/KBall_sorter.c **** 		AX12_config_set_error_before_shutdown(BALLSORTER_AX12_ID, AX12_ERROR_OVERHEATING | AX12_ERROR_OVE
 151              		.loc 1 66 0
 152 00ba 4FF00500 		mov	r0, #5
 153 00be 4FF02401 		mov	r1, #36
 154 00c2 FFF7FEFF 		bl	AX12_config_set_error_before_shutdown
  67:../Krusty/KBall_sorter.c **** 
  68:../Krusty/KBall_sorter.c **** 		info_printf("AX12 initialisé\n");
 155              		.loc 1 68 0
 156 00c6 4FF00400 		mov	r0, #4
 157 00ca 40F20001 		movw	r1, #:lower16:.LC1
 158 00ce C0F20001 		movt	r1, #:upper16:.LC1
 159 00d2 FFF7FEFF 		bl	OUTPUTLOG_printf
 160              	.L5:
  69:../Krusty/KBall_sorter.c **** 	}
  70:../Krusty/KBall_sorter.c **** }
 161              		.loc 1 70 0
 162 00d6 80BD     		pop	{r7, pc}
 163              		.cfi_endproc
 164              	.LFE112:
 166              		.align	2
 167              		.global	BALLSORTER_stop
 168              		.thumb
 169              		.thumb_func
 171              	BALLSORTER_stop:
 172              	.LFB113:
  71:../Krusty/KBall_sorter.c **** 
  72:../Krusty/KBall_sorter.c **** void BALLSORTER_stop() {
 173              		.loc 1 72 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 00d8 80B4     		push	{r7}
 179              	.LCFI4:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 00da 00AF     		add	r7, sp, #0
 183              	.LCFI5:
 184              		.cfi_def_cfa_register 7
  73:../Krusty/KBall_sorter.c **** }
 185              		.loc 1 73 0
 186 00dc BD46     		mov	sp, r7
 187 00de 80BC     		pop	{r7}
 188 00e0 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE113:
 192              		.section	.rodata
 193 003d 000000   		.align	2
 194              	.LC2:
 195 0040 42533A20 		.ascii	"BS: invalid CAN msg data[0]=%u !\012\000"
 195      696E7661 
 195      6C696420 
 195      43414E20 
 195      6D736720 
 196              		.text
 197 00e2 00BF     		.align	2
 198              		.global	BALLSORTER_CAN_process_msg
 199              		.thumb
 200              		.thumb_func
 202              	BALLSORTER_CAN_process_msg:
 203              	.LFB114:
  74:../Krusty/KBall_sorter.c **** 
  75:../Krusty/KBall_sorter.c **** bool_e BALLSORTER_CAN_process_msg(CAN_msg_t* msg) {
 204              		.loc 1 75 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 72
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 00e4 80B5     		push	{r7, lr}
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 00e6 94B0     		sub	sp, sp, #80
 214              	.LCFI7:
 215              		.cfi_def_cfa_offset 88
 216 00e8 02AF     		add	r7, sp, #8
 217              	.LCFI8:
 218              		.cfi_def_cfa 7, 80
 219 00ea 7860     		str	r0, [r7, #4]
  76:../Krusty/KBall_sorter.c **** 	queue_id_t queueId;
  77:../Krusty/KBall_sorter.c **** 
  78:../Krusty/KBall_sorter.c **** 	if(msg->sid == ACT_BALLSORTER) {
 220              		.loc 1 78 0
 221 00ec 7B68     		ldr	r3, [r7, #4]
 222 00ee 1A88     		ldrh	r2, [r3, #0]
 223 00f0 40F21333 		movw	r3, #787
 224 00f4 9A42     		cmp	r2, r3
 225 00f6 40F00F81 		bne	.L9
  79:../Krusty/KBall_sorter.c **** 		//Initialise l'AX12 s'il n'était pas allimenté lors d'initialisations précédentes, si déjà initia
  80:../Krusty/KBall_sorter.c **** 		BALLSORTER_initAX12();
 226              		.loc 1 80 0
 227 00fa FFF7A3FF 		bl	BALLSORTER_initAX12
  81:../Krusty/KBall_sorter.c **** 
  82:../Krusty/KBall_sorter.c **** 		switch(msg->data[0]) {
 228              		.loc 1 82 0
 229 00fe 7B68     		ldr	r3, [r7, #4]
 230 0100 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 231 0102 002B     		cmp	r3, #0
 232 0104 40F0FA80 		bne	.L18
 233              	.L11:
  83:../Krusty/KBall_sorter.c **** 			case ACT_BALLSORTER_TAKE_NEXT_CHERRY:
  84:../Krusty/KBall_sorter.c **** 				queueId = QUEUE_create();
 234              		.loc 1 84 0
 235 0108 FFF7FEFF 		bl	QUEUE_create
 236 010c 0346     		mov	r3, r0
 237 010e 87F84730 		strb	r3, [r7, #71]
  85:../Krusty/KBall_sorter.c **** 				assert(queueId != QUEUE_CREATE_FAILED);
  86:../Krusty/KBall_sorter.c **** 				if(queueId != QUEUE_CREATE_FAILED) {
 238              		.loc 1 86 0
 239 0112 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 240 0116 FF2B     		cmp	r3, #255
 241 0118 00F0E080 		beq	.L12
  87:../Krusty/KBall_sorter.c **** 					desired_ball_launcher_speed = U16FROMU8(msg->data[2], msg->data[1]) & 0x7FFF;
 242              		.loc 1 87 0
 243 011c 7B68     		ldr	r3, [r7, #4]
 244 011e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 245 0120 4FEA0323 		lsl	r3, r3, #8
 246 0124 9AB2     		uxth	r2, r3
 247 0126 7B68     		ldr	r3, [r7, #4]
 248 0128 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 249 012a 1343     		orrs	r3, r3, r2
 250 012c 9BB2     		uxth	r3, r3
 251 012e 9BB2     		uxth	r3, r3
 252 0130 4FEA4343 		lsl	r3, r3, #17
 253 0134 4FEA5343 		lsr	r3, r3, #17
 254 0138 9AB2     		uxth	r2, r3
 255 013a 40F20003 		movw	r3, #:lower16:desired_ball_launcher_speed
 256 013e C0F20003 		movt	r3, #:upper16:desired_ball_launcher_speed
 257 0142 1A80     		strh	r2, [r3, #0]	@ movhi
  88:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &QUEUE_take_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_BallSorter);
 258              		.loc 1 88 0
 259 0144 4FF00003 		mov	r3, #0
 260 0148 3B73     		strb	r3, [r7, #12]
 261 014a 4FF00003 		mov	r3, #0
 262 014e FB81     		strh	r3, [r7, #14]	@ movhi
 263 0150 4FF00003 		mov	r3, #0
 264 0154 3B61     		str	r3, [r7, #16]
 265 0156 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 266 015a 4FF00302 		mov	r2, #3
 267 015e 0092     		str	r2, [sp, #0]
 268 0160 1846     		mov	r0, r3
 269 0162 40F20001 		movw	r1, #:lower16:QUEUE_take_sem
 270 0166 C0F20001 		movt	r1, #:upper16:QUEUE_take_sem
 271 016a 07F10C03 		add	r3, r7, #12
 272 016e 0CCB     		ldmia	r3, {r2, r3}
 273 0170 FFF7FEFF 		bl	QUEUE_add
  89:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &BALLSORTER_run_command, (QUEUE_arg_t){msg->data[0], BALLSORTER_CS_GotoNext
 274              		.loc 1 89 0
 275 0174 7B68     		ldr	r3, [r7, #4]
 276 0176 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 277 0178 3B75     		strb	r3, [r7, #20]
 278 017a 4FF00203 		mov	r3, #2
 279 017e FB82     		strh	r3, [r7, #22]	@ movhi
 280 0180 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResultIfFail
 281 0184 C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResultIfFail
 282 0188 BB61     		str	r3, [r7, #24]
 283 018a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 284 018e 4FF00302 		mov	r2, #3
 285 0192 0092     		str	r2, [sp, #0]
 286 0194 1846     		mov	r0, r3
 287 0196 40F20001 		movw	r1, #:lower16:BALLSORTER_run_command
 288 019a C0F20001 		movt	r1, #:upper16:BALLSORTER_run_command
 289 019e 07F11403 		add	r3, r7, #20
 290 01a2 0CCB     		ldmia	r3, {r2, r3}
 291 01a4 FFF7FEFF 		bl	QUEUE_add
  90:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &BALLSORTER_run_command, (QUEUE_arg_t){msg->data[0], BALLSORTER_CS_TakeCher
 292              		.loc 1 90 0
 293 01a8 7B68     		ldr	r3, [r7, #4]
 294 01aa 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 295 01ac 3B77     		strb	r3, [r7, #28]
 296 01ae 4FF00303 		mov	r3, #3
 297 01b2 FB83     		strh	r3, [r7, #30]	@ movhi
 298 01b4 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResultIfFail
 299 01b8 C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResultIfFail
 300 01bc 3B62     		str	r3, [r7, #32]
 301 01be 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 302 01c2 4FF00302 		mov	r2, #3
 303 01c6 0092     		str	r2, [sp, #0]
 304 01c8 1846     		mov	r0, r3
 305 01ca 40F20001 		movw	r1, #:lower16:BALLSORTER_run_command
 306 01ce C0F20001 		movt	r1, #:upper16:BALLSORTER_run_command
 307 01d2 07F11C03 		add	r3, r7, #28
 308 01d6 0CCB     		ldmia	r3, {r2, r3}
 309 01d8 FFF7FEFF 		bl	QUEUE_add
  91:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &BALLSORTER_run_command, (QUEUE_arg_t){msg->data[0], BALLSORTER_CS_DetectCh
 310              		.loc 1 91 0
 311 01dc 7B68     		ldr	r3, [r7, #4]
 312 01de 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 313 01e0 87F82430 		strb	r3, [r7, #36]
 314 01e4 4FF00403 		mov	r3, #4
 315 01e8 FB84     		strh	r3, [r7, #38]	@ movhi
 316 01ea 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResultIfFail
 317 01ee C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResultIfFail
 318 01f2 BB62     		str	r3, [r7, #40]
 319 01f4 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 320 01f8 4FF00302 		mov	r2, #3
 321 01fc 0092     		str	r2, [sp, #0]
 322 01fe 1846     		mov	r0, r3
 323 0200 40F20001 		movw	r1, #:lower16:BALLSORTER_run_command
 324 0204 C0F20001 		movt	r1, #:upper16:BALLSORTER_run_command
 325 0208 07F12403 		add	r3, r7, #36
 326 020c 0CCB     		ldmia	r3, {r2, r3}
 327 020e FFF7FEFF 		bl	QUEUE_add
  92:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &BALLSORTER_run_command, (QUEUE_arg_t){msg->data[0], BALLSORTER_CS_CheckLau
 328              		.loc 1 92 0
 329 0212 7B68     		ldr	r3, [r7, #4]
 330 0214 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 331 0216 87F82C30 		strb	r3, [r7, #44]
 332 021a 4FF00003 		mov	r3, #0
 333 021e FB85     		strh	r3, [r7, #46]	@ movhi
 334 0220 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResultIfFail
 335 0224 C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResultIfFail
 336 0228 3B63     		str	r3, [r7, #48]
 337 022a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 338 022e 4FF00302 		mov	r2, #3
 339 0232 0092     		str	r2, [sp, #0]
 340 0234 1846     		mov	r0, r3
 341 0236 40F20001 		movw	r1, #:lower16:BALLSORTER_run_command
 342 023a C0F20001 		movt	r1, #:upper16:BALLSORTER_run_command
 343 023e 07F12C03 		add	r3, r7, #44
 344 0242 0CCB     		ldmia	r3, {r2, r3}
 345 0244 FFF7FEFF 		bl	QUEUE_add
  93:../Krusty/KBall_sorter.c **** 					if((msg->data[2] & 0x80) == 0)	//Rétrocompatibilité avec ancien msg
 346              		.loc 1 93 0
 347 0248 7B68     		ldr	r3, [r7, #4]
 348 024a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 349 024c DBB2     		uxtb	r3, r3
 350 024e 5BB2     		sxtb	r3, r3
 351 0250 002B     		cmp	r3, #0
 352 0252 07DB     		blt	.L13
  94:../Krusty/KBall_sorter.c **** 						launch_cherry = TRUE;		//On choisi si on ne doit pas garder les cerises blanches ...
 353              		.loc 1 94 0
 354 0254 40F20003 		movw	r3, #:lower16:launch_cherry
 355 0258 C0F20003 		movt	r3, #:upper16:launch_cherry
 356 025c 4FF00102 		mov	r2, #1
 357 0260 1A70     		strb	r2, [r3, #0]
 358 0262 06E0     		b	.L14
 359              	.L13:
  95:../Krusty/KBall_sorter.c **** 					else launch_cherry = FALSE;		//... On lance toujours les cerises mauvaises
 360              		.loc 1 95 0
 361 0264 40F20003 		movw	r3, #:lower16:launch_cherry
 362 0268 C0F20003 		movt	r3, #:upper16:launch_cherry
 363 026c 4FF00002 		mov	r2, #0
 364 0270 1A70     		strb	r2, [r3, #0]
 365              	.L14:
  96:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &BALLSORTER_run_command, (QUEUE_arg_t){msg->data[0], BALLSORTER_CS_EjectChe
 366              		.loc 1 96 0
 367 0272 7B68     		ldr	r3, [r7, #4]
 368 0274 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 369 0276 87F83430 		strb	r3, [r7, #52]
 370 027a 4FF00103 		mov	r3, #1
 371 027e FB86     		strh	r3, [r7, #54]	@ movhi
 372 0280 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResult
 373 0284 C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResult
 374 0288 BB63     		str	r3, [r7, #56]
 375 028a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 376 028e 4FF00302 		mov	r2, #3
 377 0292 0092     		str	r2, [sp, #0]
 378 0294 1846     		mov	r0, r3
 379 0296 40F20001 		movw	r1, #:lower16:BALLSORTER_run_command
 380 029a C0F20001 		movt	r1, #:upper16:BALLSORTER_run_command
 381 029e 07F13403 		add	r3, r7, #52
 382 02a2 0CCB     		ldmia	r3, {r2, r3}
 383 02a4 FFF7FEFF 		bl	QUEUE_add
  97:../Krusty/KBall_sorter.c **** 					QUEUE_add(queueId, &QUEUE_give_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_BallSorter);
 384              		.loc 1 97 0
 385 02a8 4FF00003 		mov	r3, #0
 386 02ac 87F83C30 		strb	r3, [r7, #60]
 387 02b0 4FF00003 		mov	r3, #0
 388 02b4 FB87     		strh	r3, [r7, #62]	@ movhi
 389 02b6 4FF00003 		mov	r3, #0
 390 02ba 3B64     		str	r3, [r7, #64]
 391 02bc 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 392 02c0 4FF00302 		mov	r2, #3
 393 02c4 0092     		str	r2, [sp, #0]
 394 02c6 1846     		mov	r0, r3
 395 02c8 40F20001 		movw	r1, #:lower16:QUEUE_give_sem
 396 02cc C0F20001 		movt	r1, #:upper16:QUEUE_give_sem
 397 02d0 07F13C03 		add	r3, r7, #60
 398 02d4 0CCB     		ldmia	r3, {r2, r3}
 399 02d6 FFF7FEFF 		bl	QUEUE_add
  98:../Krusty/KBall_sorter.c **** 				} else {	//on indique qu'on a pas géré la commande
  99:../Krusty/KBall_sorter.c **** 					ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RE
 100:../Krusty/KBall_sorter.c **** 				}
 101:../Krusty/KBall_sorter.c **** 				break;
 400              		.loc 1 101 0
 401 02da 1AE0     		b	.L16
 402              	.L12:
  99:../Krusty/KBall_sorter.c **** 					ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RE
 403              		.loc 1 99 0
 404 02dc 7B68     		ldr	r3, [r7, #4]
 405 02de 1A88     		ldrh	r2, [r3, #0]
 406 02e0 7B68     		ldr	r3, [r7, #4]
 407 02e2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 408 02e4 4FF06301 		mov	r1, #99
 409 02e8 0091     		str	r1, [sp, #0]
 410 02ea 1046     		mov	r0, r2
 411 02ec 1946     		mov	r1, r3
 412 02ee 4FF00202 		mov	r2, #2
 413 02f2 4FF00503 		mov	r3, #5
 414 02f6 FFF7FEFF 		bl	ACTQ_sendResultWitExplicitLine
 415              		.loc 1 101 0
 416 02fa 0AE0     		b	.L16
 417              	.L18:
 102:../Krusty/KBall_sorter.c **** 
 103:../Krusty/KBall_sorter.c **** 			default:
 104:../Krusty/KBall_sorter.c **** 				warn_printf("invalid CAN msg data[0]=%u !\n", msg->data[0]);
 418              		.loc 1 104 0
 419 02fc 7B68     		ldr	r3, [r7, #4]
 420 02fe 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 421 0300 4FF00300 		mov	r0, #3
 422 0304 40F20001 		movw	r1, #:lower16:.LC2
 423 0308 C0F20001 		movt	r1, #:upper16:.LC2
 424 030c 1A46     		mov	r2, r3
 425 030e FFF7FEFF 		bl	OUTPUTLOG_printf
 426              	.L16:
 105:../Krusty/KBall_sorter.c **** 		}
 106:../Krusty/KBall_sorter.c **** 		return TRUE;
 427              		.loc 1 106 0
 428 0312 4FF00103 		mov	r3, #1
 429 0316 01E0     		b	.L17
 430              	.L9:
 107:../Krusty/KBall_sorter.c **** 	}
 108:../Krusty/KBall_sorter.c **** 
 109:../Krusty/KBall_sorter.c **** 	return FALSE;
 431              		.loc 1 109 0
 432 0318 4FF00003 		mov	r3, #0
 433              	.L17:
 110:../Krusty/KBall_sorter.c **** }
 434              		.loc 1 110 0
 435 031c 1846     		mov	r0, r3
 436 031e 07F14807 		add	r7, r7, #72
 437 0322 BD46     		mov	sp, r7
 438 0324 80BD     		pop	{r7, pc}
 439              		.cfi_endproc
 440              	.LFE114:
 442              		.section	.rodata
 443 0062 0000     		.align	2
 444              	.LC3:
 445 0064 42533A20 		.ascii	"BS: invalid translation command: %u, code is broken"
 445      696E7661 
 445      6C696420 
 445      7472616E 
 445      736C6174 
 446 0097 20210A00 		.ascii	" !\012\000"
 447 009b 00       		.align	2
 448              	.LC4:
 449 009c 42533A20 		.ascii	"BS: state: %d, ax12 pos: %d\012\000"
 449      73746174 
 449      653A2025 
 449      642C2061 
 449      78313220 
 450 00b9 000000   		.align	2
 451              	.LC5:
 452 00bc 42533A20 		.ascii	"BS: Invalid command: %u, code is broken !\012\000"
 452      496E7661 
 452      6C696420 
 452      636F6D6D 
 452      616E643A 
 453 00e7 00       		.align	2
 454              	.LC6:
 455 00e8 42533A20 		.ascii	"BS: invalid AX12 position: %u, code is broken !\012"
 455      696E7661 
 455      6C696420 
 455      41583132 
 455      20706F73 
 456 0118 00       		.ascii	"\000"
 457 0119 000000   		.align	2
 458              	.LC7:
 459 011c 42533A20 		.ascii	"BS: AX12 moveto %d\012\000"
 459      41583132 
 459      206D6F76 
 459      65746F20 
 459      25640A00 
 460              		.align	2
 461              	.LC8:
 462 0130 42533A20 		.ascii	"BS: AX12_set_position error: 0x%x\012\000"
 462      41583132 
 462      5F736574 
 462      5F706F73 
 462      6974696F 
 463 0153 00       		.text
 464 0326 00BF     		.align	2
 465              		.global	BALLSORTER_run_command
 466              		.thumb
 467              		.thumb_func
 469              	BALLSORTER_run_command:
 470              	.LFB115:
 111:../Krusty/KBall_sorter.c **** 
 112:../Krusty/KBall_sorter.c **** void BALLSORTER_run_command(queue_id_t queueId, bool_e init) {
 471              		.loc 1 112 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 40
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0328 90B5     		push	{r4, r7, lr}
 476              	.LCFI9:
 477              		.cfi_def_cfa_offset 12
 478              		.cfi_offset 4, -12
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 032a 91B0     		sub	sp, sp, #68
 482              	.LCFI10:
 483              		.cfi_def_cfa_offset 80
 484 032c 06AF     		add	r7, sp, #24
 485              	.LCFI11:
 486              		.cfi_def_cfa 7, 56
 487 032e 0246     		mov	r2, r0
 488 0330 0B46     		mov	r3, r1
 489 0332 FA73     		strb	r2, [r7, #15]
 490 0334 BB73     		strb	r3, [r7, #14]
 113:../Krusty/KBall_sorter.c **** 	static Uint16 wantedPosition;
 114:../Krusty/KBall_sorter.c **** 	static clock_time_t detection_end_time; //pour attendre un certain temps sur la position detect de
 115:../Krusty/KBall_sorter.c **** 	BALLSORTER_command_state_e state = QUEUE_get_arg(queueId)->param;
 491              		.loc 1 115 0
 492 0336 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493 0338 1846     		mov	r0, r3
 494 033a FFF7FEFF 		bl	QUEUE_get_arg
 495 033e 0346     		mov	r3, r0
 496 0340 5B88     		ldrh	r3, [r3, #2]
 497 0342 87F82630 		strb	r3, [r7, #38]
 116:../Krusty/KBall_sorter.c **** 
 117:../Krusty/KBall_sorter.c **** 	if(QUEUE_get_act(queueId) == QUEUE_ACT_BallSorter) {    // Gestion des mouvements de rotation de l
 498              		.loc 1 117 0
 499 0346 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 500 0348 1846     		mov	r0, r3
 501 034a FFF7FEFF 		bl	QUEUE_get_act
 502 034e 0346     		mov	r3, r0
 503 0350 032B     		cmp	r3, #3
 504 0352 40F03582 		bne	.L19
 118:../Krusty/KBall_sorter.c **** 		if(QUEUE_has_error(queueId)) {
 505              		.loc 1 118 0
 506 0356 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 507 0358 1846     		mov	r0, r3
 508 035a FFF7FEFF 		bl	QUEUE_has_error
 509 035e 0346     		mov	r3, r0
 510 0360 002B     		cmp	r3, #0
 511 0362 04D0     		beq	.L21
 119:../Krusty/KBall_sorter.c **** 			QUEUE_behead(queueId);
 512              		.loc 1 119 0
 513 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 514 0366 1846     		mov	r0, r3
 515 0368 FFF7FEFF 		bl	QUEUE_behead
 120:../Krusty/KBall_sorter.c **** 			return;
 516              		.loc 1 120 0
 517 036c 28E2     		b	.L19
 518              	.L21:
 121:../Krusty/KBall_sorter.c **** 		}
 122:../Krusty/KBall_sorter.c **** 
 123:../Krusty/KBall_sorter.c **** 		if(init) {
 519              		.loc 1 123 0
 520 036e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 521 0370 002B     		cmp	r3, #0
 522 0372 00F03481 		beq	.L22
 523              	.LBB2:
 124:../Krusty/KBall_sorter.c **** 			Uint8 command = QUEUE_get_arg(queueId)->canCommand;
 524              		.loc 1 124 0
 525 0376 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 526 0378 1846     		mov	r0, r3
 527 037a FFF7FEFF 		bl	QUEUE_get_arg
 528 037e 0346     		mov	r3, r0
 529 0380 1B78     		ldrb	r3, [r3, #0]
 530 0382 87F82530 		strb	r3, [r7, #37]
 125:../Krusty/KBall_sorter.c **** 
 126:../Krusty/KBall_sorter.c **** 			wantedPosition = 0xFFFF;
 531              		.loc 1 126 0
 532 0386 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 533 038a C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 534 038e 4FF6FF72 		movw	r2, #65535
 535 0392 1A80     		strh	r2, [r3, #0]	@ movhi
 127:../Krusty/KBall_sorter.c **** 
 128:../Krusty/KBall_sorter.c **** 			if(command != ACT_BALLSORTER_TAKE_NEXT_CHERRY) {
 536              		.loc 1 128 0
 537 0394 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 538 0398 002B     		cmp	r3, #0
 539 039a 18D0     		beq	.L23
 129:../Krusty/KBall_sorter.c **** 				error_printf("invalid translation command: %u, code is broken !\n", command);
 540              		.loc 1 129 0
 541 039c 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 542 03a0 4FF00200 		mov	r0, #2
 543 03a4 40F20001 		movw	r1, #:lower16:.LC3
 544 03a8 C0F20001 		movt	r1, #:upper16:.LC3
 545 03ac 1A46     		mov	r2, r3
 546 03ae FFF7FEFF 		bl	OUTPUTLOG_printf
 130:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_LOGIC, __LINE__);
 547              		.loc 1 130 0
 548 03b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 549 03b4 4FF08202 		mov	r2, #130
 550 03b8 0092     		str	r2, [sp, #0]
 551 03ba 1846     		mov	r0, r3
 552 03bc 40F21331 		movw	r1, #787
 553 03c0 4FF00202 		mov	r2, #2
 554 03c4 4FF00403 		mov	r3, #4
 555 03c8 FFF7FEFF 		bl	QUEUE_next
 131:../Krusty/KBall_sorter.c **** 				return;
 556              		.loc 1 131 0
 557 03cc F8E1     		b	.L19
 558              	.L23:
 132:../Krusty/KBall_sorter.c **** 			}
 133:../Krusty/KBall_sorter.c **** 
 134:../Krusty/KBall_sorter.c **** 			debug_printf("state: %d, ax12 pos: %d\n", state, AX12_get_position(BALLSORTER_AX12_ID));
 559              		.loc 1 134 0
 560 03ce 97F82640 		ldrb	r4, [r7, #38]	@ zero_extendqisi2
 561 03d2 4FF00500 		mov	r0, #5
 562 03d6 FFF7FEFF 		bl	AX12_get_position
 563 03da 0346     		mov	r3, r0
 564 03dc 4FF00500 		mov	r0, #5
 565 03e0 40F20001 		movw	r1, #:lower16:.LC4
 566 03e4 C0F20001 		movt	r1, #:upper16:.LC4
 567 03e8 2246     		mov	r2, r4
 568 03ea FFF7FEFF 		bl	OUTPUTLOG_printf
 135:../Krusty/KBall_sorter.c **** 
 136:../Krusty/KBall_sorter.c **** 			//Si on a déjà pris une cerise, on en reprendre pas une autre
 137:../Krusty/KBall_sorter.c **** 			if(cherry_taken == TRUE && (state == BALLSORTER_CS_GotoNextCherry || state == BALLSORTER_CS_Take
 569              		.loc 1 137 0
 570 03ee 40F20003 		movw	r3, #:lower16:cherry_taken
 571 03f2 C0F20003 		movt	r3, #:upper16:cherry_taken
 572 03f6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 573 03f8 012B     		cmp	r3, #1
 574 03fa 15D1     		bne	.L24
 575              		.loc 1 137 0 is_stmt 0 discriminator 1
 576 03fc 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 577 0400 022B     		cmp	r3, #2
 578 0402 03D0     		beq	.L25
 579 0404 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 580 0408 032B     		cmp	r3, #3
 581 040a 0DD1     		bne	.L24
 582              	.L25:
 138:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_DONE, ACT_RESULT_ERROR_OK, __LINE__);
 583              		.loc 1 138 0 is_stmt 1
 584 040c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 585 040e 4FF08A02 		mov	r2, #138
 586 0412 0092     		str	r2, [sp, #0]
 587 0414 1846     		mov	r0, r3
 588 0416 40F21331 		movw	r1, #787
 589 041a 4FF00002 		mov	r2, #0
 590 041e 4FF00003 		mov	r3, #0
 591 0422 FFF7FEFF 		bl	QUEUE_next
 139:../Krusty/KBall_sorter.c **** 				return;
 592              		.loc 1 139 0
 593 0426 CBE1     		b	.L19
 594              	.L24:
 140:../Krusty/KBall_sorter.c **** 			}
 141:../Krusty/KBall_sorter.c **** 
 142:../Krusty/KBall_sorter.c **** 			switch(state) {
 595              		.loc 1 142 0
 596 0428 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 597 042c 042B     		cmp	r3, #4
 598 042e 58D8     		bhi	.L26
 599 0430 01A2     		adr	r2, .L32
 600 0432 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 601 0436 00BF     		.align	2
 602              	.L32:
 603 0438 BF070000 		.word	.L48+1
 604 043c 4D040000 		.word	.L28+1
 605 0440 93040000 		.word	.L29+1
 606 0444 AF040000 		.word	.L30+1
 607 0448 CB040000 		.word	.L31+1
 608              	.L28:
 143:../Krusty/KBall_sorter.c **** 				case BALLSORTER_CS_CheckLauncherSpeed:
 144:../Krusty/KBall_sorter.c **** 					return; //La suite c'est les commandes AX12, pas d'init pour cet état, on vérifie juste si le 
 145:../Krusty/KBall_sorter.c **** 
 146:../Krusty/KBall_sorter.c **** 				case BALLSORTER_CS_EjectCherry:
 147:../Krusty/KBall_sorter.c **** 					if(launch_cherry == TRUE) {
 609              		.loc 1 147 0
 610 044c 40F20003 		movw	r3, #:lower16:launch_cherry
 611 0450 C0F20003 		movt	r3, #:upper16:launch_cherry
 612 0454 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 613 0456 012B     		cmp	r3, #1
 614 0458 0DD1     		bne	.L33
 148:../Krusty/KBall_sorter.c **** 						AX12_set_move_to_position_speed(BALLSORTER_AX12_ID, 250);
 615              		.loc 1 148 0
 616 045a 4FF00500 		mov	r0, #5
 617 045e 4FF0FA01 		mov	r1, #250
 618 0462 FFF7FEFF 		bl	AX12_set_move_to_position_speed
 149:../Krusty/KBall_sorter.c **** 						wantedPosition = BALLSORTER_AX12_EJECT_CHERRY_POS;
 619              		.loc 1 149 0
 620 0466 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 621 046a C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 622 046e 4FF08402 		mov	r2, #132
 623 0472 1A80     		strh	r2, [r3, #0]	@ movhi
 150:../Krusty/KBall_sorter.c **** 					} else {		//Si on ne doit pas lancer la cerise, on la lance pas
 151:../Krusty/KBall_sorter.c **** 						QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_DONE, ACT_RESULT_ERROR_OK, __LINE__);
 152:../Krusty/KBall_sorter.c **** 						return;
 153:../Krusty/KBall_sorter.c **** 					}
 154:../Krusty/KBall_sorter.c **** 					break;
 624              		.loc 1 154 0
 625 0474 4EE0     		b	.L34
 626              	.L33:
 151:../Krusty/KBall_sorter.c **** 						QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_DONE, ACT_RESULT_ERROR_OK, __LINE__);
 627              		.loc 1 151 0
 628 0476 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 629 0478 4FF09702 		mov	r2, #151
 630 047c 0092     		str	r2, [sp, #0]
 631 047e 1846     		mov	r0, r3
 632 0480 40F21331 		movw	r1, #787
 633 0484 4FF00002 		mov	r2, #0
 634 0488 4FF00003 		mov	r3, #0
 635 048c FFF7FEFF 		bl	QUEUE_next
 152:../Krusty/KBall_sorter.c **** 						return;
 636              		.loc 1 152 0
 637 0490 96E1     		b	.L19
 638              	.L29:
 155:../Krusty/KBall_sorter.c **** 
 156:../Krusty/KBall_sorter.c **** 				case BALLSORTER_CS_GotoNextCherry:
 157:../Krusty/KBall_sorter.c **** 					AX12_set_move_to_position_speed(BALLSORTER_AX12_ID, 500);
 639              		.loc 1 157 0
 640 0492 4FF00500 		mov	r0, #5
 641 0496 4FF4FA71 		mov	r1, #500
 642 049a FFF7FEFF 		bl	AX12_set_move_to_position_speed
 158:../Krusty/KBall_sorter.c **** 					wantedPosition = BALLSORTER_AX12_NEXT_CHERRY_POS;
 643              		.loc 1 158 0
 644 049e 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 645 04a2 C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 646 04a6 4FF0FA02 		mov	r2, #250
 647 04aa 1A80     		strh	r2, [r3, #0]	@ movhi
 159:../Krusty/KBall_sorter.c **** 					break;
 648              		.loc 1 159 0
 649 04ac 32E0     		b	.L34
 650              	.L30:
 160:../Krusty/KBall_sorter.c **** 
 161:../Krusty/KBall_sorter.c **** 				case BALLSORTER_CS_TakeCherry:
 162:../Krusty/KBall_sorter.c **** 					AX12_set_move_to_position_speed(BALLSORTER_AX12_ID, 150);
 651              		.loc 1 162 0
 652 04ae 4FF00500 		mov	r0, #5
 653 04b2 4FF09601 		mov	r1, #150
 654 04b6 FFF7FEFF 		bl	AX12_set_move_to_position_speed
 163:../Krusty/KBall_sorter.c **** 					wantedPosition = BALLSORTER_AX12_DETECT_CHERRY_POS;
 655              		.loc 1 163 0
 656 04ba 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 657 04be C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 658 04c2 4FF0B702 		mov	r2, #183
 659 04c6 1A80     		strh	r2, [r3, #0]	@ movhi
 164:../Krusty/KBall_sorter.c **** 					break;
 660              		.loc 1 164 0
 661 04c8 24E0     		b	.L34
 662              	.L31:
 165:../Krusty/KBall_sorter.c **** 
 166:../Krusty/KBall_sorter.c **** 				case BALLSORTER_CS_DetectCherry:
 167:../Krusty/KBall_sorter.c **** 					detection_end_time = CLOCK_get_time() + BALLSORTER_DETECT_TIME;
 663              		.loc 1 167 0
 664 04ca FFF7FEFF 		bl	CLOCK_get_time
 665 04ce 0346     		mov	r3, r0
 666 04d0 03F10203 		add	r3, r3, #2
 667 04d4 9AB2     		uxth	r2, r3
 668 04d6 40F20003 		movw	r3, #:lower16:detection_end_time.6499
 669 04da C0F20003 		movt	r3, #:upper16:detection_end_time.6499
 670 04de 1A80     		strh	r2, [r3, #0]	@ movhi
 168:../Krusty/KBall_sorter.c **** 					return; //La suite c'est les commandes AX12
 671              		.loc 1 168 0
 672 04e0 6EE1     		b	.L19
 673              	.L26:
 169:../Krusty/KBall_sorter.c **** 
 170:../Krusty/KBall_sorter.c **** 				default: {
 171:../Krusty/KBall_sorter.c **** 					error_printf("Invalid command: %u, code is broken !\n", command);
 674              		.loc 1 171 0
 675 04e2 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 676 04e6 4FF00200 		mov	r0, #2
 677 04ea 40F20001 		movw	r1, #:lower16:.LC5
 678 04ee C0F20001 		movt	r1, #:upper16:.LC5
 679 04f2 1A46     		mov	r2, r3
 680 04f4 FFF7FEFF 		bl	OUTPUTLOG_printf
 172:../Krusty/KBall_sorter.c **** 					QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_LOGIC, __LINE__);
 681              		.loc 1 172 0
 682 04f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 683 04fa 4FF0AC02 		mov	r2, #172
 684 04fe 0092     		str	r2, [sp, #0]
 685 0500 1846     		mov	r0, r3
 686 0502 40F21331 		movw	r1, #787
 687 0506 4FF00202 		mov	r2, #2
 688 050a 4FF00403 		mov	r3, #4
 689 050e FFF7FEFF 		bl	QUEUE_next
 173:../Krusty/KBall_sorter.c **** 					return;
 690              		.loc 1 173 0
 691 0512 55E1     		b	.L19
 692              	.L34:
 174:../Krusty/KBall_sorter.c **** 				}
 175:../Krusty/KBall_sorter.c **** 			}
 176:../Krusty/KBall_sorter.c **** 
 177:../Krusty/KBall_sorter.c **** 			if(wantedPosition == 0xFFFF) {
 693              		.loc 1 177 0
 694 0514 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 695 0518 C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 696 051c 1A88     		ldrh	r2, [r3, #0]
 697 051e 4FF6FF73 		movw	r3, #65535
 698 0522 9A42     		cmp	r2, r3
 699 0524 18D1     		bne	.L35
 178:../Krusty/KBall_sorter.c **** 				error_printf("invalid AX12 position: %u, code is broken !\n", command);
 700              		.loc 1 178 0
 701 0526 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 702 052a 4FF00200 		mov	r0, #2
 703 052e 40F20001 		movw	r1, #:lower16:.LC6
 704 0532 C0F20001 		movt	r1, #:upper16:.LC6
 705 0536 1A46     		mov	r2, r3
 706 0538 FFF7FEFF 		bl	OUTPUTLOG_printf
 179:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_LOGIC, __LINE__);
 707              		.loc 1 179 0
 708 053c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 709 053e 4FF0B302 		mov	r2, #179
 710 0542 0092     		str	r2, [sp, #0]
 711 0544 1846     		mov	r0, r3
 712 0546 40F21331 		movw	r1, #787
 713 054a 4FF00202 		mov	r2, #2
 714 054e 4FF00403 		mov	r3, #4
 715 0552 FFF7FEFF 		bl	QUEUE_next
 180:../Krusty/KBall_sorter.c **** 				return;
 716              		.loc 1 180 0
 717 0556 33E1     		b	.L19
 718              	.L35:
 181:../Krusty/KBall_sorter.c **** 			}
 182:../Krusty/KBall_sorter.c **** 
 183:../Krusty/KBall_sorter.c **** 			debug_printf("AX12 moveto %d\n", wantedPosition);
 719              		.loc 1 183 0
 720 0558 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 721 055c C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 722 0560 1B88     		ldrh	r3, [r3, #0]
 723 0562 4FF00500 		mov	r0, #5
 724 0566 40F20001 		movw	r1, #:lower16:.LC7
 725 056a C0F20001 		movt	r1, #:upper16:.LC7
 726 056e 1A46     		mov	r2, r3
 727 0570 FFF7FEFF 		bl	OUTPUTLOG_printf
 184:../Krusty/KBall_sorter.c **** 			AX12_reset_last_error(BALLSORTER_AX12_ID); //Sécurité anti terroriste. Nous les parano on aime p
 728              		.loc 1 184 0
 729 0574 4FF00500 		mov	r0, #5
 730 0578 FFF7FEFF 		bl	AX12_reset_last_error
 185:../Krusty/KBall_sorter.c **** 			if(!AX12_set_position(BALLSORTER_AX12_ID, wantedPosition)) {	//Si la commande n'a pas été envoyé
 731              		.loc 1 185 0
 732 057c 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 733 0580 C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 734 0584 1B88     		ldrh	r3, [r3, #0]
 735 0586 4FF00500 		mov	r0, #5
 736 058a 1946     		mov	r1, r3
 737 058c FFF7FEFF 		bl	AX12_set_position
 738 0590 0346     		mov	r3, r0
 739 0592 002B     		cmp	r3, #0
 740 0594 40F01481 		bne	.L19
 186:../Krusty/KBall_sorter.c **** 				error_printf("AX12_set_position error: 0x%x\n", AX12_get_last_error(BALLSORTER_AX12_ID).error);
 741              		.loc 1 186 0
 742 0598 4FF00500 		mov	r0, #5
 743 059c FFF7FEFF 		bl	AX12_get_last_error
 744 05a0 3880     		strh	r0, [r7, #0]	@ movhi
 745 05a2 C0F30F43 		ubfx	r3, r0, #16, #16
 746 05a6 7B80     		strh	r3, [r7, #2]	@ movhi
 747 05a8 3B68     		ldr	r3, [r7, #0]
 748 05aa 3B62     		str	r3, [r7, #32]
 749 05ac 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 750 05b0 4FF00200 		mov	r0, #2
 751 05b4 40F20001 		movw	r1, #:lower16:.LC8
 752 05b8 C0F20001 		movt	r1, #:upper16:.LC8
 753 05bc 1A46     		mov	r2, r3
 754 05be FFF7FEFF 		bl	OUTPUTLOG_printf
 187:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_FAILED, ACT_RESULT_ERROR_NOT_HERE, __LINE__);
 755              		.loc 1 187 0
 756 05c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 757 05c4 4FF0BB02 		mov	r2, #187
 758 05c8 0092     		str	r2, [sp, #0]
 759 05ca 1846     		mov	r0, r3
 760 05cc 40F21331 		movw	r1, #787
 761 05d0 4FF00102 		mov	r2, #1
 762 05d4 4FF00303 		mov	r3, #3
 763 05d8 FFF7FEFF 		bl	QUEUE_next
 188:../Krusty/KBall_sorter.c **** 				return;
 764              		.loc 1 188 0
 765 05dc F0E0     		b	.L19
 766              	.L22:
 767              	.LBE2:
 189:../Krusty/KBall_sorter.c **** 			}
 190:../Krusty/KBall_sorter.c **** 		} else if(state == BALLSORTER_CS_CheckLauncherSpeed) {
 768              		.loc 1 190 0
 769 05de 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 770 05e2 002B     		cmp	r3, #0
 771 05e4 2BD1     		bne	.L36
 772              	.LBB3:
 191:../Krusty/KBall_sorter.c **** 			DCM_working_state_e ball_launcher_state = DCM_get_state(BALLLAUNCHER_DCMOTOR_ID);
 773              		.loc 1 191 0
 774 05e6 4FF00000 		mov	r0, #0
 775 05ea FFF7FEFF 		bl	DCM_get_state
 776 05ee 0346     		mov	r3, r0
 777 05f0 87F82430 		strb	r3, [r7, #36]
 192:../Krusty/KBall_sorter.c **** 			//Tant que on a pas atteint la bonne vitesse du lanceur de balle
 193:../Krusty/KBall_sorter.c **** 			//On ne passe pas a l'état suivant qui envoie la cerise dans le lanceur pour être éjectée dans l
 194:../Krusty/KBall_sorter.c **** 			if(ball_launcher_state == DCM_IDLE) {
 778              		.loc 1 194 0
 779 05f4 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 780 05f8 002B     		cmp	r3, #0
 781 05fa 0DD1     		bne	.L37
 195:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_DONE, ACT_RESULT_ERROR_OK, __LINE__);
 782              		.loc 1 195 0
 783 05fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 784 05fe 4FF0C302 		mov	r2, #195
 785 0602 0092     		str	r2, [sp, #0]
 786 0604 1846     		mov	r0, r3
 787 0606 40F21331 		movw	r1, #787
 788 060a 4FF00002 		mov	r2, #0
 789 060e 4FF00003 		mov	r3, #0
 790 0612 FFF7FEFF 		bl	QUEUE_next
 791 0616 D3E0     		b	.L19
 792              	.L37:
 196:../Krusty/KBall_sorter.c **** 			} else if(ball_launcher_state == DCM_TIMEOUT) {
 793              		.loc 1 196 0
 794 0618 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 795 061c 022B     		cmp	r3, #2
 796 061e 40F0CF80 		bne	.L19
 197:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_FAILED, ACT_RESULT_ERROR_TIMEOUT, __LINE__);
 797              		.loc 1 197 0
 798 0622 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 799 0624 4FF0C502 		mov	r2, #197
 800 0628 0092     		str	r2, [sp, #0]
 801 062a 1846     		mov	r0, r3
 802 062c 40F21331 		movw	r1, #787
 803 0630 4FF00102 		mov	r2, #1
 804 0634 4FF00103 		mov	r3, #1
 805 0638 FFF7FEFF 		bl	QUEUE_next
 806 063c C0E0     		b	.L19
 807              	.L36:
 808              	.LBE3:
 198:../Krusty/KBall_sorter.c **** 			}
 199:../Krusty/KBall_sorter.c **** 		} else if(state != BALLSORTER_CS_DetectCherry) {
 809              		.loc 1 199 0
 810 063e 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 811 0642 042B     		cmp	r3, #4
 812 0644 36D0     		beq	.L38
 813              	.LBB4:
 200:../Krusty/KBall_sorter.c **** 			Uint16 line;
 201:../Krusty/KBall_sorter.c **** 			Uint8 result, errorCode;
 202:../Krusty/KBall_sorter.c **** 
 203:../Krusty/KBall_sorter.c **** 			if(state == BALLSORTER_CS_EjectCherry) {
 814              		.loc 1 203 0
 815 0646 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 816 064a 012B     		cmp	r3, #1
 817 064c 06D1     		bne	.L39
 204:../Krusty/KBall_sorter.c **** 				cherry_taken = FALSE;
 818              		.loc 1 204 0
 819 064e 40F20003 		movw	r3, #:lower16:cherry_taken
 820 0652 C0F20003 		movt	r3, #:upper16:cherry_taken
 821 0656 4FF00002 		mov	r2, #0
 822 065a 1A70     		strb	r2, [r3, #0]
 823              	.L39:
 205:../Krusty/KBall_sorter.c **** 			}
 206:../Krusty/KBall_sorter.c **** 
 207:../Krusty/KBall_sorter.c **** 			if(ACTQ_check_status_ax12(queueId, BALLSORTER_AX12_ID, wantedPosition, BALLSORTER_AX12_ASSER_POS
 824              		.loc 1 207 0
 825 065c 40F20003 		movw	r3, #:lower16:wantedPosition.6498
 826 0660 C0F20003 		movt	r3, #:upper16:wantedPosition.6498
 827 0664 1B88     		ldrh	r3, [r3, #0]
 828 0666 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 829 0668 4FF00A01 		mov	r1, #10
 830 066c 0091     		str	r1, [sp, #0]
 831 066e 4FF00A01 		mov	r1, #10
 832 0672 0191     		str	r1, [sp, #4]
 833 0674 07F11D01 		add	r1, r7, #29
 834 0678 0291     		str	r1, [sp, #8]
 835 067a 07F11C01 		add	r1, r7, #28
 836 067e 0391     		str	r1, [sp, #12]
 837 0680 07F11E01 		add	r1, r7, #30
 838 0684 0491     		str	r1, [sp, #16]
 839 0686 1046     		mov	r0, r2
 840 0688 4FF00501 		mov	r1, #5
 841 068c 1A46     		mov	r2, r3
 842 068e 4FF00203 		mov	r3, #2
 843 0692 FFF7FEFF 		bl	ACTQ_check_status_ax12
 844 0696 0346     		mov	r3, r0
 845 0698 002B     		cmp	r3, #0
 846 069a 00F09180 		beq	.L19
 208:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, result, errorCode, line);
 847              		.loc 1 208 0
 848 069e 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 849 06a0 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 850 06a2 F88B     		ldrh	r0, [r7, #30]
 851 06a4 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 852 06a6 0090     		str	r0, [sp, #0]
 853 06a8 0846     		mov	r0, r1
 854 06aa 40F21331 		movw	r1, #787
 855 06ae FFF7FEFF 		bl	QUEUE_next
 856 06b2 85E0     		b	.L19
 857              	.L38:
 858              	.LBE4:
 209:../Krusty/KBall_sorter.c **** 
 210:../Krusty/KBall_sorter.c **** 		} else { //BALLSORTER_CS_DetectCherry
 211:../Krusty/KBall_sorter.c **** 			if(CLOCK_get_time() > detection_end_time) {   //Envoyer le message du resultat de la detection q
 859              		.loc 1 211 0
 860 06b4 FFF7FEFF 		bl	CLOCK_get_time
 861 06b8 0346     		mov	r3, r0
 862 06ba 1A46     		mov	r2, r3
 863 06bc 40F20003 		movw	r3, #:lower16:detection_end_time.6499
 864 06c0 C0F20003 		movt	r3, #:upper16:detection_end_time.6499
 865 06c4 1B88     		ldrh	r3, [r3, #0]
 866 06c6 9A42     		cmp	r2, r3
 867 06c8 7AD9     		bls	.L19
 868              	.LBB5:
 212:../Krusty/KBall_sorter.c **** 				Uint8 cherry_color;
 213:../Krusty/KBall_sorter.c **** #ifndef BALLSORTER_USE_SICK_SENSOR
 214:../Krusty/KBall_sorter.c **** 				if(BALLSORTER_SENSOR_PIN == BALLSORTER_SENSOR_DETECTED_LEVEL)
 215:../Krusty/KBall_sorter.c **** 					cherry_color = ACT_BALLSORTER_WHITE_CHERRY;
 216:../Krusty/KBall_sorter.c **** 				else cherry_color = ACT_BALLSORTER_NO_CHERRY;
 217:../Krusty/KBall_sorter.c **** #else
 218:../Krusty/KBall_sorter.c **** 
 219:../Krusty/KBall_sorter.c **** 				if(BALLSORTER_SENSOR_PIN_WHITE_CHERRY == BALLSORTER_SENSOR_DETECTED_LEVEL)
 869              		.loc 1 219 0
 870 06ca 4FF48063 		mov	r3, #1024
 871 06ce C4F20203 		movt	r3, 16386
 872 06d2 5B69     		ldr	r3, [r3, #20]
 873 06d4 03F48053 		and	r3, r3, #4096
 874 06d8 002B     		cmp	r3, #0
 875 06da 04D1     		bne	.L41
 220:../Krusty/KBall_sorter.c **** 					cherry_color = ACT_BALLSORTER_WHITE_CHERRY;
 876              		.loc 1 220 0
 877 06dc 4FF00003 		mov	r3, #0
 878 06e0 87F82730 		strb	r3, [r7, #39]
 879 06e4 1AE0     		b	.L42
 880              	.L41:
 221:../Krusty/KBall_sorter.c **** 				else if(BALLSORTER_SENSOR_PIN_RED_CHERRY == BALLSORTER_SENSOR_DETECTED_LEVEL || BALLSORTER_SENS
 881              		.loc 1 221 0
 882 06e6 4FF48063 		mov	r3, #1024
 883 06ea C4F20203 		movt	r3, 16386
 884 06ee 5B69     		ldr	r3, [r3, #20]
 885 06f0 03F40053 		and	r3, r3, #8192
 886 06f4 002B     		cmp	r3, #0
 887 06f6 08D0     		beq	.L43
 888              		.loc 1 221 0 is_stmt 0 discriminator 1
 889 06f8 4FF48063 		mov	r3, #1024
 890 06fc C4F20203 		movt	r3, 16386
 891 0700 5B69     		ldr	r3, [r3, #20]
 892 0702 03F48043 		and	r3, r3, #16384
 893 0706 002B     		cmp	r3, #0
 894 0708 04D1     		bne	.L44
 895              	.L43:
 222:../Krusty/KBall_sorter.c **** 					cherry_color = ACT_BALLSORTER_BAD_CHERRY;
 896              		.loc 1 222 0 is_stmt 1
 897 070a 4FF00203 		mov	r3, #2
 898 070e 87F82730 		strb	r3, [r7, #39]
 899 0712 03E0     		b	.L42
 900              	.L44:
 223:../Krusty/KBall_sorter.c **** 				else cherry_color = ACT_BALLSORTER_NO_CHERRY;
 901              		.loc 1 223 0
 902 0714 4FF00103 		mov	r3, #1
 903 0718 87F82730 		strb	r3, [r7, #39]
 904              	.L42:
 224:../Krusty/KBall_sorter.c **** #endif
 225:../Krusty/KBall_sorter.c **** 
 226:../Krusty/KBall_sorter.c **** //				//FIXME on lance TOUTES les cerises
 227:../Krusty/KBall_sorter.c **** //				cherry_color = ACT_BALLSORTER_WHITE_CHERRY;
 228:../Krusty/KBall_sorter.c **** 
 229:../Krusty/KBall_sorter.c **** 				CAN_msg_t detectionResultMsg = {ACT_BALLSORTER_RESULT, {cherry_color}, 1};
 905              		.loc 1 229 0
 906 071c 07F11003 		add	r3, r7, #16
 907 0720 4FF00002 		mov	r2, #0
 908 0724 1A60     		str	r2, [r3, #0]
 909 0726 03F10403 		add	r3, r3, #4
 910 072a 4FF00002 		mov	r2, #0
 911 072e 1A60     		str	r2, [r3, #0]
 912 0730 03F10403 		add	r3, r3, #4
 913 0734 4FF00002 		mov	r2, #0
 914 0738 1A60     		str	r2, [r3, #0]
 915 073a 03F10403 		add	r3, r3, #4
 916 073e 40F23A23 		movw	r3, #570
 917 0742 3B82     		strh	r3, [r7, #16]	@ movhi
 918 0744 97F82730 		ldrb	r3, [r7, #39]
 919 0748 BB74     		strb	r3, [r7, #18]
 920 074a 4FF00103 		mov	r3, #1
 921 074e BB76     		strb	r3, [r7, #26]
 230:../Krusty/KBall_sorter.c **** 
 231:../Krusty/KBall_sorter.c **** 				if(desired_ball_launcher_speed >= 0) {
 232:../Krusty/KBall_sorter.c **** 					if(cherry_color == ACT_BALLSORTER_WHITE_CHERRY)
 922              		.loc 1 232 0
 923 0750 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 924 0754 002B     		cmp	r3, #0
 925 0756 08D1     		bne	.L45
 233:../Krusty/KBall_sorter.c **** 						BALLLAUNCHER_set_speed(desired_ball_launcher_speed);
 926              		.loc 1 233 0
 927 0758 40F20003 		movw	r3, #:lower16:desired_ball_launcher_speed
 928 075c C0F20003 		movt	r3, #:upper16:desired_ball_launcher_speed
 929 0760 1B88     		ldrh	r3, [r3, #0]
 930 0762 1846     		mov	r0, r3
 931 0764 FFF7FEFF 		bl	BALLLAUNCHER_set_speed
 932 0768 0AE0     		b	.L46
 933              	.L45:
 234:../Krusty/KBall_sorter.c **** 					else {
 235:../Krusty/KBall_sorter.c **** 						launch_cherry = TRUE;	//Dans tous les cas on lance la cerise prise si elle n'est pas bonne
 934              		.loc 1 235 0
 935 076a 40F20003 		movw	r3, #:lower16:launch_cherry
 936 076e C0F20003 		movt	r3, #:upper16:launch_cherry
 937 0772 4FF00102 		mov	r2, #1
 938 0776 1A70     		strb	r2, [r3, #0]
 236:../Krusty/KBall_sorter.c **** 						BALLLAUNCHER_set_speed(2000);
 939              		.loc 1 236 0
 940 0778 4FF4FA60 		mov	r0, #2000
 941 077c FFF7FEFF 		bl	BALLLAUNCHER_set_speed
 942              	.L46:
 237:../Krusty/KBall_sorter.c **** 					}
 238:../Krusty/KBall_sorter.c **** 				}
 239:../Krusty/KBall_sorter.c **** 
 240:../Krusty/KBall_sorter.c **** 				if(cherry_color != ACT_BALLSORTER_NO_CHERRY)
 943              		.loc 1 240 0
 944 0780 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 945 0784 012B     		cmp	r3, #1
 946 0786 06D0     		beq	.L47
 241:../Krusty/KBall_sorter.c **** 					cherry_taken = TRUE;
 947              		.loc 1 241 0
 948 0788 40F20003 		movw	r3, #:lower16:cherry_taken
 949 078c C0F20003 		movt	r3, #:upper16:cherry_taken
 950 0790 4FF00102 		mov	r2, #1
 951 0794 1A70     		strb	r2, [r3, #0]
 952              	.L47:
 242:../Krusty/KBall_sorter.c **** 
 243:../Krusty/KBall_sorter.c **** 				CAN_send(&detectionResultMsg);
 953              		.loc 1 243 0
 954 0796 07F11003 		add	r3, r7, #16
 955 079a 1846     		mov	r0, r3
 956 079c FFF7FEFF 		bl	CAN_send
 244:../Krusty/KBall_sorter.c **** 
 245:../Krusty/KBall_sorter.c **** 				QUEUE_next(queueId, ACT_BALLSORTER, ACT_RESULT_DONE, ACT_RESULT_ERROR_OK, cherry_color); //para
 957              		.loc 1 245 0
 958 07a0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 959 07a4 9AB2     		uxth	r2, r3
 960 07a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 961 07a8 0092     		str	r2, [sp, #0]
 962 07aa 1846     		mov	r0, r3
 963 07ac 40F21331 		movw	r1, #787
 964 07b0 4FF00002 		mov	r2, #0
 965 07b4 4FF00003 		mov	r3, #0
 966 07b8 FFF7FEFF 		bl	QUEUE_next
 967 07bc 00E0     		b	.L19
 968              	.L48:
 969              	.LBE5:
 970              	.LBB6:
 144:../Krusty/KBall_sorter.c **** 					return; //La suite c'est les commandes AX12, pas d'init pour cet état, on vérifie juste si le 
 971              		.loc 1 144 0
 972 07be 00BF     		nop
 973              	.L19:
 974              	.LBE6:
 246:../Krusty/KBall_sorter.c **** 			}
 247:../Krusty/KBall_sorter.c **** 		}
 248:../Krusty/KBall_sorter.c **** 	}
 249:../Krusty/KBall_sorter.c **** }
 975              		.loc 1 249 0
 976 07c0 07F12C07 		add	r7, r7, #44
 977 07c4 BD46     		mov	sp, r7
 978 07c6 90BD     		pop	{r4, r7, pc}
 979              		.cfi_endproc
 980              	.LFE115:
 982              		.bss
 983 0003 00       		.align	1
 984              	wantedPosition.6498:
 985 0004 0000     		.space	2
 986              		.align	1
 987              	detection_end_time.6499:
 988 0006 0000     		.space	2
 989              	ax12_is_initialized.6477:
 990 0008 00       		.space	1
 991              	initialized.6474:
 992 0009 00       		.space	1
 993              		.text
 994              	.Letext0:
 995              		.file 2 "c:\\program files (x86)\\eclipse-arm-eseo\\gcc-arm-none-eabi-4_7-2013q2-20130614-win32\\g
 996              		.file 3 "../stm32f4xx/stm32f4xx.h"
 997              		.file 4 "../Krusty/../QS/QS_types.h"
 998              		.file 5 "../config/config_krusty/config_global_vars_types.h"
 999              		.file 6 "../Krusty/../clock.h"
 1000              		.file 7 "../Krusty/../queue.h"
 1001              		.file 8 "../Krusty/KBall_sorter.h"
 1002              		.file 9 "../Krusty/../QS/QS_DCMotor2.h"
 1003              		.file 10 "../Krusty/../QS/QS_outputlog.h"
 1004              		.file 11 "../stm32f4xx/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 KBall_sorter.c
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:19     .bss:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:20     .bss:00000000 desired_ball_launcher_speed
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:22     .bss:00000002 cherry_taken
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:27     .data:00000000 launch_cherry
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:30     .rodata:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:31     .rodata:00000000 .LC0
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:34     .text:00000000 $t
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:39     .text:00000000 BALLSORTER_init
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:991    .bss:00000009 initialized.6474
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:96     .text:00000044 BALLSORTER_initAX12
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:89     .rodata:00000028 .LC1
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:989    .bss:00000008 ax12_is_initialized.6477
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:171    .text:000000d8 BALLSORTER_stop
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:194    .rodata:00000040 .LC2
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:202    .text:000000e4 BALLSORTER_CAN_process_msg
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:469    .text:00000328 BALLSORTER_run_command
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:444    .rodata:00000064 .LC3
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:448    .rodata:0000009c .LC4
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:451    .rodata:000000bc .LC5
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:454    .rodata:000000e8 .LC6
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:458    .rodata:0000011c .LC7
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:461    .rodata:00000130 .LC8
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:984    .bss:00000004 wantedPosition.6498
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:603    .text:00000438 $d
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:610    .text:0000044c $t
C:\Users\Amaury\AppData\Local\Temp\ccwLnWqj.s:987    .bss:00000006 detection_end_time.6499
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.13c6c37fe6ef97541a459ad1f2cd1ddb
                           .group:00000000 wm4.stm32f4xx.h.54.d172d9d6631f11a8436908e748990b53
                           .group:00000000 wm4.core_cm4.h.32.39d0f71cd333856d56f1935d9037195e
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.163.d36d54ebc869626f337c4fcb95a9b424
                           .group:00000000 wm4.stm32f4xx.h.306.7867854ab89778ccd63e1fde7c22c0b6
                           .group:00000000 wm4.stm32f4xx_rcc.h.65.29a27820bc754566c4190ed8ad1c1d80
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.7233.cb6cb3cb095c29e1fc0eb152d26090b1
                           .group:00000000 wm4.Global_config.h.14.bea53ddf4045d71f1c9fb87037131e8e
                           .group:00000000 wm4.config_global.h.12.5c30ea43d7f0d9daa101874e8ba75f6f
                           .group:00000000 wm4.config_qs.h.12.4699be7196e891fb4cd84d522e29cde7
                           .group:00000000 wm4.config_qs.h.12.8e0ab7f7cbbdaecfb1e464f5610b5d86
                           .group:00000000 wm4.QS_macro.h.19.3d2533714681986d2ad8c517737c4640
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.QS_timer.h.23.f1c7374d1ffe22793578c04386c6b1e2
                           .group:00000000 wm4.queue.h.39.c6c83c771916888b8b8278e5c5477b11
                           .group:00000000 wm4.QS_CANmsgList.h.18.4820ab5d82fa43f9421f4e5eb46c19bc
                           .group:00000000 wm4.QS_ax12.h.14.bdca40ad9d76c87d4eb8bcff38d0d363
                           .group:00000000 wm4.config_pin.h.12.92dbe1317fae649a069f2ce6e5ad725c
                           .group:00000000 wm4.config_pin.h.12.20ee5a96fdfc3c7ca3bc6056aaec7473
                           .group:00000000 wm4.KBall_sorter_config.h.13.dfa7faded9dacb8a24d99b7b707e8f27
                           .group:00000000 wm4.config_debug.h.12.ce495d07741075ca26554eb90b0ab381
                           .group:00000000 wm4.QS_outputlog.h.12.497571275ee7bc35db4cbeb19919be7a

UNDEFINED SYMBOLS
AX12_init
ADC_init
OUTPUTLOG_printf
AX12_is_ready
AX12_config_set_highest_voltage
AX12_config_set_lowest_voltage
AX12_config_set_maximum_torque_percentage
AX12_config_set_maximal_angle
AX12_config_set_minimal_angle
AX12_config_set_error_before_led
AX12_config_set_error_before_shutdown
QUEUE_create
QUEUE_take_sem
QUEUE_add
ACTQ_finish_SendResultIfFail
ACTQ_finish_SendResult
QUEUE_give_sem
ACTQ_sendResultWitExplicitLine
QUEUE_get_arg
QUEUE_get_act
QUEUE_has_error
QUEUE_behead
QUEUE_next
AX12_get_position
AX12_set_move_to_position_speed
CLOCK_get_time
AX12_reset_last_error
AX12_set_position
AX12_get_last_error
DCM_get_state
ACTQ_check_status_ax12
BALLLAUNCHER_set_speed
CAN_send
