   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"KFruit.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	FRUIT_init
  20              		.thumb
  21              		.thumb_func
  23              	FRUIT_init:
  24              	.LFB111:
  25              		.file 1 "../Krusty/KFruit.c"
   1:../Krusty/KFruit.c **** /*  Club Robot ESEO 2013 - 2014
   2:../Krusty/KFruit.c ****  *	Krusty
   3:../Krusty/KFruit.c ****  *
   4:../Krusty/KFruit.c ****  *	Fichier : Fruit.c
   5:../Krusty/KFruit.c ****  *	Package : Carte actionneur
   6:../Krusty/KFruit.c ****  *	Description : Gestion des fruit_mouths
   7:../Krusty/KFruit.c ****  *  Auteur : Amaury
   8:../Krusty/KFruit.c ****  *  Version 20130219
   9:../Krusty/KFruit.c ****  *  Robot : Krusty
  10:../Krusty/KFruit.c ****  */
  11:../Krusty/KFruit.c **** 
  12:../Krusty/KFruit.c **** #include "KFruit.h"
  13:../Krusty/KFruit.c **** #ifdef I_AM_ROBOT_KRUSTY
  14:../Krusty/KFruit.c **** 
  15:../Krusty/KFruit.c **** //#include "../QS/QS_can.h"
  16:../Krusty/KFruit.c **** #include "../QS/QS_CANmsgList.h"
  17:../Krusty/KFruit.c **** #include "../QS/QS_ax12.h"
  18:../Krusty/KFruit.c **** #include "../act_queue_utils.h"
  19:../Krusty/KFruit.c **** #include "config_pin.h"
  20:../Krusty/KFruit.c **** #include "KFruit_config.h"
  21:../Krusty/KFruit.c **** 
  22:../Krusty/KFruit.c **** #include "config_debug.h"
  23:../Krusty/KFruit.c **** #define LOG_PREFIX "FR: "
  24:../Krusty/KFruit.c **** #define LOG_COMPONENT OUTPUT_LOG_COMPONENT_FRUIT
  25:../Krusty/KFruit.c **** #include "../QS/QS_outputlog.h"
  26:../Krusty/KFruit.c **** 
  27:../Krusty/KFruit.c **** 
  28:../Krusty/KFruit.c **** static void FRUIT_initAX12();
  29:../Krusty/KFruit.c **** void FRUIT_stop();
  30:../Krusty/KFruit.c **** static void FRUIT_command_init(queue_id_t queueId);
  31:../Krusty/KFruit.c **** static void FRUIT_command_run(queue_id_t queueId);
  32:../Krusty/KFruit.c **** 
  33:../Krusty/KFruit.c **** void FRUIT_init() {
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
  34:../Krusty/KFruit.c **** 	static bool_e initialized = FALSE;
  35:../Krusty/KFruit.c **** 
  36:../Krusty/KFruit.c **** 	if(initialized)
  38              		.loc 1 36 0
  39 0004 40F20003 		movw	r3, #:lower16:initialized.6393
  40 0008 C0F20003 		movt	r3, #:upper16:initialized.6393
  41 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  42 000e 002B     		cmp	r3, #0
  43 0010 0BD1     		bne	.L4
  44              	.L2:
  37:../Krusty/KFruit.c **** 		return;
  38:../Krusty/KFruit.c **** 	initialized = TRUE;
  45              		.loc 1 38 0
  46 0012 40F20003 		movw	r3, #:lower16:initialized.6393
  47 0016 C0F20003 		movt	r3, #:upper16:initialized.6393
  48 001a 4FF00102 		mov	r2, #1
  49 001e 1A70     		strb	r2, [r3, #0]
  39:../Krusty/KFruit.c **** 
  40:../Krusty/KFruit.c **** 	AX12_init();
  50              		.loc 1 40 0
  51 0020 FFF7FEFF 		bl	AX12_init
  41:../Krusty/KFruit.c **** 	FRUIT_initAX12();
  52              		.loc 1 41 0
  53 0024 00F004F8 		bl	FRUIT_initAX12
  54 0028 00E0     		b	.L1
  55              	.L4:
  37:../Krusty/KFruit.c **** 		return;
  56              		.loc 1 37 0
  57 002a 00BF     		nop
  58              	.L1:
  42:../Krusty/KFruit.c **** }
  59              		.loc 1 42 0
  60 002c 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE111:
  64              		.section	.rodata
  65              		.align	2
  66              	.LC0:
  67 0000 46523A20 		.ascii	"FR: FRUIT_MOUTH AX12 initialis\351\012\000"
  67      46525549 
  67      545F4D4F 
  67      55544820 
  67      41583132 
  68              		.text
  69 002e 00BF     		.align	2
  70              		.thumb
  71              		.thumb_func
  73              	FRUIT_initAX12:
  74              	.LFB112:
  43:../Krusty/KFruit.c **** 
  44:../Krusty/KFruit.c **** //Initialise l'AX12 de la pince s'il n'était pas allimenté lors d'initialisations précédentes, si d
  45:../Krusty/KFruit.c **** static void FRUIT_initAX12() {
  75              		.loc 1 45 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0030 80B5     		push	{r7, lr}
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0032 00AF     		add	r7, sp, #0
  85              	.LCFI3:
  86              		.cfi_def_cfa_register 7
  46:../Krusty/KFruit.c **** 	static bool_e ax12_is_initialized = FALSE;
  47:../Krusty/KFruit.c **** 	if(ax12_is_initialized == FALSE && AX12_is_ready(FRUIT_MOUTH_AX12_ID) == TRUE) {
  87              		.loc 1 47 0
  88 0034 40F20003 		movw	r3, #:lower16:ax12_is_initialized.6396
  89 0038 C0F20003 		movt	r3, #:upper16:ax12_is_initialized.6396
  90 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  91 003e 002B     		cmp	r3, #0
  92 0040 45D1     		bne	.L5
  93              		.loc 1 47 0 is_stmt 0 discriminator 1
  94 0042 4FF00400 		mov	r0, #4
  95 0046 FFF7FEFF 		bl	AX12_is_ready
  96 004a 0346     		mov	r3, r0
  97 004c 012B     		cmp	r3, #1
  98 004e 3ED1     		bne	.L5
  48:../Krusty/KFruit.c **** 		ax12_is_initialized = TRUE;
  99              		.loc 1 48 0 is_stmt 1
 100 0050 40F20003 		movw	r3, #:lower16:ax12_is_initialized.6396
 101 0054 C0F20003 		movt	r3, #:upper16:ax12_is_initialized.6396
 102 0058 4FF00102 		mov	r2, #1
 103 005c 1A70     		strb	r2, [r3, #0]
  49:../Krusty/KFruit.c **** 		AX12_config_set_highest_voltage(FRUIT_MOUTH_AX12_ID, 136);
 104              		.loc 1 49 0
 105 005e 4FF00400 		mov	r0, #4
 106 0062 4FF08801 		mov	r1, #136
 107 0066 FFF7FEFF 		bl	AX12_config_set_highest_voltage
  50:../Krusty/KFruit.c **** 		AX12_config_set_lowest_voltage(FRUIT_MOUTH_AX12_ID, 70);
 108              		.loc 1 50 0
 109 006a 4FF00400 		mov	r0, #4
 110 006e 4FF04601 		mov	r1, #70
 111 0072 FFF7FEFF 		bl	AX12_config_set_lowest_voltage
  51:../Krusty/KFruit.c **** 		AX12_config_set_maximum_torque_percentage(FRUIT_MOUTH_AX12_ID, FRUIT_AX12_MAX_TORQUE_PERCENT);
 112              		.loc 1 51 0
 113 0076 4FF00400 		mov	r0, #4
 114 007a 4FF03201 		mov	r1, #50
 115 007e FFF7FEFF 		bl	AX12_config_set_maximum_torque_percentage
  52:../Krusty/KFruit.c **** 
  53:../Krusty/KFruit.c **** 		AX12_config_set_maximal_angle(FRUIT_MOUTH_AX12_ID, 300);
 116              		.loc 1 53 0
 117 0082 4FF00400 		mov	r0, #4
 118 0086 4FF49671 		mov	r1, #300
 119 008a FFF7FEFF 		bl	AX12_config_set_maximal_angle
  54:../Krusty/KFruit.c **** 		AX12_config_set_minimal_angle(FRUIT_MOUTH_AX12_ID, 0);
 120              		.loc 1 54 0
 121 008e 4FF00400 		mov	r0, #4
 122 0092 4FF00001 		mov	r1, #0
 123 0096 FFF7FEFF 		bl	AX12_config_set_minimal_angle
  55:../Krusty/KFruit.c **** 
  56:../Krusty/KFruit.c **** 		AX12_config_set_error_before_led(FRUIT_MOUTH_AX12_ID, AX12_ERROR_ANGLE | AX12_ERROR_CHECKSUM | AX
 124              		.loc 1 56 0
 125 009a 4FF00400 		mov	r0, #4
 126 009e 4FF07E01 		mov	r1, #126
 127 00a2 FFF7FEFF 		bl	AX12_config_set_error_before_led
  57:../Krusty/KFruit.c **** 		AX12_config_set_error_before_shutdown(FRUIT_MOUTH_AX12_ID, AX12_ERROR_OVERHEATING); //On ne met p
 128              		.loc 1 57 0
 129 00a6 4FF00400 		mov	r0, #4
 130 00aa 4FF00401 		mov	r1, #4
 131 00ae FFF7FEFF 		bl	AX12_config_set_error_before_shutdown
  58:../Krusty/KFruit.c **** 
  59:../Krusty/KFruit.c **** 		AX12_set_position(FRUIT_MOUTH_AX12_ID, FRUIT_AX12_INIT_POS);
 132              		.loc 1 59 0
 133 00b2 4FF00400 		mov	r0, #4
 134 00b6 4FF0C801 		mov	r1, #200
 135 00ba FFF7FEFF 		bl	AX12_set_position
  60:../Krusty/KFruit.c **** 		info_printf("FRUIT_MOUTH AX12 initialisé\n");
 136              		.loc 1 60 0
 137 00be 4FF00400 		mov	r0, #4
 138 00c2 40F20001 		movw	r1, #:lower16:.LC0
 139 00c6 C0F20001 		movt	r1, #:upper16:.LC0
 140 00ca FFF7FEFF 		bl	OUTPUTLOG_printf
 141              	.L5:
  61:../Krusty/KFruit.c **** 	}
  62:../Krusty/KFruit.c **** }
 142              		.loc 1 62 0
 143 00ce 80BD     		pop	{r7, pc}
 144              		.cfi_endproc
 145              	.LFE112:
 147              		.align	2
 148              		.global	FRUIT_stop
 149              		.thumb
 150              		.thumb_func
 152              	FRUIT_stop:
 153              	.LFB113:
  63:../Krusty/KFruit.c **** 
  64:../Krusty/KFruit.c **** void FRUIT_stop() {
 154              		.loc 1 64 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159 00d0 80B4     		push	{r7}
 160              	.LCFI4:
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 7, -4
 163 00d2 00AF     		add	r7, sp, #0
 164              	.LCFI5:
 165              		.cfi_def_cfa_register 7
  65:../Krusty/KFruit.c **** }
 166              		.loc 1 65 0
 167 00d4 BD46     		mov	sp, r7
 168 00d6 80BC     		pop	{r7}
 169 00d8 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE113:
 173              		.section	.rodata
 174 0021 000000   		.align	2
 175              	.LC1:
 176 0024 46523A20 		.ascii	"FR: invalid CAN msg data[0]=%u !\012\000"
 176      696E7661 
 176      6C696420 
 176      43414E20 
 176      6D736720 
 177              		.text
 178 00da 00BF     		.align	2
 179              		.global	FRUIT_CAN_process_msg
 180              		.thumb
 181              		.thumb_func
 183              	FRUIT_CAN_process_msg:
 184              	.LFB114:
  66:../Krusty/KFruit.c **** 
  67:../Krusty/KFruit.c **** bool_e FRUIT_CAN_process_msg(CAN_msg_t* msg) {
 185              		.loc 1 67 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 88
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 00dc 80B5     		push	{r7, lr}
 190              	.LCFI6:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 7, -8
 193              		.cfi_offset 14, -4
 194 00de 98B0     		sub	sp, sp, #96
 195              	.LCFI7:
 196              		.cfi_def_cfa_offset 104
 197 00e0 02AF     		add	r7, sp, #8
 198              	.LCFI8:
 199              		.cfi_def_cfa 7, 96
 200 00e2 7860     		str	r0, [r7, #4]
  68:../Krusty/KFruit.c **** 	queue_id_t queueId1;
  69:../Krusty/KFruit.c **** 	FRUIT_initAX12();
 201              		.loc 1 69 0
 202 00e4 FFF7A4FF 		bl	FRUIT_initAX12
  70:../Krusty/KFruit.c **** 	if(msg->sid == ACT_FRUIT_MOUTH) {
 203              		.loc 1 70 0
 204 00e8 7B68     		ldr	r3, [r7, #4]
 205 00ea 1A88     		ldrh	r2, [r3, #0]
 206 00ec 40F21633 		movw	r3, #790
 207 00f0 9A42     		cmp	r2, r3
 208 00f2 40F05B81 		bne	.L9
  71:../Krusty/KFruit.c **** 		switch(msg->data[0]) {
 209              		.loc 1 71 0
 210 00f6 7B68     		ldr	r3, [r7, #4]
 211 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 212 00fa 112B     		cmp	r3, #17
 213 00fc 6ED0     		beq	.L12
 214 00fe 122B     		cmp	r3, #18
 215 0100 00F0D880 		beq	.L13
 216 0104 102B     		cmp	r3, #16
 217 0106 40F04381 		bne	.L22
 218              	.L11:
  72:../Krusty/KFruit.c **** 			case ACT_FRUIT_MOUTH_CLOSE:
  73:../Krusty/KFruit.c **** 				queueId1 = QUEUE_create();
 219              		.loc 1 73 0
 220 010a FFF7FEFF 		bl	QUEUE_create
 221 010e 0346     		mov	r3, r0
 222 0110 87F85730 		strb	r3, [r7, #87]
  74:../Krusty/KFruit.c **** 				if(queueId1 != QUEUE_CREATE_FAILED) {
 223              		.loc 1 74 0
 224 0114 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 225 0118 FF2B     		cmp	r3, #255
 226 011a 4AD0     		beq	.L14
  75:../Krusty/KFruit.c **** 					QUEUE_add(queueId1, &QUEUE_take_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_AX12_Fruit);
 227              		.loc 1 75 0
 228 011c 4FF00003 		mov	r3, #0
 229 0120 3B73     		strb	r3, [r7, #12]
 230 0122 4FF00003 		mov	r3, #0
 231 0126 FB81     		strh	r3, [r7, #14]	@ movhi
 232 0128 4FF00003 		mov	r3, #0
 233 012c 3B61     		str	r3, [r7, #16]
 234 012e 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 235 0132 4FF00802 		mov	r2, #8
 236 0136 0092     		str	r2, [sp, #0]
 237 0138 1846     		mov	r0, r3
 238 013a 40F20001 		movw	r1, #:lower16:QUEUE_take_sem
 239 013e C0F20001 		movt	r1, #:upper16:QUEUE_take_sem
 240 0142 07F10C03 		add	r3, r7, #12
 241 0146 0CCB     		ldmia	r3, {r2, r3}
 242 0148 FFF7FEFF 		bl	QUEUE_add
  76:../Krusty/KFruit.c **** 					QUEUE_add(queueId1, &FRUIT_run_command, (QUEUE_arg_t){msg->data[0], FRUIT_CS_CloseAX12,  &ACTQ
 243              		.loc 1 76 0
 244 014c 7B68     		ldr	r3, [r7, #4]
 245 014e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 246 0150 3B75     		strb	r3, [r7, #20]
 247 0152 4FF00103 		mov	r3, #1
 248 0156 FB82     		strh	r3, [r7, #22]	@ movhi
 249 0158 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResult
 250 015c C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResult
 251 0160 BB61     		str	r3, [r7, #24]
 252 0162 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 253 0166 4FF00802 		mov	r2, #8
 254 016a 0092     		str	r2, [sp, #0]
 255 016c 1846     		mov	r0, r3
 256 016e 40F20001 		movw	r1, #:lower16:FRUIT_run_command
 257 0172 C0F20001 		movt	r1, #:upper16:FRUIT_run_command
 258 0176 07F11403 		add	r3, r7, #20
 259 017a 0CCB     		ldmia	r3, {r2, r3}
 260 017c FFF7FEFF 		bl	QUEUE_add
  77:../Krusty/KFruit.c **** 					QUEUE_add(queueId1, &QUEUE_give_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_AX12_Fruit);
 261              		.loc 1 77 0
 262 0180 4FF00003 		mov	r3, #0
 263 0184 3B77     		strb	r3, [r7, #28]
 264 0186 4FF00003 		mov	r3, #0
 265 018a FB83     		strh	r3, [r7, #30]	@ movhi
 266 018c 4FF00003 		mov	r3, #0
 267 0190 3B62     		str	r3, [r7, #32]
 268 0192 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 269 0196 4FF00802 		mov	r2, #8
 270 019a 0092     		str	r2, [sp, #0]
 271 019c 1846     		mov	r0, r3
 272 019e 40F20001 		movw	r1, #:lower16:QUEUE_give_sem
 273 01a2 C0F20001 		movt	r1, #:upper16:QUEUE_give_sem
 274 01a6 07F11C03 		add	r3, r7, #28
 275 01aa 0CCB     		ldmia	r3, {r2, r3}
 276 01ac FFF7FEFF 		bl	QUEUE_add
  78:../Krusty/KFruit.c **** 
  79:../Krusty/KFruit.c **** 				} else {	//on indique qu'on a pas géré la commande
  80:../Krusty/KFruit.c **** 					QUEUE_flush(queueId1);
  81:../Krusty/KFruit.c **** 					ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RE
  82:../Krusty/KFruit.c **** 				}
  83:../Krusty/KFruit.c **** 				break;
 277              		.loc 1 83 0
 278 01b0 F9E0     		b	.L16
 279              	.L14:
  80:../Krusty/KFruit.c **** 					QUEUE_flush(queueId1);
 280              		.loc 1 80 0
 281 01b2 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 282 01b6 1846     		mov	r0, r3
 283 01b8 FFF7FEFF 		bl	QUEUE_flush
  81:../Krusty/KFruit.c **** 					ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RE
 284              		.loc 1 81 0
 285 01bc 7B68     		ldr	r3, [r7, #4]
 286 01be 1A88     		ldrh	r2, [r3, #0]
 287 01c0 7B68     		ldr	r3, [r7, #4]
 288 01c2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 289 01c4 4FF05101 		mov	r1, #81
 290 01c8 0091     		str	r1, [sp, #0]
 291 01ca 1046     		mov	r0, r2
 292 01cc 1946     		mov	r1, r3
 293 01ce 4FF00202 		mov	r2, #2
 294 01d2 4FF00503 		mov	r3, #5
 295 01d6 FFF7FEFF 		bl	ACTQ_sendResultWitExplicitLine
 296              		.loc 1 83 0
 297 01da E4E0     		b	.L16
 298              	.L12:
  84:../Krusty/KFruit.c **** 
  85:../Krusty/KFruit.c **** 			case ACT_FRUIT_MOUTH_OPEN:
  86:../Krusty/KFruit.c **** 				queueId1 = QUEUE_create();
 299              		.loc 1 86 0
 300 01dc FFF7FEFF 		bl	QUEUE_create
 301 01e0 0346     		mov	r3, r0
 302 01e2 87F85730 		strb	r3, [r7, #87]
  87:../Krusty/KFruit.c **** 				if(queueId1 != QUEUE_CREATE_FAILED) {
 303              		.loc 1 87 0
 304 01e6 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 305 01ea FF2B     		cmp	r3, #255
 306 01ec 4DD0     		beq	.L17
  88:../Krusty/KFruit.c **** 					QUEUE_add(queueId1, &QUEUE_take_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_AX12_Fruit);
 307              		.loc 1 88 0
 308 01ee 4FF00003 		mov	r3, #0
 309 01f2 87F82430 		strb	r3, [r7, #36]
 310 01f6 4FF00003 		mov	r3, #0
 311 01fa FB84     		strh	r3, [r7, #38]	@ movhi
 312 01fc 4FF00003 		mov	r3, #0
 313 0200 BB62     		str	r3, [r7, #40]
 314 0202 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 315 0206 4FF00802 		mov	r2, #8
 316 020a 0092     		str	r2, [sp, #0]
 317 020c 1846     		mov	r0, r3
 318 020e 40F20001 		movw	r1, #:lower16:QUEUE_take_sem
 319 0212 C0F20001 		movt	r1, #:upper16:QUEUE_take_sem
 320 0216 07F12403 		add	r3, r7, #36
 321 021a 0CCB     		ldmia	r3, {r2, r3}
 322 021c FFF7FEFF 		bl	QUEUE_add
  89:../Krusty/KFruit.c **** 					QUEUE_add(queueId1, &FRUIT_run_command, (QUEUE_arg_t){msg->data[0], FRUIT_CS_OpenAX12,  &ACTQ_
 323              		.loc 1 89 0
 324 0220 7B68     		ldr	r3, [r7, #4]
 325 0222 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 326 0224 87F82C30 		strb	r3, [r7, #44]
 327 0228 4FF00003 		mov	r3, #0
 328 022c FB85     		strh	r3, [r7, #46]	@ movhi
 329 022e 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResult
 330 0232 C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResult
 331 0236 3B63     		str	r3, [r7, #48]
 332 0238 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 333 023c 4FF00802 		mov	r2, #8
 334 0240 0092     		str	r2, [sp, #0]
 335 0242 1846     		mov	r0, r3
 336 0244 40F20001 		movw	r1, #:lower16:FRUIT_run_command
 337 0248 C0F20001 		movt	r1, #:upper16:FRUIT_run_command
 338 024c 07F12C03 		add	r3, r7, #44
 339 0250 0CCB     		ldmia	r3, {r2, r3}
 340 0252 FFF7FEFF 		bl	QUEUE_add
  90:../Krusty/KFruit.c **** 					QUEUE_add(queueId1, &QUEUE_give_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_AX12_Fruit);
 341              		.loc 1 90 0
 342 0256 4FF00003 		mov	r3, #0
 343 025a 87F83430 		strb	r3, [r7, #52]
 344 025e 4FF00003 		mov	r3, #0
 345 0262 FB86     		strh	r3, [r7, #54]	@ movhi
 346 0264 4FF00003 		mov	r3, #0
 347 0268 BB63     		str	r3, [r7, #56]
 348 026a 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 349 026e 4FF00802 		mov	r2, #8
 350 0272 0092     		str	r2, [sp, #0]
 351 0274 1846     		mov	r0, r3
 352 0276 40F20001 		movw	r1, #:lower16:QUEUE_give_sem
 353 027a C0F20001 		movt	r1, #:upper16:QUEUE_give_sem
 354 027e 07F13403 		add	r3, r7, #52
 355 0282 0CCB     		ldmia	r3, {r2, r3}
 356 0284 FFF7FEFF 		bl	QUEUE_add
  91:../Krusty/KFruit.c **** 				} else {	//on indique qu'on a pas géré la commande
  92:../Krusty/KFruit.c **** 					QUEUE_flush(queueId1);
  93:../Krusty/KFruit.c **** 					ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RE
  94:../Krusty/KFruit.c **** 				}
  95:../Krusty/KFruit.c **** 				break;
 357              		.loc 1 95 0
 358 0288 8DE0     		b	.L16
 359              	.L17:
  92:../Krusty/KFruit.c **** 					QUEUE_flush(queueId1);
 360              		.loc 1 92 0
 361 028a 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 362 028e 1846     		mov	r0, r3
 363 0290 FFF7FEFF 		bl	QUEUE_flush
  93:../Krusty/KFruit.c **** 					ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RE
 364              		.loc 1 93 0
 365 0294 7B68     		ldr	r3, [r7, #4]
 366 0296 1A88     		ldrh	r2, [r3, #0]
 367 0298 7B68     		ldr	r3, [r7, #4]
 368 029a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 369 029c 4FF05D01 		mov	r1, #93
 370 02a0 0091     		str	r1, [sp, #0]
 371 02a2 1046     		mov	r0, r2
 372 02a4 1946     		mov	r1, r3
 373 02a6 4FF00202 		mov	r2, #2
 374 02aa 4FF00503 		mov	r3, #5
 375 02ae FFF7FEFF 		bl	ACTQ_sendResultWitExplicitLine
 376              		.loc 1 95 0
 377 02b2 78E0     		b	.L16
 378              	.L13:
  96:../Krusty/KFruit.c ****             case ACT_FRUIT_MOUTH_MID:
  97:../Krusty/KFruit.c ****                 queueId1 = QUEUE_create();
 379              		.loc 1 97 0
 380 02b4 FFF7FEFF 		bl	QUEUE_create
 381 02b8 0346     		mov	r3, r0
 382 02ba 87F85730 		strb	r3, [r7, #87]
  98:../Krusty/KFruit.c ****                 if(queueId1 != QUEUE_CREATE_FAILED){
 383              		.loc 1 98 0
 384 02be 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 385 02c2 FF2B     		cmp	r3, #255
 386 02c4 4FD0     		beq	.L19
  99:../Krusty/KFruit.c ****                     QUEUE_add(queueId1, &QUEUE_take_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_AX12_
 387              		.loc 1 99 0
 388 02c6 4FF00003 		mov	r3, #0
 389 02ca 87F83C30 		strb	r3, [r7, #60]
 390 02ce 4FF00003 		mov	r3, #0
 391 02d2 FB87     		strh	r3, [r7, #62]	@ movhi
 392 02d4 4FF00003 		mov	r3, #0
 393 02d8 3B64     		str	r3, [r7, #64]
 394 02da 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 395 02de 4FF00802 		mov	r2, #8
 396 02e2 0092     		str	r2, [sp, #0]
 397 02e4 1846     		mov	r0, r3
 398 02e6 40F20001 		movw	r1, #:lower16:QUEUE_take_sem
 399 02ea C0F20001 		movt	r1, #:upper16:QUEUE_take_sem
 400 02ee 07F13C03 		add	r3, r7, #60
 401 02f2 0CCB     		ldmia	r3, {r2, r3}
 402 02f4 FFF7FEFF 		bl	QUEUE_add
 100:../Krusty/KFruit.c ****                     QUEUE_add(queueId1, &FRUIT_run_command, (QUEUE_arg_t){msg->data[0], FRUIT_CS_Mi
 403              		.loc 1 100 0
 404 02f8 7B68     		ldr	r3, [r7, #4]
 405 02fa 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 406 02fc 87F84430 		strb	r3, [r7, #68]
 407 0300 4FF00203 		mov	r3, #2
 408 0304 A7F84630 		strh	r3, [r7, #70]	@ movhi
 409 0308 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResult
 410 030c C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResult
 411 0310 BB64     		str	r3, [r7, #72]
 412 0312 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 413 0316 4FF00802 		mov	r2, #8
 414 031a 0092     		str	r2, [sp, #0]
 415 031c 1846     		mov	r0, r3
 416 031e 40F20001 		movw	r1, #:lower16:FRUIT_run_command
 417 0322 C0F20001 		movt	r1, #:upper16:FRUIT_run_command
 418 0326 07F14403 		add	r3, r7, #68
 419 032a 0CCB     		ldmia	r3, {r2, r3}
 420 032c FFF7FEFF 		bl	QUEUE_add
 101:../Krusty/KFruit.c ****                     QUEUE_add(queueId1, &QUEUE_give_sem, (QUEUE_arg_t){0, 0, NULL}, QUEUE_ACT_AX12_
 421              		.loc 1 101 0
 422 0330 4FF00003 		mov	r3, #0
 423 0334 87F84C30 		strb	r3, [r7, #76]
 424 0338 4FF00003 		mov	r3, #0
 425 033c A7F84E30 		strh	r3, [r7, #78]	@ movhi
 426 0340 4FF00003 		mov	r3, #0
 427 0344 3B65     		str	r3, [r7, #80]
 428 0346 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 429 034a 4FF00802 		mov	r2, #8
 430 034e 0092     		str	r2, [sp, #0]
 431 0350 1846     		mov	r0, r3
 432 0352 40F20001 		movw	r1, #:lower16:QUEUE_give_sem
 433 0356 C0F20001 		movt	r1, #:upper16:QUEUE_give_sem
 434 035a 07F14C03 		add	r3, r7, #76
 435 035e 0CCB     		ldmia	r3, {r2, r3}
 436 0360 FFF7FEFF 		bl	QUEUE_add
 102:../Krusty/KFruit.c ****                 } else {
 103:../Krusty/KFruit.c ****                     QUEUE_flush(queueId1);
 104:../Krusty/KFruit.c ****                     ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RES
 105:../Krusty/KFruit.c ****                 }
 106:../Krusty/KFruit.c ****                 break;
 437              		.loc 1 106 0
 438 0364 1FE0     		b	.L16
 439              	.L19:
 103:../Krusty/KFruit.c ****                     QUEUE_flush(queueId1);
 440              		.loc 1 103 0
 441 0366 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 442 036a 1846     		mov	r0, r3
 443 036c FFF7FEFF 		bl	QUEUE_flush
 104:../Krusty/KFruit.c ****                     ACTQ_sendResultWithLine(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RES
 444              		.loc 1 104 0
 445 0370 7B68     		ldr	r3, [r7, #4]
 446 0372 1A88     		ldrh	r2, [r3, #0]
 447 0374 7B68     		ldr	r3, [r7, #4]
 448 0376 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 449 0378 4FF06801 		mov	r1, #104
 450 037c 0091     		str	r1, [sp, #0]
 451 037e 1046     		mov	r0, r2
 452 0380 1946     		mov	r1, r3
 453 0382 4FF00202 		mov	r2, #2
 454 0386 4FF00503 		mov	r3, #5
 455 038a FFF7FEFF 		bl	ACTQ_sendResultWitExplicitLine
 456              		.loc 1 106 0
 457 038e 0AE0     		b	.L16
 458              	.L22:
 107:../Krusty/KFruit.c **** 			default:
 108:../Krusty/KFruit.c **** 				component_printf(LOG_LEVEL_Warning, "invalid CAN msg data[0]=%u !\n", msg->data[0]);
 459              		.loc 1 108 0
 460 0390 7B68     		ldr	r3, [r7, #4]
 461 0392 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 0394 4FF00300 		mov	r0, #3
 463 0398 40F20001 		movw	r1, #:lower16:.LC1
 464 039c C0F20001 		movt	r1, #:upper16:.LC1
 465 03a0 1A46     		mov	r2, r3
 466 03a2 FFF7FEFF 		bl	OUTPUTLOG_printf
 467              	.L16:
 109:../Krusty/KFruit.c **** 		}
 110:../Krusty/KFruit.c **** 		return TRUE;
 468              		.loc 1 110 0
 469 03a6 4FF00103 		mov	r3, #1
 470 03aa 01E0     		b	.L21
 471              	.L9:
 111:../Krusty/KFruit.c **** 	}
 112:../Krusty/KFruit.c **** 
 113:../Krusty/KFruit.c **** 	return FALSE;
 472              		.loc 1 113 0
 473 03ac 4FF00003 		mov	r3, #0
 474              	.L21:
 114:../Krusty/KFruit.c **** }
 475              		.loc 1 114 0
 476 03b0 1846     		mov	r0, r3
 477 03b2 07F15807 		add	r7, r7, #88
 478 03b6 BD46     		mov	sp, r7
 479 03b8 80BD     		pop	{r7, pc}
 480              		.cfi_endproc
 481              	.LFE114:
 483 03ba 00BF     		.align	2
 484              		.global	FRUIT_run_command
 485              		.thumb
 486              		.thumb_func
 488              	FRUIT_run_command:
 489              	.LFB115:
 115:../Krusty/KFruit.c **** 
 116:../Krusty/KFruit.c **** 
 117:../Krusty/KFruit.c **** void FRUIT_run_command(queue_id_t queueId, bool_e init) {
 490              		.loc 1 117 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494 03bc 80B5     		push	{r7, lr}
 495              	.LCFI9:
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 03be 82B0     		sub	sp, sp, #8
 500              	.LCFI10:
 501              		.cfi_def_cfa_offset 16
 502 03c0 00AF     		add	r7, sp, #0
 503              	.LCFI11:
 504              		.cfi_def_cfa_register 7
 505 03c2 0246     		mov	r2, r0
 506 03c4 0B46     		mov	r3, r1
 507 03c6 FA71     		strb	r2, [r7, #7]
 508 03c8 BB71     		strb	r3, [r7, #6]
 118:../Krusty/KFruit.c **** 	if(QUEUE_has_error(queueId)) {
 509              		.loc 1 118 0
 510 03ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 511 03cc 1846     		mov	r0, r3
 512 03ce FFF7FEFF 		bl	QUEUE_has_error
 513 03d2 0346     		mov	r3, r0
 514 03d4 002B     		cmp	r3, #0
 515 03d6 04D0     		beq	.L24
 119:../Krusty/KFruit.c **** 		QUEUE_behead(queueId);
 516              		.loc 1 119 0
 517 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 518 03da 1846     		mov	r0, r3
 519 03dc FFF7FEFF 		bl	QUEUE_behead
 120:../Krusty/KFruit.c **** 		return;
 520              		.loc 1 120 0
 521 03e0 12E0     		b	.L23
 522              	.L24:
 121:../Krusty/KFruit.c **** 	}
 122:../Krusty/KFruit.c **** 
 123:../Krusty/KFruit.c **** if(QUEUE_get_act(queueId) == QUEUE_ACT_AX12_Fruit) {    // Gestion des mouvements du fruit
 523              		.loc 1 123 0
 524 03e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 525 03e4 1846     		mov	r0, r3
 526 03e6 FFF7FEFF 		bl	QUEUE_get_act
 527 03ea 0346     		mov	r3, r0
 528 03ec 082B     		cmp	r3, #8
 529 03ee 0BD1     		bne	.L23
 124:../Krusty/KFruit.c **** 		if(init)
 530              		.loc 1 124 0
 531 03f0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 532 03f2 002B     		cmp	r3, #0
 533 03f4 04D0     		beq	.L26
 125:../Krusty/KFruit.c **** 			FRUIT_command_init(queueId);
 534              		.loc 1 125 0
 535 03f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 536 03f8 1846     		mov	r0, r3
 537 03fa 00F009F8 		bl	FRUIT_command_init
 538 03fe 03E0     		b	.L23
 539              	.L26:
 126:../Krusty/KFruit.c **** 		else
 127:../Krusty/KFruit.c **** 			FRUIT_command_run(queueId);
 540              		.loc 1 127 0
 541 0400 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 542 0402 1846     		mov	r0, r3
 543 0404 00F0DCF8 		bl	FRUIT_command_run
 544              	.L23:
 128:../Krusty/KFruit.c **** 	}
 129:../Krusty/KFruit.c **** }
 545              		.loc 1 129 0
 546 0408 07F10807 		add	r7, r7, #8
 547 040c BD46     		mov	sp, r7
 548 040e 80BD     		pop	{r7, pc}
 549              		.cfi_endproc
 550              	.LFE115:
 552              		.section	.rodata
 553 0046 0000     		.align	2
 554              	.LC2:
 555 0048 46523A20 		.ascii	"FR: Invalid plier command: %u, code is broken !\012"
 555      496E7661 
 555      6C696420 
 555      706C6965 
 555      7220636F 
 556 0078 00       		.ascii	"\000"
 557 0079 000000   		.align	2
 558              	.LC3:
 559 007c 46523A20 		.ascii	"FR: Invalid plier position: %u, code is broken !\012"
 559      496E7661 
 559      6C696420 
 559      706C6965 
 559      7220706F 
 560 00ad 00       		.ascii	"\000"
 561 00ae 0000     		.align	2
 562              	.LC4:
 563 00b0 46523A20 		.ascii	"FR: Move fruit ax12 to %d\012\000"
 563      4D6F7665 
 563      20667275 
 563      69742061 
 563      78313220 
 564 00cb 00       		.align	2
 565              	.LC5:
 566 00cc 46523A20 		.ascii	"FR: AX12_set_position error: 0x%x\012\000"
 566      41583132 
 566      5F736574 
 566      5F706F73 
 566      6974696F 
 567 00ef 00       		.text
 568              		.align	2
 569              		.thumb
 570              		.thumb_func
 572              	FRUIT_command_init:
 573              	.LFB116:
 130:../Krusty/KFruit.c **** 
 131:../Krusty/KFruit.c **** 
 132:../Krusty/KFruit.c **** //Initialise une commande de la pince à assiette
 133:../Krusty/KFruit.c **** static void FRUIT_command_init(queue_id_t queueId) {
 574              		.loc 1 133 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 32
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0410 80B5     		push	{r7, lr}
 579              	.LCFI12:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0412 8AB0     		sub	sp, sp, #40
 584              	.LCFI13:
 585              		.cfi_def_cfa_offset 48
 586 0414 02AF     		add	r7, sp, #8
 587              	.LCFI14:
 588              		.cfi_def_cfa 7, 40
 589 0416 0346     		mov	r3, r0
 590 0418 FB73     		strb	r3, [r7, #15]
 134:../Krusty/KFruit.c **** 	Uint8 command = QUEUE_get_arg(queueId)->canCommand;
 591              		.loc 1 134 0
 592 041a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 593 041c 1846     		mov	r0, r3
 594 041e FFF7FEFF 		bl	QUEUE_get_arg
 595 0422 0346     		mov	r3, r0
 596 0424 1B78     		ldrb	r3, [r3, #0]
 597 0426 FB77     		strb	r3, [r7, #31]
 135:../Krusty/KFruit.c **** 	Uint16* ax12_goalPosition = &QUEUE_get_arg(queueId)->param;
 598              		.loc 1 135 0
 599 0428 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 600 042a 1846     		mov	r0, r3
 601 042c FFF7FEFF 		bl	QUEUE_get_arg
 602 0430 0346     		mov	r3, r0
 603 0432 03F10203 		add	r3, r3, #2
 604 0436 BB61     		str	r3, [r7, #24]
 136:../Krusty/KFruit.c **** 
 137:../Krusty/KFruit.c **** 	*ax12_goalPosition = 0xFFFF;
 605              		.loc 1 137 0
 606 0438 BB69     		ldr	r3, [r7, #24]
 607 043a 4FF6FF72 		movw	r2, #65535
 608 043e 1A80     		strh	r2, [r3, #0]	@ movhi
 138:../Krusty/KFruit.c **** 
 139:../Krusty/KFruit.c **** 	switch(command) {
 609              		.loc 1 139 0
 610 0440 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 611 0442 A3F11003 		sub	r3, r3, #16
 612 0446 0F2B     		cmp	r3, #15
 613 0448 45D8     		bhi	.L28
 614 044a 01A2     		adr	r2, .L33
 615 044c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 616              		.align	2
 617              	.L33:
 618 0450 9B040000 		.word	.L29+1
 619 0454 91040000 		.word	.L30+1
 620 0458 A5040000 		.word	.L31+1
 621 045c D7040000 		.word	.L28+1
 622 0460 D7040000 		.word	.L28+1
 623 0464 D7040000 		.word	.L28+1
 624 0468 D7040000 		.word	.L28+1
 625 046c D7040000 		.word	.L28+1
 626 0470 D7040000 		.word	.L28+1
 627 0474 D7040000 		.word	.L28+1
 628 0478 D7040000 		.word	.L28+1
 629 047c D7040000 		.word	.L28+1
 630 0480 D7040000 		.word	.L28+1
 631 0484 D7040000 		.word	.L28+1
 632 0488 D7040000 		.word	.L28+1
 633 048c AF040000 		.word	.L32+1
 634              	.L30:
 140:../Krusty/KFruit.c **** 		case ACT_FRUIT_MOUTH_OPEN:  *ax12_goalPosition = FRUIT_AX12_OPEN_POS; break;
 635              		.loc 1 140 0
 636 0490 BB69     		ldr	r3, [r7, #24]
 637 0492 4FF06402 		mov	r2, #100
 638 0496 1A80     		strh	r2, [r3, #0]	@ movhi
 639 0498 35E0     		b	.L34
 640              	.L29:
 141:../Krusty/KFruit.c **** 		case ACT_FRUIT_MOUTH_CLOSE: *ax12_goalPosition = FRUIT_AX12_CLOSED_POS; break;
 641              		.loc 1 141 0
 642 049a BB69     		ldr	r3, [r7, #24]
 643 049c 4FF0C802 		mov	r2, #200
 644 04a0 1A80     		strh	r2, [r3, #0]	@ movhi
 645 04a2 30E0     		b	.L34
 646              	.L31:
 142:../Krusty/KFruit.c **** 		case ACT_FRUIT_MOUTH_MID: *ax12_goalPosition = FRUIT_AX12_MID_POS; break;
 647              		.loc 1 142 0
 648 04a4 BB69     		ldr	r3, [r7, #24]
 649 04a6 4FF06E02 		mov	r2, #110
 650 04aa 1A80     		strh	r2, [r3, #0]	@ movhi
 651 04ac 2BE0     		b	.L34
 652              	.L32:
 143:../Krusty/KFruit.c **** 		case ACT_FRUIT_MOUTH_STOP:
 144:../Krusty/KFruit.c **** 			AX12_set_torque_enabled(FRUIT_MOUTH_AX12_ID, FALSE); //Stopper l'asservissement de l'AX12 qui gè
 653              		.loc 1 144 0
 654 04ae 4FF00400 		mov	r0, #4
 655 04b2 4FF00001 		mov	r1, #0
 656 04b6 FFF7FEFF 		bl	AX12_set_torque_enabled
 145:../Krusty/KFruit.c **** 			QUEUE_next(queueId, ACT_FRUIT_MOUTH, ACT_RESULT_DONE, ACT_RESULT_ERROR_OK, __LINE__);
 657              		.loc 1 145 0
 658 04ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 659 04bc 4FF09102 		mov	r2, #145
 660 04c0 0092     		str	r2, [sp, #0]
 661 04c2 1846     		mov	r0, r3
 662 04c4 40F21631 		movw	r1, #790
 663 04c8 4FF00002 		mov	r2, #0
 664 04cc 4FF00003 		mov	r3, #0
 665 04d0 FFF7FEFF 		bl	QUEUE_next
 146:../Krusty/KFruit.c **** 			return;
 666              		.loc 1 146 0
 667 04d4 70E0     		b	.L27
 668              	.L28:
 147:../Krusty/KFruit.c **** 
 148:../Krusty/KFruit.c **** 		default: {
 149:../Krusty/KFruit.c **** 				error_printf("Invalid plier command: %u, code is broken !\n", command);
 669              		.loc 1 149 0
 670 04d6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 671 04d8 4FF00200 		mov	r0, #2
 672 04dc 40F20001 		movw	r1, #:lower16:.LC2
 673 04e0 C0F20001 		movt	r1, #:upper16:.LC2
 674 04e4 1A46     		mov	r2, r3
 675 04e6 FFF7FEFF 		bl	OUTPUTLOG_printf
 150:../Krusty/KFruit.c **** 				QUEUE_next(queueId, ACT_FRUIT_MOUTH, ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_LOGIC, __LINE__);
 676              		.loc 1 150 0
 677 04ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 678 04ec 4FF09602 		mov	r2, #150
 679 04f0 0092     		str	r2, [sp, #0]
 680 04f2 1846     		mov	r0, r3
 681 04f4 40F21631 		movw	r1, #790
 682 04f8 4FF00202 		mov	r2, #2
 683 04fc 4FF00403 		mov	r3, #4
 684 0500 FFF7FEFF 		bl	QUEUE_next
 151:../Krusty/KFruit.c **** 				return;
 685              		.loc 1 151 0
 686 0504 58E0     		b	.L27
 687              	.L34:
 152:../Krusty/KFruit.c **** 			}
 153:../Krusty/KFruit.c **** 	}
 154:../Krusty/KFruit.c **** 	if(*ax12_goalPosition == 0xFFFF) {
 688              		.loc 1 154 0
 689 0506 BB69     		ldr	r3, [r7, #24]
 690 0508 1A88     		ldrh	r2, [r3, #0]
 691 050a 4FF6FF73 		movw	r3, #65535
 692 050e 9A42     		cmp	r2, r3
 693 0510 17D1     		bne	.L36
 155:../Krusty/KFruit.c **** 		error_printf("Invalid plier position: %u, code is broken !\n", command);
 694              		.loc 1 155 0
 695 0512 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 696 0514 4FF00200 		mov	r0, #2
 697 0518 40F20001 		movw	r1, #:lower16:.LC3
 698 051c C0F20001 		movt	r1, #:upper16:.LC3
 699 0520 1A46     		mov	r2, r3
 700 0522 FFF7FEFF 		bl	OUTPUTLOG_printf
 156:../Krusty/KFruit.c **** 		QUEUE_next(queueId, ACT_FRUIT_MOUTH, ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_LOGIC, __LINE__);
 701              		.loc 1 156 0
 702 0526 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 703 0528 4FF09C02 		mov	r2, #156
 704 052c 0092     		str	r2, [sp, #0]
 705 052e 1846     		mov	r0, r3
 706 0530 40F21631 		movw	r1, #790
 707 0534 4FF00202 		mov	r2, #2
 708 0538 4FF00403 		mov	r3, #4
 709 053c FFF7FEFF 		bl	QUEUE_next
 157:../Krusty/KFruit.c **** 		return;
 710              		.loc 1 157 0
 711 0540 3AE0     		b	.L27
 712              	.L36:
 158:../Krusty/KFruit.c **** 	}
 159:../Krusty/KFruit.c **** 
 160:../Krusty/KFruit.c **** 	debug_printf("Move fruit ax12 to %d\n", *ax12_goalPosition);
 713              		.loc 1 160 0
 714 0542 BB69     		ldr	r3, [r7, #24]
 715 0544 1B88     		ldrh	r3, [r3, #0]
 716 0546 4FF00500 		mov	r0, #5
 717 054a 40F20001 		movw	r1, #:lower16:.LC4
 718 054e C0F20001 		movt	r1, #:upper16:.LC4
 719 0552 1A46     		mov	r2, r3
 720 0554 FFF7FEFF 		bl	OUTPUTLOG_printf
 161:../Krusty/KFruit.c **** 	AX12_reset_last_error(FRUIT_MOUTH_AX12_ID); //Sécurité anti terroriste. Nous les parano on aime pa
 721              		.loc 1 161 0
 722 0558 4FF00400 		mov	r0, #4
 723 055c FFF7FEFF 		bl	AX12_reset_last_error
 162:../Krusty/KFruit.c **** 	if(!AX12_set_position(FRUIT_MOUTH_AX12_ID, *ax12_goalPosition)) {	//Si la commande n'a pas été env
 724              		.loc 1 162 0
 725 0560 BB69     		ldr	r3, [r7, #24]
 726 0562 1B88     		ldrh	r3, [r3, #0]
 727 0564 4FF00400 		mov	r0, #4
 728 0568 1946     		mov	r1, r3
 729 056a FFF7FEFF 		bl	AX12_set_position
 730 056e 0346     		mov	r3, r0
 731 0570 002B     		cmp	r3, #0
 732 0572 21D1     		bne	.L27
 163:../Krusty/KFruit.c **** 		error_printf("AX12_set_position error: 0x%x\n", AX12_get_last_error(FRUIT_MOUTH_AX12_ID).error);
 733              		.loc 1 163 0
 734 0574 4FF00400 		mov	r0, #4
 735 0578 FFF7FEFF 		bl	AX12_get_last_error
 736 057c 3880     		strh	r0, [r7, #0]	@ movhi
 737 057e C0F30F43 		ubfx	r3, r0, #16, #16
 738 0582 7B80     		strh	r3, [r7, #2]	@ movhi
 739 0584 3B68     		ldr	r3, [r7, #0]
 740 0586 7B61     		str	r3, [r7, #20]
 741 0588 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 742 058a 4FF00200 		mov	r0, #2
 743 058e 40F20001 		movw	r1, #:lower16:.LC5
 744 0592 C0F20001 		movt	r1, #:upper16:.LC5
 745 0596 1A46     		mov	r2, r3
 746 0598 FFF7FEFF 		bl	OUTPUTLOG_printf
 164:../Krusty/KFruit.c **** 		QUEUE_next(queueId, ACT_FRUIT_MOUTH, ACT_RESULT_FAILED, ACT_RESULT_ERROR_NOT_HERE, __LINE__);
 747              		.loc 1 164 0
 748 059c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 749 059e 4FF0A402 		mov	r2, #164
 750 05a2 0092     		str	r2, [sp, #0]
 751 05a4 1846     		mov	r0, r3
 752 05a6 40F21631 		movw	r1, #790
 753 05aa 4FF00102 		mov	r2, #1
 754 05ae 4FF00303 		mov	r3, #3
 755 05b2 FFF7FEFF 		bl	QUEUE_next
 165:../Krusty/KFruit.c **** 		return;
 756              		.loc 1 165 0
 757 05b6 00BF     		nop
 758              	.L27:
 166:../Krusty/KFruit.c **** 	}
 167:../Krusty/KFruit.c **** 	//La commande a été envoyée et l'AX12 l'a bien reçu
 168:../Krusty/KFruit.c **** }
 759              		.loc 1 168 0
 760 05b8 07F12007 		add	r7, r7, #32
 761 05bc BD46     		mov	sp, r7
 762 05be 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE116:
 766              		.align	2
 767              		.thumb
 768              		.thumb_func
 770              	FRUIT_command_run:
 771              	.LFB117:
 169:../Krusty/KFruit.c **** 
 170:../Krusty/KFruit.c **** //Gère les états pendant le mouvement de la pince.
 171:../Krusty/KFruit.c **** static void FRUIT_command_run(queue_id_t queueId) {
 772              		.loc 1 171 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 16
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776 05c0 80B5     		push	{r7, lr}
 777              	.LCFI15:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 05c2 8AB0     		sub	sp, sp, #40
 782              	.LCFI16:
 783              		.cfi_def_cfa_offset 48
 784 05c4 06AF     		add	r7, sp, #24
 785              	.LCFI17:
 786              		.cfi_def_cfa 7, 24
 787 05c6 0346     		mov	r3, r0
 788 05c8 FB71     		strb	r3, [r7, #7]
 172:../Krusty/KFruit.c **** 	Uint8 result, errorCode;
 173:../Krusty/KFruit.c **** 	Uint16 line;
 174:../Krusty/KFruit.c **** 
 175:../Krusty/KFruit.c **** 	//360° of large_epsilon, quand on a un timeout, on a forcément un resultat Ok (et pas d'erreur, on
 176:../Krusty/KFruit.c **** 	if(ACTQ_check_status_ax12(queueId, FRUIT_MOUTH_AX12_ID, QUEUE_get_arg(queueId)->param, FRUIT_AX12_
 789              		.loc 1 176 0
 790 05ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 791 05cc 1846     		mov	r0, r3
 792 05ce FFF7FEFF 		bl	QUEUE_get_arg
 793 05d2 0346     		mov	r3, r0
 794 05d4 5B88     		ldrh	r3, [r3, #2]
 795 05d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 796 05d8 4FF00A01 		mov	r1, #10
 797 05dc 0091     		str	r1, [sp, #0]
 798 05de 4FF4B471 		mov	r1, #360
 799 05e2 0191     		str	r1, [sp, #4]
 800 05e4 07F10F01 		add	r1, r7, #15
 801 05e8 0291     		str	r1, [sp, #8]
 802 05ea 07F10E01 		add	r1, r7, #14
 803 05ee 0391     		str	r1, [sp, #12]
 804 05f0 07F10C01 		add	r1, r7, #12
 805 05f4 0491     		str	r1, [sp, #16]
 806 05f6 1046     		mov	r0, r2
 807 05f8 4FF00401 		mov	r1, #4
 808 05fc 1A46     		mov	r2, r3
 809 05fe 4FF00203 		mov	r3, #2
 810 0602 FFF7FEFF 		bl	ACTQ_check_status_ax12
 811 0606 0346     		mov	r3, r0
 812 0608 002B     		cmp	r3, #0
 813 060a 09D0     		beq	.L37
 177:../Krusty/KFruit.c **** 		QUEUE_next(queueId, ACT_FRUIT_MOUTH, result, errorCode, line);
 814              		.loc 1 177 0
 815 060c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 816 060e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 817 0610 B889     		ldrh	r0, [r7, #12]
 818 0612 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 819 0614 0090     		str	r0, [sp, #0]
 820 0616 0846     		mov	r0, r1
 821 0618 40F21631 		movw	r1, #790
 822 061c FFF7FEFF 		bl	QUEUE_next
 823              	.L37:
 178:../Krusty/KFruit.c **** }
 824              		.loc 1 178 0
 825 0620 07F11007 		add	r7, r7, #16
 826 0624 BD46     		mov	sp, r7
 827 0626 80BD     		pop	{r7, pc}
 828              		.cfi_endproc
 829              	.LFE117:
 831              		.bss
 832              	ax12_is_initialized.6396:
 833 0000 00       		.space	1
 834              	initialized.6393:
 835 0001 00       		.space	1
 836              		.text
 837              	.Letext0:
 838              		.file 2 "c:\\program files (x86)\\eclipse-arm-eseo\\gcc-arm-none-eabi-4_7-2013q2-20130614-win32\\g
 839              		.file 3 "../Krusty/../QS/QS_types.h"
 840              		.file 4 "../config/config_krusty/config_global_vars_types.h"
 841              		.file 5 "../Krusty/../queue.h"
 842              		.file 6 "../Krusty/KFruit.h"
 843              		.file 7 "../Krusty/../QS/QS_outputlog.h"
 844              		.file 8 "../stm32f4xx/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 KFruit.c
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:18     .text:00000000 $t
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:23     .text:00000000 FRUIT_init
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:834    .bss:00000001 initialized.6393
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:73     .text:00000030 FRUIT_initAX12
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:65     .rodata:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:66     .rodata:00000000 .LC0
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:832    .bss:00000000 ax12_is_initialized.6396
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:152    .text:000000d0 FRUIT_stop
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:175    .rodata:00000024 .LC1
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:183    .text:000000dc FRUIT_CAN_process_msg
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:488    .text:000003bc FRUIT_run_command
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:572    .text:00000410 FRUIT_command_init
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:770    .text:000005c0 FRUIT_command_run
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:554    .rodata:00000048 .LC2
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:558    .rodata:0000007c .LC3
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:562    .rodata:000000b0 .LC4
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:565    .rodata:000000cc .LC5
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:618    .text:00000450 $d
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:636    .text:00000490 $t
C:\Users\Amaury\AppData\Local\Temp\ccmWDGct.s:833    .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.13c6c37fe6ef97541a459ad1f2cd1ddb
                           .group:00000000 wm4.stm32f4xx.h.54.d172d9d6631f11a8436908e748990b53
                           .group:00000000 wm4.core_cm4.h.32.39d0f71cd333856d56f1935d9037195e
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.163.d36d54ebc869626f337c4fcb95a9b424
                           .group:00000000 wm4.stm32f4xx.h.306.7867854ab89778ccd63e1fde7c22c0b6
                           .group:00000000 wm4.stm32f4xx_rcc.h.65.29a27820bc754566c4190ed8ad1c1d80
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.7233.cb6cb3cb095c29e1fc0eb152d26090b1
                           .group:00000000 wm4.Global_config.h.14.bea53ddf4045d71f1c9fb87037131e8e
                           .group:00000000 wm4.config_global.h.12.5c30ea43d7f0d9daa101874e8ba75f6f
                           .group:00000000 wm4.config_qs.h.12.4699be7196e891fb4cd84d522e29cde7
                           .group:00000000 wm4.config_qs.h.12.8e0ab7f7cbbdaecfb1e464f5610b5d86
                           .group:00000000 wm4.QS_macro.h.19.3d2533714681986d2ad8c517737c4640
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.QS_timer.h.23.f1c7374d1ffe22793578c04386c6b1e2
                           .group:00000000 wm4.queue.h.39.c6c83c771916888b8b8278e5c5477b11
                           .group:00000000 wm4.QS_CANmsgList.h.18.4820ab5d82fa43f9421f4e5eb46c19bc
                           .group:00000000 wm4.QS_ax12.h.14.bdca40ad9d76c87d4eb8bcff38d0d363
                           .group:00000000 wm4.config_pin.h.12.92dbe1317fae649a069f2ce6e5ad725c
                           .group:00000000 wm4.config_pin.h.12.20ee5a96fdfc3c7ca3bc6056aaec7473
                           .group:00000000 wm4.KFruit_config.h.13.a6167bf4c01b25148193e5bec1ce5a04
                           .group:00000000 wm4.config_debug.h.12.ce495d07741075ca26554eb90b0ab381
                           .group:00000000 wm4.QS_outputlog.h.12.497571275ee7bc35db4cbeb19919be7a

UNDEFINED SYMBOLS
AX12_init
AX12_is_ready
AX12_config_set_highest_voltage
AX12_config_set_lowest_voltage
AX12_config_set_maximum_torque_percentage
AX12_config_set_maximal_angle
AX12_config_set_minimal_angle
AX12_config_set_error_before_led
AX12_config_set_error_before_shutdown
AX12_set_position
OUTPUTLOG_printf
QUEUE_create
QUEUE_take_sem
QUEUE_add
ACTQ_finish_SendResult
QUEUE_give_sem
QUEUE_flush
ACTQ_sendResultWitExplicitLine
QUEUE_has_error
QUEUE_behead
QUEUE_get_act
QUEUE_get_arg
AX12_set_torque_enabled
QUEUE_next
AX12_reset_last_error
AX12_get_last_error
ACTQ_check_status_ax12
