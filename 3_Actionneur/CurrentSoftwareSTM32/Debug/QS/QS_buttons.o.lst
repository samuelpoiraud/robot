   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"QS_buttons.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	buttons:
  21 0000 00000000 		.space	96
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.align	2
  23              	push_time:
  24 0060 00000000 		.space	8
  24      00000000 
  25              		.text
  26              		.align	2
  27              		.global	BUTTONS_init
  28              		.thumb
  29              		.thumb_func
  31              	BUTTONS_init:
  32              	.LFB111:
  33              		.file 1 "../QS/QS_buttons.c"
   1:../QS/QS_buttons.c **** /*
   2:../QS/QS_buttons.c ****  *	Club Robot ESEO 2010 - 2011
   3:../QS/QS_buttons.c ****  *	Check Norris
   4:../QS/QS_buttons.c ****  *
   5:../QS/QS_buttons.c ****  *	Fichier : QS_button.c
   6:../QS/QS_buttons.c ****  *	Package : QS
   7:../QS/QS_buttons.c ****  *	Description : Fonctions de gestion des boutons de la carte generique
   8:../QS/QS_buttons.c ****  *  Auteur : Adrien GIRARD
   9:../QS/QS_buttons.c ****  *	Auteurs Originaux : Jacen & Ronan
  10:../QS/QS_buttons.c ****  *	Version 20110324
  11:../QS/QS_buttons.c ****  */
  12:../QS/QS_buttons.c ****  
  13:../QS/QS_buttons.c **** #define QS_BUTTONS_C
  14:../QS/QS_buttons.c **** 
  15:../QS/QS_buttons.c **** #include "QS_buttons.h"
  16:../QS/QS_buttons.c **** 
  17:../QS/QS_buttons.c **** #ifdef USE_BUTTONS
  18:../QS/QS_buttons.c **** 
  19:../QS/QS_buttons.c **** #include "QS_ports.h"
  20:../QS/QS_buttons.c **** 
  21:../QS/QS_buttons.c **** #ifdef NEW_CONFIG_ORGANISATION
  22:../QS/QS_buttons.c **** 	#include "config_pin.h"
  23:../QS/QS_buttons.c **** #endif
  24:../QS/QS_buttons.c **** 
  25:../QS/QS_buttons.c **** #if !defined(BUTTONS_TIMER) && !defined(BUTTONS_TIMER_USE_WATCHDOG)
  26:../QS/QS_buttons.c **** 	#define BUTTONS_NO_IT
  27:../QS/QS_buttons.c **** 
  28:../QS/QS_buttons.c **** 	#ifndef I_ASSUME_I_WILL_CALL_BUTTONS_PROCESS_IT_ON_MY_OWN
  29:../QS/QS_buttons.c **** 		#warning "vous avez pris la liberté de ne pas définir de timer pour BUTTONS, ayez au moins le res
  30:../QS/QS_buttons.c **** 		#warning "BUTTONS_TIMER doit etre 1 2 3 ou 4, sauf si vous ne le définissez pas, volontairement."
  31:../QS/QS_buttons.c **** 	#endif
  32:../QS/QS_buttons.c **** #else
  33:../QS/QS_buttons.c **** 	#ifdef BUTTONS_TIMER
  34:../QS/QS_buttons.c **** 		#define TIMER_SRC_TIMER_ID BUTTONS_TIMER
  35:../QS/QS_buttons.c **** 	#endif
  36:../QS/QS_buttons.c **** 	#ifdef BUTTONS_TIMER_USE_WATCHDOG
  37:../QS/QS_buttons.c **** 		#define TIMER_SRC_USE_WATCHDOG
  38:../QS/QS_buttons.c **** 	#endif
  39:../QS/QS_buttons.c **** 
  40:../QS/QS_buttons.c **** 	#include "QS_setTimerSource.h"
  41:../QS/QS_buttons.c **** #endif
  42:../QS/QS_buttons.c **** 
  43:../QS/QS_buttons.c **** static button_t buttons[BUTTONS_NUMBER];
  44:../QS/QS_buttons.c **** static Uint8 push_time[BUTTONS_NUMBER]={0};
  45:../QS/QS_buttons.c **** 
  46:../QS/QS_buttons.c **** void BUTTONS_init()
  47:../QS/QS_buttons.c **** {
  34              		.loc 1 47 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  48:../QS/QS_buttons.c **** 	Uint8 i;
  49:../QS/QS_buttons.c **** 	
  50:../QS/QS_buttons.c **** 	static bool_e initialized = FALSE;
  51:../QS/QS_buttons.c **** 	if(initialized)
  49              		.loc 1 51 0
  50 0006 40F20003 		movw	r3, #:lower16:initialized.6118
  51 000a C0F20003 		movt	r3, #:upper16:initialized.6118
  52 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  53 0010 002B     		cmp	r3, #0
  54 0012 15D1     		bne	.L6
  55              	.L2:
  52:../QS/QS_buttons.c **** 		return;
  53:../QS/QS_buttons.c **** 		
  54:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
  56              		.loc 1 54 0
  57 0014 4FF00003 		mov	r3, #0
  58 0018 FB71     		strb	r3, [r7, #7]
  59 001a 0DE0     		b	.L4
  60              	.L5:
  55:../QS/QS_buttons.c **** 	{
  56:../QS/QS_buttons.c **** 		BUTTONS_define_actions((button_id_e)i,NULL,NULL,0);
  61              		.loc 1 56 0 discriminator 2
  62 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  63 001e 1846     		mov	r0, r3
  64 0020 4FF00001 		mov	r1, #0
  65 0024 4FF00002 		mov	r2, #0
  66 0028 4FF00003 		mov	r3, #0
  67 002c FFF7FEFF 		bl	BUTTONS_define_actions
  54:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
  68              		.loc 1 54 0 discriminator 2
  69 0030 FB79     		ldrb	r3, [r7, #7]
  70 0032 03F10103 		add	r3, r3, #1
  71 0036 FB71     		strb	r3, [r7, #7]
  72              	.L4:
  54:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
  73              		.loc 1 54 0 is_stmt 0 discriminator 1
  74 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  75 003a 072B     		cmp	r3, #7
  76 003c EED9     		bls	.L5
  77 003e 00E0     		b	.L1
  78              	.L6:
  52:../QS/QS_buttons.c **** 		return;
  79              		.loc 1 52 0 is_stmt 1
  80 0040 00BF     		nop
  81              	.L1:
  57:../QS/QS_buttons.c **** 	}
  58:../QS/QS_buttons.c **** 	#ifndef BUTTONS_NO_IT
  59:../QS/QS_buttons.c **** 		TIMER_SRC_TIMER_init();
  60:../QS/QS_buttons.c **** 		TIMER_SRC_TIMER_start_ms(100);
  61:../QS/QS_buttons.c **** 	#endif
  62:../QS/QS_buttons.c **** }
  82              		.loc 1 62 0
  83 0042 07F10807 		add	r7, r7, #8
  84 0046 BD46     		mov	sp, r7
  85 0048 80BD     		pop	{r7, pc}
  86              		.cfi_endproc
  87              	.LFE111:
  89 004a 00BF     		.align	2
  90              		.global	BUTTONS_define_actions
  91              		.thumb
  92              		.thumb_func
  94              	BUTTONS_define_actions:
  95              	.LFB112:
  63:../QS/QS_buttons.c **** 
  64:../QS/QS_buttons.c **** void BUTTONS_define_actions(button_id_e button_id,button_action_t direct_push, button_action_t afte
  65:../QS/QS_buttons.c **** {
  96              		.loc 1 65 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 24
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 004c 80B4     		push	{r7}
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 004e 87B0     		sub	sp, sp, #28
 106              	.LCFI4:
 107              		.cfi_def_cfa_offset 32
 108 0050 00AF     		add	r7, sp, #0
 109              	.LCFI5:
 110              		.cfi_def_cfa_register 7
 111 0052 B960     		str	r1, [r7, #8]
 112 0054 7A60     		str	r2, [r7, #4]
 113 0056 0246     		mov	r2, r0
 114 0058 FA73     		strb	r2, [r7, #15]
 115 005a BB73     		strb	r3, [r7, #14]
  66:../QS/QS_buttons.c **** 	assert(button_id<BUTTONS_NUMBER&&button_id>=0);
  67:../QS/QS_buttons.c **** 	button_t* button = &(buttons[button_id]);
 116              		.loc 1 67 0
 117 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 118 005e 1346     		mov	r3, r2
 119 0060 4FEA4303 		lsl	r3, r3, #1
 120 0064 9B18     		adds	r3, r3, r2
 121 0066 4FEA8303 		lsl	r3, r3, #2
 122 006a 40F20002 		movw	r2, #:lower16:buttons
 123 006e C0F20002 		movt	r2, #:upper16:buttons
 124 0072 9B18     		adds	r3, r3, r2
 125 0074 7B61     		str	r3, [r7, #20]
  68:../QS/QS_buttons.c **** 	button->direct_push=direct_push;
 126              		.loc 1 68 0
 127 0076 7B69     		ldr	r3, [r7, #20]
 128 0078 BA68     		ldr	r2, [r7, #8]
 129 007a 1A60     		str	r2, [r3, #0]
  69:../QS/QS_buttons.c **** 	button->after_long_push=after_long_push;
 130              		.loc 1 69 0
 131 007c 7B69     		ldr	r3, [r7, #20]
 132 007e 7A68     		ldr	r2, [r7, #4]
 133 0080 5A60     		str	r2, [r3, #4]
  70:../QS/QS_buttons.c **** 	button->long_push_time=long_push_time*10;
 134              		.loc 1 70 0
 135 0082 BB7B     		ldrb	r3, [r7, #14]
 136 0084 1A46     		mov	r2, r3
 137 0086 4FEA8202 		lsl	r2, r2, #2
 138 008a D318     		adds	r3, r2, r3
 139 008c 4FEA4303 		lsl	r3, r3, #1
 140 0090 DAB2     		uxtb	r2, r3
 141 0092 7B69     		ldr	r3, [r7, #20]
 142 0094 1A72     		strb	r2, [r3, #8]
  71:../QS/QS_buttons.c **** }
 143              		.loc 1 71 0
 144 0096 07F11C07 		add	r7, r7, #28
 145 009a BD46     		mov	sp, r7
 146 009c 80BC     		pop	{r7}
 147 009e 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE112:
 151              		.align	2
 152              		.global	BUTTONS_update
 153              		.thumb
 154              		.thumb_func
 156              	BUTTONS_update:
 157              	.LFB113:
  72:../QS/QS_buttons.c **** 
  73:../QS/QS_buttons.c **** void BUTTONS_update() 
  74:../QS/QS_buttons.c **** {
 158              		.loc 1 74 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 16
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 00a0 80B5     		push	{r7, lr}
 163              	.LCFI6:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 00a2 84B0     		sub	sp, sp, #16
 168              	.LCFI7:
 169              		.cfi_def_cfa_offset 24
 170 00a4 00AF     		add	r7, sp, #0
 171              	.LCFI8:
 172              		.cfi_def_cfa_register 7
  75:../QS/QS_buttons.c **** 	static Uint8 buttons_were_pressed = 0x00; //état des boutons dans le passage précédent
  76:../QS/QS_buttons.c **** 	Uint8 buttons_pressed = 0x00; //état des boutons
 173              		.loc 1 76 0
 174 00a6 4FF00003 		mov	r3, #0
 175 00aa BB73     		strb	r3, [r7, #14]
  77:../QS/QS_buttons.c **** 	Uint8 buttons_falling_edge; //état des boutons
  78:../QS/QS_buttons.c **** 	Uint8 buttons_rising_edge; //état des boutons
  79:../QS/QS_buttons.c **** 	button_action_t action;	
  80:../QS/QS_buttons.c **** 	button_t* button = NULL;
 176              		.loc 1 80 0
 177 00ac 4FF00003 		mov	r3, #0
 178 00b0 BB60     		str	r3, [r7, #8]
  81:../QS/QS_buttons.c **** 	Uint8 i;
  82:../QS/QS_buttons.c **** 	
  83:../QS/QS_buttons.c **** 	buttons_pressed = 0;
 179              		.loc 1 83 0
 180 00b2 4FF00003 		mov	r3, #0
 181 00b6 BB73     		strb	r3, [r7, #14]
  84:../QS/QS_buttons.c **** 	#ifdef BUTTON0_PORT
  85:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON0_PORT)? buttons_pressed|1 : buttons_pressed;
  86:../QS/QS_buttons.c **** 	#endif
  87:../QS/QS_buttons.c **** 	#ifdef BUTTON1_PORT
  88:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON1_PORT)? buttons_pressed|2 : buttons_pressed;
 182              		.loc 1 88 0
 183 00b8 4FF48053 		mov	r3, #4096
 184 00bc C4F20203 		movt	r3, 16386
 185 00c0 1B69     		ldr	r3, [r3, #16]
 186 00c2 03F48053 		and	r3, r3, #4096
 187 00c6 002B     		cmp	r3, #0
 188 00c8 04D1     		bne	.L9
 189              		.loc 1 88 0 is_stmt 0 discriminator 1
 190 00ca BB7B     		ldrb	r3, [r7, #14]
 191 00cc 43F00203 		orr	r3, r3, #2
 192 00d0 DBB2     		uxtb	r3, r3
 193 00d2 00E0     		b	.L10
 194              	.L9:
 195              		.loc 1 88 0 discriminator 2
 196 00d4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 197              	.L10:
 198              		.loc 1 88 0 discriminator 3
 199 00d6 BB73     		strb	r3, [r7, #14]
  89:../QS/QS_buttons.c **** 	#endif
  90:../QS/QS_buttons.c **** 	#ifdef BUTTON2_PORT
  91:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON2_PORT)? buttons_pressed|4 : buttons_pressed;
 200              		.loc 1 91 0 is_stmt 1 discriminator 3
 201 00d8 4FF48053 		mov	r3, #4096
 202 00dc C4F20203 		movt	r3, 16386
 203 00e0 1B69     		ldr	r3, [r3, #16]
 204 00e2 03F40053 		and	r3, r3, #8192
 205 00e6 002B     		cmp	r3, #0
 206 00e8 04D1     		bne	.L11
 207              		.loc 1 91 0 is_stmt 0 discriminator 1
 208 00ea BB7B     		ldrb	r3, [r7, #14]
 209 00ec 43F00403 		orr	r3, r3, #4
 210 00f0 DBB2     		uxtb	r3, r3
 211 00f2 00E0     		b	.L12
 212              	.L11:
 213              		.loc 1 91 0 discriminator 2
 214 00f4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 215              	.L12:
 216              		.loc 1 91 0 discriminator 3
 217 00f6 BB73     		strb	r3, [r7, #14]
  92:../QS/QS_buttons.c **** 	#endif
  93:../QS/QS_buttons.c **** 	#ifdef BUTTON3_PORT
  94:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON3_PORT)? buttons_pressed|8 : buttons_pressed;
 218              		.loc 1 94 0 is_stmt 1 discriminator 3
 219 00f8 4FF48053 		mov	r3, #4096
 220 00fc C4F20203 		movt	r3, 16386
 221 0100 1B69     		ldr	r3, [r3, #16]
 222 0102 03F48043 		and	r3, r3, #16384
 223 0106 002B     		cmp	r3, #0
 224 0108 04D1     		bne	.L13
 225              		.loc 1 94 0 is_stmt 0 discriminator 1
 226 010a BB7B     		ldrb	r3, [r7, #14]
 227 010c 43F00803 		orr	r3, r3, #8
 228 0110 DBB2     		uxtb	r3, r3
 229 0112 00E0     		b	.L14
 230              	.L13:
 231              		.loc 1 94 0 discriminator 2
 232 0114 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 233              	.L14:
 234              		.loc 1 94 0 discriminator 3
 235 0116 BB73     		strb	r3, [r7, #14]
  95:../QS/QS_buttons.c **** 	#endif
  96:../QS/QS_buttons.c **** 	#ifdef BUTTON4_PORT
  97:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON4_PORT)? buttons_pressed|16 : buttons_pressed;
 236              		.loc 1 97 0 is_stmt 1 discriminator 3
 237 0118 4FF48053 		mov	r3, #4096
 238 011c C4F20203 		movt	r3, 16386
 239 0120 1B69     		ldr	r3, [r3, #16]
 240 0122 03F40043 		and	r3, r3, #32768
 241 0126 002B     		cmp	r3, #0
 242 0128 04D1     		bne	.L15
 243              		.loc 1 97 0 is_stmt 0 discriminator 1
 244 012a BB7B     		ldrb	r3, [r7, #14]
 245 012c 43F01003 		orr	r3, r3, #16
 246 0130 DBB2     		uxtb	r3, r3
 247 0132 00E0     		b	.L16
 248              	.L15:
 249              		.loc 1 97 0 discriminator 2
 250 0134 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 251              	.L16:
 252              		.loc 1 97 0 discriminator 3
 253 0136 BB73     		strb	r3, [r7, #14]
  98:../QS/QS_buttons.c **** 	#endif
  99:../QS/QS_buttons.c **** 	#ifdef BUTTON5_PORT
 100:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON5_PORT)? buttons_pressed|32 : buttons_pressed;
 101:../QS/QS_buttons.c **** 	#endif
 102:../QS/QS_buttons.c **** 	#ifdef BUTTON6_PORT
 103:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON6_PORT)? buttons_pressed|64 : buttons_pressed;
 104:../QS/QS_buttons.c **** 	#endif
 105:../QS/QS_buttons.c **** 	#ifdef BUTTON7_PORT
 106:../QS/QS_buttons.c **** 		buttons_pressed = (BUTTON7_PORT)? buttons_pressed|128 : buttons_pressed;
 107:../QS/QS_buttons.c **** 	#endif
 108:../QS/QS_buttons.c **** 
 109:../QS/QS_buttons.c **** 	//détection des fronts montant
 110:../QS/QS_buttons.c **** 	buttons_rising_edge = (~buttons_were_pressed) & buttons_pressed;
 254              		.loc 1 110 0 is_stmt 1 discriminator 3
 255 0138 40F20003 		movw	r3, #:lower16:buttons_were_pressed.6131
 256 013c C0F20003 		movt	r3, #:upper16:buttons_were_pressed.6131
 257 0140 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 258 0142 DBB2     		uxtb	r3, r3
 259 0144 6FEA0303 		mvn	r3, r3
 260 0148 DAB2     		uxtb	r2, r3
 261 014a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 262 014c 1340     		ands	r3, r3, r2
 263 014e DBB2     		uxtb	r3, r3
 264 0150 FB71     		strb	r3, [r7, #7]
 111:../QS/QS_buttons.c **** 	
 112:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
 265              		.loc 1 112 0 discriminator 3
 266 0152 4FF00003 		mov	r3, #0
 267 0156 FB73     		strb	r3, [r7, #15]
 268 0158 63E0     		b	.L17
 269              	.L21:
 113:../QS/QS_buttons.c **** 	{
 114:../QS/QS_buttons.c **** 		button = &(buttons[i]);
 270              		.loc 1 114 0
 271 015a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 272 015c 1346     		mov	r3, r2
 273 015e 4FEA4303 		lsl	r3, r3, #1
 274 0162 9B18     		adds	r3, r3, r2
 275 0164 4FEA8303 		lsl	r3, r3, #2
 276 0168 40F20002 		movw	r2, #:lower16:buttons
 277 016c C0F20002 		movt	r2, #:upper16:buttons
 278 0170 9B18     		adds	r3, r3, r2
 279 0172 BB60     		str	r3, [r7, #8]
 115:../QS/QS_buttons.c **** 		if(buttons_rising_edge&(1<<i))
 280              		.loc 1 115 0
 281 0174 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 282 0176 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 283 0178 42FA03F3 		asr	r3, r2, r3
 284 017c 03F00103 		and	r3, r3, #1
 285 0180 002B     		cmp	r3, #0
 286 0182 0CD0     		beq	.L18
 116:../QS/QS_buttons.c **** 		{			
 117:../QS/QS_buttons.c **** 			push_time[i]=button->long_push_time;
 287              		.loc 1 117 0
 288 0184 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 289 0186 BB68     		ldr	r3, [r7, #8]
 290 0188 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 291 018a 40F20003 		movw	r3, #:lower16:push_time
 292 018e C0F20003 		movt	r3, #:upper16:push_time
 293 0192 9954     		strb	r1, [r3, r2]
 118:../QS/QS_buttons.c **** 			button->long_push_already_detected = FALSE;
 294              		.loc 1 118 0
 295 0194 BB68     		ldr	r3, [r7, #8]
 296 0196 4FF00002 		mov	r2, #0
 297 019a 5A72     		strb	r2, [r3, #9]
 298 019c 3DE0     		b	.L19
 299              	.L18:
 119:../QS/QS_buttons.c **** 		}
 120:../QS/QS_buttons.c **** 		else
 121:../QS/QS_buttons.c **** 		{
 122:../QS/QS_buttons.c **** 			buttons_falling_edge = buttons_were_pressed & (~buttons_pressed);
 300              		.loc 1 122 0
 301 019e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 302 01a0 6FEA0303 		mvn	r3, r3
 303 01a4 DAB2     		uxtb	r2, r3
 304 01a6 40F20003 		movw	r3, #:lower16:buttons_were_pressed.6131
 305 01aa C0F20003 		movt	r3, #:upper16:buttons_were_pressed.6131
 306 01ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 307 01b0 DBB2     		uxtb	r3, r3
 308 01b2 1340     		ands	r3, r3, r2
 309 01b4 DBB2     		uxtb	r3, r3
 310 01b6 BB71     		strb	r3, [r7, #6]
 123:../QS/QS_buttons.c **** 
 124:../QS/QS_buttons.c **** 			//Nouveau code pour detecter les appui long sans avoir besoin de relacher le bouton avant
 125:../QS/QS_buttons.c **** 			//Prise en compte de l'appui long lorsque le compteur est passé à 0 (temps necessaire avant appu
 126:../QS/QS_buttons.c **** 			//Et bouton pressé (et fonction action non nulle)
 127:../QS/QS_buttons.c **** 
 128:../QS/QS_buttons.c **** 			if(button->long_push_already_detected == FALSE) {
 311              		.loc 1 128 0
 312 01b8 BB68     		ldr	r3, [r7, #8]
 313 01ba 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 314 01bc 002B     		cmp	r3, #0
 315 01be 2CD1     		bne	.L19
 129:../QS/QS_buttons.c **** 				action = button->after_long_push;
 316              		.loc 1 129 0
 317 01c0 BB68     		ldr	r3, [r7, #8]
 318 01c2 5B68     		ldr	r3, [r3, #4]
 319 01c4 3B60     		str	r3, [r7, #0]
 130:../QS/QS_buttons.c **** 				if((buttons_pressed & (1<<i)) && action != NULL && push_time[i] == 0)
 320              		.loc 1 130 0
 321 01c6 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 322 01c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 323 01ca 42FA03F3 		asr	r3, r2, r3
 324 01ce 03F00103 		and	r3, r3, #1
 325 01d2 002B     		cmp	r3, #0
 326 01d4 11D0     		beq	.L20
 327              		.loc 1 130 0 is_stmt 0 discriminator 1
 328 01d6 3B68     		ldr	r3, [r7, #0]
 329 01d8 002B     		cmp	r3, #0
 330 01da 0ED0     		beq	.L20
 331 01dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 332 01de 40F20003 		movw	r3, #:lower16:push_time
 333 01e2 C0F20003 		movt	r3, #:upper16:push_time
 334 01e6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 335 01e8 002B     		cmp	r3, #0
 336 01ea 06D1     		bne	.L20
 131:../QS/QS_buttons.c **** 				{
 132:../QS/QS_buttons.c **** 					button->long_push_already_detected = TRUE;
 337              		.loc 1 132 0 is_stmt 1
 338 01ec BB68     		ldr	r3, [r7, #8]
 339 01ee 4FF00102 		mov	r2, #1
 340 01f2 5A72     		strb	r2, [r3, #9]
 133:../QS/QS_buttons.c **** 					(*action)();
 341              		.loc 1 133 0
 342 01f4 3B68     		ldr	r3, [r7, #0]
 343 01f6 9847     		blx	r3
 344 01f8 0FE0     		b	.L19
 345              	.L20:
 134:../QS/QS_buttons.c **** 				}
 135:../QS/QS_buttons.c **** 				else if(buttons_falling_edge & (1<<i))
 346              		.loc 1 135 0
 347 01fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 348 01fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 349 01fe 42FA03F3 		asr	r3, r2, r3
 350 0202 03F00103 		and	r3, r3, #1
 351 0206 002B     		cmp	r3, #0
 352 0208 07D0     		beq	.L19
 136:../QS/QS_buttons.c **** 				{
 137:../QS/QS_buttons.c **** 					action = button->direct_push;
 353              		.loc 1 137 0
 354 020a BB68     		ldr	r3, [r7, #8]
 355 020c 1B68     		ldr	r3, [r3, #0]
 356 020e 3B60     		str	r3, [r7, #0]
 138:../QS/QS_buttons.c **** 					if(action != NULL)
 357              		.loc 1 138 0
 358 0210 3B68     		ldr	r3, [r7, #0]
 359 0212 002B     		cmp	r3, #0
 360 0214 01D0     		beq	.L19
 139:../QS/QS_buttons.c **** 					{
 140:../QS/QS_buttons.c **** 						(*action)();
 361              		.loc 1 140 0
 362 0216 3B68     		ldr	r3, [r7, #0]
 363 0218 9847     		blx	r3
 364              	.L19:
 112:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
 365              		.loc 1 112 0
 366 021a FB7B     		ldrb	r3, [r7, #15]
 367 021c 03F10103 		add	r3, r3, #1
 368 0220 FB73     		strb	r3, [r7, #15]
 369              	.L17:
 112:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
 370              		.loc 1 112 0 is_stmt 0 discriminator 1
 371 0222 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 372 0224 072B     		cmp	r3, #7
 373 0226 98D9     		bls	.L21
 141:../QS/QS_buttons.c **** 					}
 142:../QS/QS_buttons.c **** 				}
 143:../QS/QS_buttons.c **** 			}
 144:../QS/QS_buttons.c **** 		}
 145:../QS/QS_buttons.c **** 	}
 146:../QS/QS_buttons.c **** 
 147:../QS/QS_buttons.c **** 	buttons_were_pressed = buttons_pressed;
 374              		.loc 1 147 0 is_stmt 1
 375 0228 40F20003 		movw	r3, #:lower16:buttons_were_pressed.6131
 376 022c C0F20003 		movt	r3, #:upper16:buttons_were_pressed.6131
 377 0230 BA7B     		ldrb	r2, [r7, #14]
 378 0232 1A70     		strb	r2, [r3, #0]
 148:../QS/QS_buttons.c **** }
 379              		.loc 1 148 0
 380 0234 07F11007 		add	r7, r7, #16
 381 0238 BD46     		mov	sp, r7
 382 023a 80BD     		pop	{r7, pc}
 383              		.cfi_endproc
 384              	.LFE113:
 386              		.align	2
 387              		.global	BUTTONS_process_it
 388              		.thumb
 389              		.thumb_func
 391              	BUTTONS_process_it:
 392              	.LFB114:
 149:../QS/QS_buttons.c **** 
 150:../QS/QS_buttons.c **** void BUTTONS_process_it(void)
 151:../QS/QS_buttons.c **** {
 393              		.loc 1 151 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 023c 80B4     		push	{r7}
 399              	.LCFI9:
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 023e 83B0     		sub	sp, sp, #12
 403              	.LCFI10:
 404              		.cfi_def_cfa_offset 16
 405 0240 00AF     		add	r7, sp, #0
 406              	.LCFI11:
 407              		.cfi_def_cfa_register 7
 152:../QS/QS_buttons.c **** 	Uint8 i;
 153:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
 408              		.loc 1 153 0
 409 0242 4FF00003 		mov	r3, #0
 410 0246 FB71     		strb	r3, [r7, #7]
 411 0248 19E0     		b	.L23
 412              	.L25:
 154:../QS/QS_buttons.c **** 	{
 155:../QS/QS_buttons.c **** 		if(push_time[i] != 0)
 413              		.loc 1 155 0
 414 024a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 415 024c 40F20003 		movw	r3, #:lower16:push_time
 416 0250 C0F20003 		movt	r3, #:upper16:push_time
 417 0254 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 418 0256 002B     		cmp	r3, #0
 419 0258 0DD0     		beq	.L24
 156:../QS/QS_buttons.c **** 		{		
 157:../QS/QS_buttons.c **** 			push_time[i]--;
 420              		.loc 1 157 0
 421 025a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 422 025c 40F20003 		movw	r3, #:lower16:push_time
 423 0260 C0F20003 		movt	r3, #:upper16:push_time
 424 0264 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 425 0266 03F1FF33 		add	r3, r3, #-1
 426 026a D9B2     		uxtb	r1, r3
 427 026c 40F20003 		movw	r3, #:lower16:push_time
 428 0270 C0F20003 		movt	r3, #:upper16:push_time
 429 0274 9954     		strb	r1, [r3, r2]
 430              	.L24:
 153:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
 431              		.loc 1 153 0
 432 0276 FB79     		ldrb	r3, [r7, #7]
 433 0278 03F10103 		add	r3, r3, #1
 434 027c FB71     		strb	r3, [r7, #7]
 435              	.L23:
 153:../QS/QS_buttons.c **** 	for(i=0;i<BUTTONS_NUMBER;i++)
 436              		.loc 1 153 0 is_stmt 0 discriminator 1
 437 027e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 0280 072B     		cmp	r3, #7
 439 0282 E2D9     		bls	.L25
 158:../QS/QS_buttons.c **** 		}
 159:../QS/QS_buttons.c **** 	}
 160:../QS/QS_buttons.c **** }
 440              		.loc 1 160 0 is_stmt 1
 441 0284 07F10C07 		add	r7, r7, #12
 442 0288 BD46     		mov	sp, r7
 443 028a 80BC     		pop	{r7}
 444 028c 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE114:
 448              		.bss
 449              	buttons_were_pressed.6131:
 450 0068 00       		.space	1
 451              	initialized.6118:
 452 0069 00       		.space	1
 453 006a 0000     		.text
 454              	.Letext0:
 455              		.file 2 "c:\\program files (x86)\\eclipse-arm-eseo\\gcc-arm-none-eabi-4_7-2013q2-20130614-win32\\g
 456              		.file 3 "../stm32f4xx/stm32f4xx.h"
 457              		.file 4 "../QS/QS_types.h"
 458              		.file 5 "../QS/QS_buttons.h"
 459              		.file 6 "../stm32f4xx/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 QS_buttons.c
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:19     .bss:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:20     .bss:00000000 buttons
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:23     .bss:00000060 push_time
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:26     .text:00000000 $t
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:31     .text:00000000 BUTTONS_init
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:451    .bss:00000069 initialized.6118
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:94     .text:0000004c BUTTONS_define_actions
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:156    .text:000000a0 BUTTONS_update
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:449    .bss:00000068 buttons_were_pressed.6131
C:\Users\Amaury\AppData\Local\Temp\ccyNGrIy.s:391    .text:0000023c BUTTONS_process_it
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.13c6c37fe6ef97541a459ad1f2cd1ddb
                           .group:00000000 wm4.stm32f4xx.h.54.d172d9d6631f11a8436908e748990b53
                           .group:00000000 wm4.core_cm4.h.32.39d0f71cd333856d56f1935d9037195e
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.163.d36d54ebc869626f337c4fcb95a9b424
                           .group:00000000 wm4.stm32f4xx.h.306.7867854ab89778ccd63e1fde7c22c0b6
                           .group:00000000 wm4.stm32f4xx_rcc.h.65.29a27820bc754566c4190ed8ad1c1d80
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.7233.cb6cb3cb095c29e1fc0eb152d26090b1
                           .group:00000000 wm4.Global_config.h.14.bea53ddf4045d71f1c9fb87037131e8e
                           .group:00000000 wm4.config_global.h.12.5c30ea43d7f0d9daa101874e8ba75f6f
                           .group:00000000 wm4.config_qs.h.12.4699be7196e891fb4cd84d522e29cde7
                           .group:00000000 wm4.config_qs.h.12.8e0ab7f7cbbdaecfb1e464f5610b5d86
                           .group:00000000 wm4.QS_macro.h.19.3d2533714681986d2ad8c517737c4640
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.QS_timer.h.23.f1c7374d1ffe22793578c04386c6b1e2
                           .group:00000000 wm4.config_pin.h.12.92dbe1317fae649a069f2ce6e5ad725c
                           .group:00000000 wm4.config_pin.h.12.20ee5a96fdfc3c7ca3bc6056aaec7473

NO UNDEFINED SYMBOLS
