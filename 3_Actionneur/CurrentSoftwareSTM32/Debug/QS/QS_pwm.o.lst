   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"QS_pwm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	PWM_init
  20              		.thumb
  21              		.thumb_func
  23              	PWM_init:
  24              	.LFB111:
  25              		.file 1 "../QS/QS_pwm.c"
   1:../QS/QS_pwm.c **** /*
   2:../QS/QS_pwm.c ****  *  Club Robot ESEO 2009 - 2010
   3:../QS/QS_pwm.c ****  *  Chomp
   4:../QS/QS_pwm.c ****  *
   5:../QS/QS_pwm.c ****  *  Fichier : QS_pwm.c
   6:../QS/QS_pwm.c ****  *  Package : Qualité Soft
   7:../QS/QS_pwm.c ****  *  Description : Gestion des PWM sur TIM1, TIM3, TIM4
   8:../QS/QS_pwm.c ****  *  Auteur : Gwenn
   9:../QS/QS_pwm.c ****  *  Version 20100424
  10:../QS/QS_pwm.c ****  */
  11:../QS/QS_pwm.c **** 
  12:../QS/QS_pwm.c **** 
  13:../QS/QS_pwm.c **** #include "QS_pwm.h"
  14:../QS/QS_pwm.c **** #include "QS_ports.h"
  15:../QS/QS_pwm.c **** #include "stm32f4xx_tim.h"
  16:../QS/QS_pwm.c **** #include "QS_clocks_freq.h"
  17:../QS/QS_pwm.c **** 
  18:../QS/QS_pwm.c **** /* Configuration du prédiviseur */
  19:../QS/QS_pwm.c **** #if PWM_FREQ > 50000
  20:../QS/QS_pwm.c **** 	#error "Les ponts en H actuel ne supporte pas cette fréquence. Si c'est le cas un jour, veuillez p
  21:../QS/QS_pwm.c **** #endif
  22:../QS/QS_pwm.c **** 
  23:../QS/QS_pwm.c **** #if PWM_FREQ <= (TIM_CLK2_FREQUENCY_HZ / PWM_FINE_DUTY)
  24:../QS/QS_pwm.c **** 	#define PWM_PERIOD PWM_FINE_DUTY
  25:../QS/QS_pwm.c **** #else
  26:../QS/QS_pwm.c **** 	#define PWM_PERIOD PWM_HIGH_SPEED_DUTY
  27:../QS/QS_pwm.c **** #endif
  28:../QS/QS_pwm.c **** #define PWM_PRESC (TIM_CLK2_FREQUENCY_HZ / PWM_FREQ / PWM_PERIOD)
  29:../QS/QS_pwm.c **** 
  30:../QS/QS_pwm.c **** 
  31:../QS/QS_pwm.c **** #if PWM_PRESC > 65535
  32:../QS/QS_pwm.c **** #error "PWM Period is too low !"
  33:../QS/QS_pwm.c **** #endif
  34:../QS/QS_pwm.c **** #if PWM_PRESC == 0
  35:../QS/QS_pwm.c **** #error "PWM Period is too large !"
  36:../QS/QS_pwm.c **** #endif
  37:../QS/QS_pwm.c **** 
  38:../QS/QS_pwm.c **** #ifdef PWM_PRESC
  39:../QS/QS_pwm.c **** 
  40:../QS/QS_pwm.c **** /* Configuration des PWM */
  41:../QS/QS_pwm.c **** void PWM_init(void) {
  26              		.loc 1 41 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  42:../QS/QS_pwm.c **** 	static bool_e initialized = FALSE;
  43:../QS/QS_pwm.c **** 	if(initialized)
  41              		.loc 1 43 0
  42 0006 40F20003 		movw	r3, #:lower16:initialized.6061
  43 000a C0F20003 		movt	r3, #:upper16:initialized.6061
  44 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  45 0010 002B     		cmp	r3, #0
  46 0012 40F08F80 		bne	.L1
  44:../QS/QS_pwm.c **** 		return;
  45:../QS/QS_pwm.c **** 
  46:../QS/QS_pwm.c **** 	/* Structures */
  47:../QS/QS_pwm.c **** 	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
  48:../QS/QS_pwm.c **** 	TIM_OCInitTypeDef TIM_OCInitStructure;
  49:../QS/QS_pwm.c **** 
  50:../QS/QS_pwm.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM8, ENABLE);
  47              		.loc 1 50 0
  48 0016 4FF00200 		mov	r0, #2
  49 001a 4FF00101 		mov	r1, #1
  50 001e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  51:../QS/QS_pwm.c **** 
  52:../QS/QS_pwm.c **** 	PORTS_pwm_init();
  51              		.loc 1 52 0
  52 0022 FFF7FEFF 		bl	PORTS_pwm_init
  53:../QS/QS_pwm.c **** 
  54:../QS/QS_pwm.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
  53              		.loc 1 54 0
  54 0026 4FF00003 		mov	r3, #0
  55 002a BB83     		strh	r3, [r7, #28]	@ movhi
  55:../QS/QS_pwm.c **** 	TIM_TimeBaseStructure.TIM_CounterMode   = TIM_CounterMode_Up;
  56              		.loc 1 55 0
  57 002c 4FF00003 		mov	r3, #0
  58 0030 FB82     		strh	r3, [r7, #22]	@ movhi
  56:../QS/QS_pwm.c **** 	TIM_TimeBaseStructure.TIM_Period        = PWM_PERIOD - 1;	//Le timer compte de 0 à period inclus
  59              		.loc 1 56 0
  60 0032 4FF06303 		mov	r3, #99
  61 0036 BB61     		str	r3, [r7, #24]
  57:../QS/QS_pwm.c **** 	TIM_TimeBaseStructure.TIM_Prescaler     = PWM_PRESC - 1;
  62              		.loc 1 57 0
  63 0038 4FF01F03 		mov	r3, #31
  64 003c BB82     		strh	r3, [r7, #20]	@ movhi
  58:../QS/QS_pwm.c **** 	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
  65              		.loc 1 58 0
  66 003e 4FF00003 		mov	r3, #0
  67 0042 BB77     		strb	r3, [r7, #30]
  59:../QS/QS_pwm.c **** 	TIM_TimeBaseInit(TIM8, &TIM_TimeBaseStructure);
  68              		.loc 1 59 0
  69 0044 07F11403 		add	r3, r7, #20
  70 0048 4FF48060 		mov	r0, #1024
  71 004c C4F20100 		movt	r0, 16385
  72 0050 1946     		mov	r1, r3
  73 0052 FFF7FEFF 		bl	TIM_TimeBaseInit
  60:../QS/QS_pwm.c **** 
  61:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
  74              		.loc 1 61 0
  75 0056 4FF06003 		mov	r3, #96
  76 005a 3B80     		strh	r3, [r7, #0]	@ movhi
  62:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  77              		.loc 1 62 0
  78 005c 4FF00103 		mov	r3, #1
  79 0060 7B80     		strh	r3, [r7, #2]	@ movhi
  63:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OutputNState = TIM_OutputNState_Disable;
  80              		.loc 1 63 0
  81 0062 4FF00003 		mov	r3, #0
  82 0066 BB80     		strh	r3, [r7, #4]	@ movhi
  64:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_Pulse = 0;
  83              		.loc 1 64 0
  84 0068 4FF00003 		mov	r3, #0
  85 006c BB60     		str	r3, [r7, #8]
  65:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
  86              		.loc 1 65 0
  87 006e 4FF00003 		mov	r3, #0
  88 0072 BB81     		strh	r3, [r7, #12]	@ movhi
  66:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OCNPolarity = TIM_OCPolarity_High;
  89              		.loc 1 66 0
  90 0074 4FF00003 		mov	r3, #0
  91 0078 FB81     		strh	r3, [r7, #14]	@ movhi
  67:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Reset;
  92              		.loc 1 67 0
  93 007a 4FF00003 		mov	r3, #0
  94 007e 3B82     		strh	r3, [r7, #16]	@ movhi
  68:../QS/QS_pwm.c **** 	TIM_OCInitStructure.TIM_OCNIdleState = TIM_OCIdleState_Reset;
  95              		.loc 1 68 0
  96 0080 4FF00003 		mov	r3, #0
  97 0084 7B82     		strh	r3, [r7, #18]	@ movhi
  69:../QS/QS_pwm.c **** 
  70:../QS/QS_pwm.c **** 	TIM_OC1Init(TIM8, &TIM_OCInitStructure);
  98              		.loc 1 70 0
  99 0086 3B46     		mov	r3, r7
 100 0088 4FF48060 		mov	r0, #1024
 101 008c C4F20100 		movt	r0, 16385
 102 0090 1946     		mov	r1, r3
 103 0092 FFF7FEFF 		bl	TIM_OC1Init
  71:../QS/QS_pwm.c **** 	TIM_OC1PreloadConfig(TIM8, TIM_OCPreload_Enable);
 104              		.loc 1 71 0
 105 0096 4FF48060 		mov	r0, #1024
 106 009a C4F20100 		movt	r0, 16385
 107 009e 4FF00801 		mov	r1, #8
 108 00a2 FFF7FEFF 		bl	TIM_OC1PreloadConfig
  72:../QS/QS_pwm.c **** 	TIM_OC2Init(TIM8, &TIM_OCInitStructure);
 109              		.loc 1 72 0
 110 00a6 3B46     		mov	r3, r7
 111 00a8 4FF48060 		mov	r0, #1024
 112 00ac C4F20100 		movt	r0, 16385
 113 00b0 1946     		mov	r1, r3
 114 00b2 FFF7FEFF 		bl	TIM_OC2Init
  73:../QS/QS_pwm.c **** 	TIM_OC1PreloadConfig(TIM8, TIM_OCPreload_Enable);
 115              		.loc 1 73 0
 116 00b6 4FF48060 		mov	r0, #1024
 117 00ba C4F20100 		movt	r0, 16385
 118 00be 4FF00801 		mov	r1, #8
 119 00c2 FFF7FEFF 		bl	TIM_OC1PreloadConfig
  74:../QS/QS_pwm.c **** 	TIM_OC3Init(TIM8, &TIM_OCInitStructure);
 120              		.loc 1 74 0
 121 00c6 3B46     		mov	r3, r7
 122 00c8 4FF48060 		mov	r0, #1024
 123 00cc C4F20100 		movt	r0, 16385
 124 00d0 1946     		mov	r1, r3
 125 00d2 FFF7FEFF 		bl	TIM_OC3Init
  75:../QS/QS_pwm.c **** 	TIM_OC1PreloadConfig(TIM8, TIM_OCPreload_Enable);
 126              		.loc 1 75 0
 127 00d6 4FF48060 		mov	r0, #1024
 128 00da C4F20100 		movt	r0, 16385
 129 00de 4FF00801 		mov	r1, #8
 130 00e2 FFF7FEFF 		bl	TIM_OC1PreloadConfig
  76:../QS/QS_pwm.c **** 	TIM_OC4Init(TIM8, &TIM_OCInitStructure);
 131              		.loc 1 76 0
 132 00e6 3B46     		mov	r3, r7
 133 00e8 4FF48060 		mov	r0, #1024
 134 00ec C4F20100 		movt	r0, 16385
 135 00f0 1946     		mov	r1, r3
 136 00f2 FFF7FEFF 		bl	TIM_OC4Init
  77:../QS/QS_pwm.c **** 	TIM_OC1PreloadConfig(TIM8, TIM_OCPreload_Enable);
 137              		.loc 1 77 0
 138 00f6 4FF48060 		mov	r0, #1024
 139 00fa C4F20100 		movt	r0, 16385
 140 00fe 4FF00801 		mov	r1, #8
 141 0102 FFF7FEFF 		bl	TIM_OC1PreloadConfig
  78:../QS/QS_pwm.c **** 
  79:../QS/QS_pwm.c **** 	TIM_Cmd(TIM8, ENABLE);
 142              		.loc 1 79 0
 143 0106 4FF48060 		mov	r0, #1024
 144 010a C4F20100 		movt	r0, 16385
 145 010e 4FF00101 		mov	r1, #1
 146 0112 FFF7FEFF 		bl	TIM_Cmd
  80:../QS/QS_pwm.c **** 	TIM_CtrlPWMOutputs(TIM8, ENABLE);
 147              		.loc 1 80 0
 148 0116 4FF48060 		mov	r0, #1024
 149 011a C4F20100 		movt	r0, 16385
 150 011e 4FF00101 		mov	r1, #1
 151 0122 FFF7FEFF 		bl	TIM_CtrlPWMOutputs
  81:../QS/QS_pwm.c **** 
  82:../QS/QS_pwm.c **** 	initialized = TRUE;
 152              		.loc 1 82 0
 153 0126 40F20003 		movw	r3, #:lower16:initialized.6061
 154 012a C0F20003 		movt	r3, #:upper16:initialized.6061
 155 012e 4FF00102 		mov	r2, #1
 156 0132 1A70     		strb	r2, [r3, #0]
 157              	.L1:
  83:../QS/QS_pwm.c **** }
 158              		.loc 1 83 0
 159 0134 07F12007 		add	r7, r7, #32
 160 0138 BD46     		mov	sp, r7
 161 013a 80BD     		pop	{r7, pc}
 162              		.cfi_endproc
 163              	.LFE111:
 165              		.align	2
 166              		.global	PWM_run
 167              		.thumb
 168              		.thumb_func
 170              	PWM_run:
 171              	.LFB112:
  84:../QS/QS_pwm.c **** 
  85:../QS/QS_pwm.c **** /* Fonctions de manipulation des PWM */
  86:../QS/QS_pwm.c **** void PWM_run(Uint8 duty /* en pourcents*/, Uint8 channel) {
 172              		.loc 1 86 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 013c 80B5     		push	{r7, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 013e 82B0     		sub	sp, sp, #8
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 16
 184 0140 00AF     		add	r7, sp, #0
 185              	.LCFI5:
 186              		.cfi_def_cfa_register 7
 187 0142 0246     		mov	r2, r0
 188 0144 0B46     		mov	r3, r1
 189 0146 FA71     		strb	r2, [r7, #7]
 190 0148 BB71     		strb	r3, [r7, #6]
  87:../QS/QS_pwm.c **** 	switch(channel) {
 191              		.loc 1 87 0
 192 014a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 193 014c 03F1FF33 		add	r3, r3, #-1
 194 0150 032B     		cmp	r3, #3
 195 0152 2FD8     		bhi	.L4
 196 0154 01A2     		adr	r2, .L10
 197 0156 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 198 015a 00BF     		.align	2
 199              	.L10:
 200 015c 6D010000 		.word	.L6+1
 201 0160 7F010000 		.word	.L7+1
 202 0164 91010000 		.word	.L8+1
 203 0168 A3010000 		.word	.L9+1
 204              	.L6:
  88:../QS/QS_pwm.c **** 		case 1:
  89:../QS/QS_pwm.c **** 			TIM_SetCompare1(TIM8, duty * (PWM_PERIOD/100));
 205              		.loc 1 89 0
 206 016c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 207 016e 4FF48060 		mov	r0, #1024
 208 0172 C4F20100 		movt	r0, 16385
 209 0176 1946     		mov	r1, r3
 210 0178 FFF7FEFF 		bl	TIM_SetCompare1
  90:../QS/QS_pwm.c **** 			break;
 211              		.loc 1 90 0
 212 017c 1AE0     		b	.L4
 213              	.L7:
  91:../QS/QS_pwm.c **** 
  92:../QS/QS_pwm.c **** 		case 2:
  93:../QS/QS_pwm.c **** 			TIM_SetCompare2(TIM8, duty * (PWM_PERIOD/100));
 214              		.loc 1 93 0
 215 017e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 216 0180 4FF48060 		mov	r0, #1024
 217 0184 C4F20100 		movt	r0, 16385
 218 0188 1946     		mov	r1, r3
 219 018a FFF7FEFF 		bl	TIM_SetCompare2
  94:../QS/QS_pwm.c **** 			break;
 220              		.loc 1 94 0
 221 018e 11E0     		b	.L4
 222              	.L8:
  95:../QS/QS_pwm.c **** 
  96:../QS/QS_pwm.c **** 		case 3:
  97:../QS/QS_pwm.c **** 			TIM_SetCompare3(TIM8, duty * (PWM_PERIOD/100));
 223              		.loc 1 97 0
 224 0190 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 225 0192 4FF48060 		mov	r0, #1024
 226 0196 C4F20100 		movt	r0, 16385
 227 019a 1946     		mov	r1, r3
 228 019c FFF7FEFF 		bl	TIM_SetCompare3
  98:../QS/QS_pwm.c **** 			break;
 229              		.loc 1 98 0
 230 01a0 08E0     		b	.L4
 231              	.L9:
  99:../QS/QS_pwm.c **** 
 100:../QS/QS_pwm.c **** 		case 4:
 101:../QS/QS_pwm.c **** 			TIM_SetCompare4(TIM8, duty * (PWM_PERIOD/100));
 232              		.loc 1 101 0
 233 01a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 234 01a4 4FF48060 		mov	r0, #1024
 235 01a8 C4F20100 		movt	r0, 16385
 236 01ac 1946     		mov	r1, r3
 237 01ae FFF7FEFF 		bl	TIM_SetCompare4
 102:../QS/QS_pwm.c **** 			break;
 238              		.loc 1 102 0
 239 01b2 00BF     		nop
 240              	.L4:
 103:../QS/QS_pwm.c **** 	}
 104:../QS/QS_pwm.c **** }
 241              		.loc 1 104 0
 242 01b4 07F10807 		add	r7, r7, #8
 243 01b8 BD46     		mov	sp, r7
 244 01ba 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE112:
 248              		.align	2
 249              		.global	PWM_stop
 250              		.thumb
 251              		.thumb_func
 253              	PWM_stop:
 254              	.LFB113:
 105:../QS/QS_pwm.c **** 
 106:../QS/QS_pwm.c **** void PWM_stop(Uint8 channel) {
 255              		.loc 1 106 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259 01bc 80B5     		push	{r7, lr}
 260              	.LCFI6:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 01be 82B0     		sub	sp, sp, #8
 265              	.LCFI7:
 266              		.cfi_def_cfa_offset 16
 267 01c0 00AF     		add	r7, sp, #0
 268              	.LCFI8:
 269              		.cfi_def_cfa_register 7
 270 01c2 0346     		mov	r3, r0
 271 01c4 FB71     		strb	r3, [r7, #7]
 107:../QS/QS_pwm.c **** 	PWM_run(0, channel);
 272              		.loc 1 107 0
 273 01c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 274 01c8 4FF00000 		mov	r0, #0
 275 01cc 1946     		mov	r1, r3
 276 01ce FFF7FEFF 		bl	PWM_run
 108:../QS/QS_pwm.c **** }
 277              		.loc 1 108 0
 278 01d2 07F10807 		add	r7, r7, #8
 279 01d6 BD46     		mov	sp, r7
 280 01d8 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE113:
 284              		.bss
 285              	initialized.6061:
 286 0000 00       		.space	1
 287              		.text
 288              	.Letext0:
 289              		.file 2 "c:\\program files (x86)\\eclipse-arm-eseo\\gcc-arm-none-eabi-4_7-2013q2-20130614-win32\\g
 290              		.file 3 "../stm32f4xx/stm32f4xx.h"
 291              		.file 4 "../QS/QS_types.h"
 292              		.file 5 "../stm32f4xx/stm32f4xx_tim.h"
 293              		.file 6 "../stm32f4xx/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 QS_pwm.c
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:18     .text:00000000 $t
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:23     .text:00000000 PWM_init
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:285    .bss:00000000 initialized.6061
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:170    .text:0000013c PWM_run
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:200    .text:0000015c $d
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:206    .text:0000016c $t
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:253    .text:000001bc PWM_stop
C:\Users\Amaury\AppData\Local\Temp\cc2gd1bc.s:286    .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.13c6c37fe6ef97541a459ad1f2cd1ddb
                           .group:00000000 wm4.stm32f4xx.h.54.d172d9d6631f11a8436908e748990b53
                           .group:00000000 wm4.core_cm4.h.32.39d0f71cd333856d56f1935d9037195e
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.163.d36d54ebc869626f337c4fcb95a9b424
                           .group:00000000 wm4.stm32f4xx.h.306.7867854ab89778ccd63e1fde7c22c0b6
                           .group:00000000 wm4.stm32f4xx_rcc.h.65.29a27820bc754566c4190ed8ad1c1d80
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.7233.cb6cb3cb095c29e1fc0eb152d26090b1
                           .group:00000000 wm4.Global_config.h.14.bea53ddf4045d71f1c9fb87037131e8e
                           .group:00000000 wm4.config_global.h.12.5c30ea43d7f0d9daa101874e8ba75f6f
                           .group:00000000 wm4.config_qs.h.12.4699be7196e891fb4cd84d522e29cde7
                           .group:00000000 wm4.config_qs.h.12.8e0ab7f7cbbdaecfb1e464f5610b5d86
                           .group:00000000 wm4.QS_macro.h.19.3d2533714681986d2ad8c517737c4640
                           .group:00000000 wm4.QS_clocks_freq.h.15.e5020a075be21770f1522d00d0991706
                           .group:00000000 wm4.QS_pwm.h.25.dd9bf752580f7e22ed1466c657889d1f
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
PORTS_pwm_init
TIM_TimeBaseInit
TIM_OC1Init
TIM_OC1PreloadConfig
TIM_OC2Init
TIM_OC3Init
TIM_OC4Init
TIM_Cmd
TIM_CtrlPWMOutputs
TIM_SetCompare1
TIM_SetCompare2
TIM_SetCompare3
TIM_SetCompare4
