   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"act_queue_utils.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	ACTQ_push_operation_from_msg
  20              		.thumb
  21              		.thumb_func
  23              	ACTQ_push_operation_from_msg:
  24              	.LFB111:
  25              		.file 1 "../act_queue_utils.c"
   1:../act_queue_utils.c **** /*
   2:../act_queue_utils.c ****  *	Club Robot ESEO 2012 - 2013
   3:../act_queue_utils.c ****  *	Krusty & Tiny
   4:../act_queue_utils.c ****  *
   5:../act_queue_utils.c ****  *	Fichier : act_queue_utils.c
   6:../act_queue_utils.c ****  *	Package : Carte Actionneur
   7:../act_queue_utils.c ****  *	Description : Propose des fonctions pour gérer les actions avec la pile.
   8:../act_queue_utils.c ****  *	Auteur : Alexis
   9:../act_queue_utils.c ****  *	Version 20130420
  10:../act_queue_utils.c ****  */
  11:../act_queue_utils.c **** 
  12:../act_queue_utils.c **** #include "act_queue_utils.h"
  13:../act_queue_utils.c **** #include "QS/QS_CANmsgList.h"
  14:../act_queue_utils.c **** #include "QS/QS_can.h"
  15:../act_queue_utils.c **** #include "QS/QS_ax12.h"
  16:../act_queue_utils.c **** #include "QS/QS_DCMotor2.h"
  17:../act_queue_utils.c **** 
  18:../act_queue_utils.c **** #include "config_debug.h"
  19:../act_queue_utils.c **** #define LOG_PREFIX "ActUtils: "
  20:../act_queue_utils.c **** #define LOG_COMPONENT OUTPUT_LOG_COMPONENT_ACTQUEUEUTILS
  21:../act_queue_utils.c **** #include "QS/QS_outputlog.h"
  22:../act_queue_utils.c **** 
  23:../act_queue_utils.c **** typedef enum {
  24:../act_queue_utils.c **** 	CAN_TPT_NoParam, //Pas de paramètre
  25:../act_queue_utils.c **** 	CAN_TPT_Line,    //Le paramètre est une ligne
  26:../act_queue_utils.c **** 	CAN_TPT_Normal   //Le paramètre est un nombre normal sans signification particulière pour nous (ce
  27:../act_queue_utils.c **** } CAN_result_param_type_t;
  28:../act_queue_utils.c **** static void ACTQ_printResult(Uint11 originalSid, Uint8 originalCommand, Uint8 result, Uint8 errorCo
  29:../act_queue_utils.c **** 
  30:../act_queue_utils.c **** 
  31:../act_queue_utils.c **** //Met sur la pile une action qui sera gérée par act_function_ptr avec en paramètre param. L'action 
  32:../act_queue_utils.c **** //Cette fonction est appelée par les fonctions de traitement des messages CAN de chaque actionneur.
  33:../act_queue_utils.c **** void ACTQ_push_operation_from_msg(CAN_msg_t* msg, QUEUE_act_e act_id, action_t act_function_ptr, Ui
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 48
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 8EB0     		sub	sp, sp, #56
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 64
  38 0004 02AF     		add	r7, sp, #8
  39              	.LCFI2:
  40              		.cfi_def_cfa 7, 56
  41 0006 F860     		str	r0, [r7, #12]
  42 0008 7A60     		str	r2, [r7, #4]
  43 000a 0A46     		mov	r2, r1
  44 000c FA72     		strb	r2, [r7, #11]
  45 000e 3B81     		strh	r3, [r7, #8]	@ movhi
  34:../act_queue_utils.c **** 	queue_id_t queueId = QUEUE_create();
  46              		.loc 1 34 0
  47 0010 FFF7FEFF 		bl	QUEUE_create
  48 0014 0346     		mov	r3, r0
  49 0016 87F82F30 		strb	r3, [r7, #47]
  35:../act_queue_utils.c **** 	assert(queueId != QUEUE_CREATE_FAILED);
  36:../act_queue_utils.c **** 	if(queueId != QUEUE_CREATE_FAILED) {	//Si on est pas en verbose_mode, l'assert sera ignoré et la s
  50              		.loc 1 36 0
  51 001a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  52 001e FF2B     		cmp	r3, #255
  53 0020 44D0     		beq	.L2
  37:../act_queue_utils.c **** 		QUEUE_add(queueId, &QUEUE_take_sem, (QUEUE_arg_t){0, 0, NULL}, act_id);
  54              		.loc 1 37 0
  55 0022 4FF00003 		mov	r3, #0
  56 0026 3B75     		strb	r3, [r7, #20]
  57 0028 4FF00003 		mov	r3, #0
  58 002c FB82     		strh	r3, [r7, #22]	@ movhi
  59 002e 4FF00003 		mov	r3, #0
  60 0032 BB61     		str	r3, [r7, #24]
  61 0034 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  62 0038 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
  63 003a 0092     		str	r2, [sp, #0]
  64 003c 1846     		mov	r0, r3
  65 003e 40F20001 		movw	r1, #:lower16:QUEUE_take_sem
  66 0042 C0F20001 		movt	r1, #:upper16:QUEUE_take_sem
  67 0046 07F11403 		add	r3, r7, #20
  68 004a 0CCB     		ldmia	r3, {r2, r3}
  69 004c FFF7FEFF 		bl	QUEUE_add
  38:../act_queue_utils.c **** 		QUEUE_add(queueId, act_function_ptr, (QUEUE_arg_t){msg->data[0], param, &ACTQ_finish_SendResult},
  70              		.loc 1 38 0
  71 0050 FB68     		ldr	r3, [r7, #12]
  72 0052 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  73 0054 3B77     		strb	r3, [r7, #28]
  74 0056 3B89     		ldrh	r3, [r7, #8]	@ movhi
  75 0058 FB83     		strh	r3, [r7, #30]	@ movhi
  76 005a 40F20003 		movw	r3, #:lower16:ACTQ_finish_SendResult
  77 005e C0F20003 		movt	r3, #:upper16:ACTQ_finish_SendResult
  78 0062 3B62     		str	r3, [r7, #32]
  79 0064 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  80 0068 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
  81 006a 0092     		str	r2, [sp, #0]
  82 006c 1846     		mov	r0, r3
  83 006e 7968     		ldr	r1, [r7, #4]
  84 0070 07F11C03 		add	r3, r7, #28
  85 0074 0CCB     		ldmia	r3, {r2, r3}
  86 0076 FFF7FEFF 		bl	QUEUE_add
  39:../act_queue_utils.c **** 		QUEUE_add(queueId, &QUEUE_give_sem, (QUEUE_arg_t){0, 0, NULL}, act_id);
  87              		.loc 1 39 0
  88 007a 4FF00003 		mov	r3, #0
  89 007e 87F82430 		strb	r3, [r7, #36]
  90 0082 4FF00003 		mov	r3, #0
  91 0086 FB84     		strh	r3, [r7, #38]	@ movhi
  92 0088 4FF00003 		mov	r3, #0
  93 008c BB62     		str	r3, [r7, #40]
  94 008e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  95 0092 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
  96 0094 0092     		str	r2, [sp, #0]
  97 0096 1846     		mov	r0, r3
  98 0098 40F20001 		movw	r1, #:lower16:QUEUE_give_sem
  99 009c C0F20001 		movt	r1, #:upper16:QUEUE_give_sem
 100 00a0 07F12403 		add	r3, r7, #36
 101 00a4 0CCB     		ldmia	r3, {r2, r3}
 102 00a6 FFF7FEFF 		bl	QUEUE_add
 103 00aa 0BE0     		b	.L1
 104              	.L2:
  40:../act_queue_utils.c **** 	} else {	//on indique qu'on a pas géré la commande
  41:../act_queue_utils.c **** 		//CAN_msg_t resultMsg = {ACT_RESULT, {msg->sid & 0xFF, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_
  42:../act_queue_utils.c **** 		//CAN_send(&resultMsg);
  43:../act_queue_utils.c **** 		ACTQ_sendResult(msg->sid, msg->data[0], ACT_RESULT_NOT_HANDLED, ACT_RESULT_ERROR_NO_RESOURCES);
 105              		.loc 1 43 0
 106 00ac FB68     		ldr	r3, [r7, #12]
 107 00ae 1A88     		ldrh	r2, [r3, #0]
 108 00b0 FB68     		ldr	r3, [r7, #12]
 109 00b2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 110 00b4 1046     		mov	r0, r2
 111 00b6 1946     		mov	r1, r3
 112 00b8 4FF00202 		mov	r2, #2
 113 00bc 4FF00503 		mov	r3, #5
 114 00c0 FFF7FEFF 		bl	ACTQ_sendResult
 115              	.L1:
  44:../act_queue_utils.c **** 	}
  45:../act_queue_utils.c **** }
 116              		.loc 1 45 0
 117 00c4 07F13007 		add	r7, r7, #48
 118 00c8 BD46     		mov	sp, r7
 119 00ca 80BD     		pop	{r7, pc}
 120              		.cfi_endproc
 121              	.LFE111:
 123              		.align	2
 124              		.global	ACTQ_sendResult
 125              		.thumb
 126              		.thumb_func
 128              	ACTQ_sendResult:
 129              	.LFB112:
  46:../act_queue_utils.c **** 
  47:../act_queue_utils.c **** //Envoie le message CAN de retour à la strat (et affiche des infos de debuggage si activé)
  48:../act_queue_utils.c **** void ACTQ_sendResult(Uint11 originalSid, Uint8 originalCommand, Uint8 result, Uint8 errorCode) {
 130              		.loc 1 48 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 24
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 00cc 90B5     		push	{r4, r7, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 12
 137              		.cfi_offset 4, -12
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 00ce 8BB0     		sub	sp, sp, #44
 141              	.LCFI4:
 142              		.cfi_def_cfa_offset 56
 143 00d0 04AF     		add	r7, sp, #16
 144              	.LCFI5:
 145              		.cfi_def_cfa 7, 40
 146 00d2 F880     		strh	r0, [r7, #6]	@ movhi
 147 00d4 7971     		strb	r1, [r7, #5]
 148 00d6 3A71     		strb	r2, [r7, #4]
 149 00d8 FB70     		strb	r3, [r7, #3]
  49:../act_queue_utils.c **** 	CAN_msg_t resultMsg;
  50:../act_queue_utils.c **** 
  51:../act_queue_utils.c **** 	if(global.match_started == TRUE) {
 150              		.loc 1 51 0
 151 00da 40F20003 		movw	r3, #:lower16:global
 152 00de C0F20003 		movt	r3, #:upper16:global
 153 00e2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 154 00e4 012B     		cmp	r3, #1
 155 00e6 13D1     		bne	.L5
  52:../act_queue_utils.c **** 		resultMsg.sid = ACT_RESULT;
 156              		.loc 1 52 0
 157 00e8 4FF40C73 		mov	r3, #560
 158 00ec BB81     		strh	r3, [r7, #12]	@ movhi
  53:../act_queue_utils.c **** 		resultMsg.data[0] = originalSid & 0xFF;
 159              		.loc 1 53 0
 160 00ee FB88     		ldrh	r3, [r7, #6]	@ movhi
 161 00f0 DBB2     		uxtb	r3, r3
 162 00f2 BB73     		strb	r3, [r7, #14]
  54:../act_queue_utils.c **** 		resultMsg.data[1] = originalCommand;
 163              		.loc 1 54 0
 164 00f4 7B79     		ldrb	r3, [r7, #5]
 165 00f6 FB73     		strb	r3, [r7, #15]
  55:../act_queue_utils.c **** 		resultMsg.data[2] = result;
 166              		.loc 1 55 0
 167 00f8 3B79     		ldrb	r3, [r7, #4]
 168 00fa 3B74     		strb	r3, [r7, #16]
  56:../act_queue_utils.c **** 		resultMsg.data[3] = errorCode;
 169              		.loc 1 56 0
 170 00fc FB78     		ldrb	r3, [r7, #3]
 171 00fe 7B74     		strb	r3, [r7, #17]
  57:../act_queue_utils.c **** 		resultMsg.size = 4;
 172              		.loc 1 57 0
 173 0100 4FF00403 		mov	r3, #4
 174 0104 BB75     		strb	r3, [r7, #22]
  58:../act_queue_utils.c **** 
  59:../act_queue_utils.c **** 		CAN_send(&resultMsg);
 175              		.loc 1 59 0
 176 0106 07F10C03 		add	r3, r7, #12
 177 010a 1846     		mov	r0, r3
 178 010c FFF7FEFF 		bl	CAN_send
 179              	.L5:
  60:../act_queue_utils.c **** 	}
  61:../act_queue_utils.c **** 
  62:../act_queue_utils.c **** 	ACTQ_printResult(originalSid, originalCommand, result, errorCode, CAN_TPT_NoParam, 0, TRUE);
 180              		.loc 1 62 0
 181 0110 F888     		ldrh	r0, [r7, #6]
 182 0112 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 183 0114 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 184 0116 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 185 0118 4FF00004 		mov	r4, #0
 186 011c 0094     		str	r4, [sp, #0]
 187 011e 4FF00004 		mov	r4, #0
 188 0122 0194     		str	r4, [sp, #4]
 189 0124 4FF00104 		mov	r4, #1
 190 0128 0294     		str	r4, [sp, #8]
 191 012a 00F06BFA 		bl	ACTQ_printResult
  63:../act_queue_utils.c **** }
 192              		.loc 1 63 0
 193 012e 07F11C07 		add	r7, r7, #28
 194 0132 BD46     		mov	sp, r7
 195 0134 90BD     		pop	{r4, r7, pc}
 196              		.cfi_endproc
 197              	.LFE112:
 199 0136 00BF     		.align	2
 200              		.global	ACTQ_sendResultWithParam
 201              		.thumb
 202              		.thumb_func
 204              	ACTQ_sendResultWithParam:
 205              	.LFB113:
  64:../act_queue_utils.c **** 
  65:../act_queue_utils.c **** //Comme CAN_sendResult mais ajoute un paramètre au message. Peut servir pour debuggage.
  66:../act_queue_utils.c **** void ACTQ_sendResultWithParam(Uint11 originalSid, Uint8 originalCommand, Uint8 result, Uint8 errorC
 206              		.loc 1 66 0
 207              		.cfi_startproc
 208              		@ args = 4, pretend = 0, frame = 24
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0138 90B5     		push	{r4, r7, lr}
 211              	.LCFI6:
 212              		.cfi_def_cfa_offset 12
 213              		.cfi_offset 4, -12
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 013a 8BB0     		sub	sp, sp, #44
 217              	.LCFI7:
 218              		.cfi_def_cfa_offset 56
 219 013c 04AF     		add	r7, sp, #16
 220              	.LCFI8:
 221              		.cfi_def_cfa 7, 40
 222 013e F880     		strh	r0, [r7, #6]	@ movhi
 223 0140 7971     		strb	r1, [r7, #5]
 224 0142 3A71     		strb	r2, [r7, #4]
 225 0144 FB70     		strb	r3, [r7, #3]
  67:../act_queue_utils.c **** 	CAN_msg_t resultMsg;
  68:../act_queue_utils.c **** 
  69:../act_queue_utils.c **** 	resultMsg.sid = ACT_RESULT;
 226              		.loc 1 69 0
 227 0146 4FF40C73 		mov	r3, #560
 228 014a BB81     		strh	r3, [r7, #12]	@ movhi
  70:../act_queue_utils.c **** 	resultMsg.data[0] = originalSid & 0xFF;
 229              		.loc 1 70 0
 230 014c FB88     		ldrh	r3, [r7, #6]	@ movhi
 231 014e DBB2     		uxtb	r3, r3
 232 0150 BB73     		strb	r3, [r7, #14]
  71:../act_queue_utils.c **** 	resultMsg.data[1] = originalCommand;
 233              		.loc 1 71 0
 234 0152 7B79     		ldrb	r3, [r7, #5]
 235 0154 FB73     		strb	r3, [r7, #15]
  72:../act_queue_utils.c **** 	resultMsg.data[2] = result;
 236              		.loc 1 72 0
 237 0156 3B79     		ldrb	r3, [r7, #4]
 238 0158 3B74     		strb	r3, [r7, #16]
  73:../act_queue_utils.c **** 	resultMsg.data[3] = errorCode;
 239              		.loc 1 73 0
 240 015a FB78     		ldrb	r3, [r7, #3]
 241 015c 7B74     		strb	r3, [r7, #17]
  74:../act_queue_utils.c **** 	resultMsg.data[4] = LOWINT(param);
 242              		.loc 1 74 0
 243 015e 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 244 0160 DBB2     		uxtb	r3, r3
 245 0162 BB74     		strb	r3, [r7, #18]
  75:../act_queue_utils.c **** 	resultMsg.data[5] = HIGHINT(param);
 246              		.loc 1 75 0
 247 0164 3B8D     		ldrh	r3, [r7, #40]
 248 0166 4FEA1323 		lsr	r3, r3, #8
 249 016a 9BB2     		uxth	r3, r3
 250 016c DBB2     		uxtb	r3, r3
 251 016e FB74     		strb	r3, [r7, #19]
  76:../act_queue_utils.c **** 	resultMsg.size = 6;
 252              		.loc 1 76 0
 253 0170 4FF00603 		mov	r3, #6
 254 0174 BB75     		strb	r3, [r7, #22]
  77:../act_queue_utils.c **** 
  78:../act_queue_utils.c **** 	CAN_send(&resultMsg);
 255              		.loc 1 78 0
 256 0176 07F10C03 		add	r3, r7, #12
 257 017a 1846     		mov	r0, r3
 258 017c FFF7FEFF 		bl	CAN_send
  79:../act_queue_utils.c **** 
  80:../act_queue_utils.c **** 	ACTQ_printResult(originalSid, originalCommand, result, errorCode, CAN_TPT_Normal, param, TRUE);
 259              		.loc 1 80 0
 260 0180 F888     		ldrh	r0, [r7, #6]
 261 0182 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 262 0184 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 263 0186 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 264 0188 4FF00204 		mov	r4, #2
 265 018c 0094     		str	r4, [sp, #0]
 266 018e 3C8D     		ldrh	r4, [r7, #40]
 267 0190 0194     		str	r4, [sp, #4]
 268 0192 4FF00104 		mov	r4, #1
 269 0196 0294     		str	r4, [sp, #8]
 270 0198 00F034FA 		bl	ACTQ_printResult
  81:../act_queue_utils.c **** }
 271              		.loc 1 81 0
 272 019c 07F11C07 		add	r7, r7, #28
 273 01a0 BD46     		mov	sp, r7
 274 01a2 90BD     		pop	{r4, r7, pc}
 275              		.cfi_endproc
 276              	.LFE113:
 278              		.align	2
 279              		.global	ACTQ_sendResultWitExplicitLine
 280              		.thumb
 281              		.thumb_func
 283              	ACTQ_sendResultWitExplicitLine:
 284              	.LFB114:
  82:../act_queue_utils.c **** 
  83:../act_queue_utils.c **** //Comme CAN_sendResultWithParam mais le paramètre est considéré comme étant un numéro de ligne.
  84:../act_queue_utils.c **** void ACTQ_sendResultWitExplicitLine(Uint11 originalSid, Uint8 originalCommand, Uint8 result, Uint8 
 285              		.loc 1 84 0
 286              		.cfi_startproc
 287              		@ args = 4, pretend = 0, frame = 24
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289 01a4 90B5     		push	{r4, r7, lr}
 290              	.LCFI9:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 01a6 8BB0     		sub	sp, sp, #44
 296              	.LCFI10:
 297              		.cfi_def_cfa_offset 56
 298 01a8 04AF     		add	r7, sp, #16
 299              	.LCFI11:
 300              		.cfi_def_cfa 7, 40
 301 01aa F880     		strh	r0, [r7, #6]	@ movhi
 302 01ac 7971     		strb	r1, [r7, #5]
 303 01ae 3A71     		strb	r2, [r7, #4]
 304 01b0 FB70     		strb	r3, [r7, #3]
  85:../act_queue_utils.c **** 	CAN_msg_t resultMsg;
  86:../act_queue_utils.c **** 
  87:../act_queue_utils.c **** 	resultMsg.sid = ACT_RESULT;
 305              		.loc 1 87 0
 306 01b2 4FF40C73 		mov	r3, #560
 307 01b6 BB81     		strh	r3, [r7, #12]	@ movhi
  88:../act_queue_utils.c **** 	resultMsg.data[0] = originalSid & 0xFF;
 308              		.loc 1 88 0
 309 01b8 FB88     		ldrh	r3, [r7, #6]	@ movhi
 310 01ba DBB2     		uxtb	r3, r3
 311 01bc BB73     		strb	r3, [r7, #14]
  89:../act_queue_utils.c **** 	resultMsg.data[1] = originalCommand;
 312              		.loc 1 89 0
 313 01be 7B79     		ldrb	r3, [r7, #5]
 314 01c0 FB73     		strb	r3, [r7, #15]
  90:../act_queue_utils.c **** 	resultMsg.data[2] = result;
 315              		.loc 1 90 0
 316 01c2 3B79     		ldrb	r3, [r7, #4]
 317 01c4 3B74     		strb	r3, [r7, #16]
  91:../act_queue_utils.c **** 	resultMsg.data[3] = errorCode;
 318              		.loc 1 91 0
 319 01c6 FB78     		ldrb	r3, [r7, #3]
 320 01c8 7B74     		strb	r3, [r7, #17]
  92:../act_queue_utils.c **** 	resultMsg.data[4] = LOWINT(line);
 321              		.loc 1 92 0
 322 01ca 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 323 01cc DBB2     		uxtb	r3, r3
 324 01ce BB74     		strb	r3, [r7, #18]
  93:../act_queue_utils.c **** 	resultMsg.data[5] = HIGHINT(line);
 325              		.loc 1 93 0
 326 01d0 3B8D     		ldrh	r3, [r7, #40]
 327 01d2 4FEA1323 		lsr	r3, r3, #8
 328 01d6 9BB2     		uxth	r3, r3
 329 01d8 DBB2     		uxtb	r3, r3
 330 01da FB74     		strb	r3, [r7, #19]
  94:../act_queue_utils.c **** 	resultMsg.size = 6;
 331              		.loc 1 94 0
 332 01dc 4FF00603 		mov	r3, #6
 333 01e0 BB75     		strb	r3, [r7, #22]
  95:../act_queue_utils.c **** 
  96:../act_queue_utils.c **** 	CAN_send(&resultMsg);
 334              		.loc 1 96 0
 335 01e2 07F10C03 		add	r3, r7, #12
 336 01e6 1846     		mov	r0, r3
 337 01e8 FFF7FEFF 		bl	CAN_send
  97:../act_queue_utils.c **** 
  98:../act_queue_utils.c **** 	ACTQ_printResult(originalSid, originalCommand, result, errorCode, CAN_TPT_Line, line, TRUE);
 338              		.loc 1 98 0
 339 01ec F888     		ldrh	r0, [r7, #6]
 340 01ee 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 341 01f0 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 342 01f2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 343 01f4 4FF00104 		mov	r4, #1
 344 01f8 0094     		str	r4, [sp, #0]
 345 01fa 3C8D     		ldrh	r4, [r7, #40]
 346 01fc 0194     		str	r4, [sp, #4]
 347 01fe 4FF00104 		mov	r4, #1
 348 0202 0294     		str	r4, [sp, #8]
 349 0204 00F0FEF9 		bl	ACTQ_printResult
  99:../act_queue_utils.c **** }
 350              		.loc 1 99 0
 351 0208 07F11C07 		add	r7, r7, #28
 352 020c BD46     		mov	sp, r7
 353 020e 90BD     		pop	{r4, r7, pc}
 354              		.cfi_endproc
 355              	.LFE114:
 357              		.section	.rodata
 358              		.align	2
 359              	.LC0:
 360 0000 41637455 		.ascii	"ActUtils: Error AX12 %d\012\000"
 360      74696C73 
 360      3A204572 
 360      726F7220 
 360      41583132 
 361              		.text
 362              		.align	2
 363              		.global	ACTQ_check_status_ax12
 364              		.thumb
 365              		.thumb_func
 367              	ACTQ_check_status_ax12:
 368              	.LFB115:
 100:../act_queue_utils.c **** 
 101:../act_queue_utils.c **** bool_e ACTQ_check_status_ax12(queue_id_t queueId, Uint8 ax12Id, Uint16 wantedPosition, Uint16 pos_e
 369              		.loc 1 101 0
 370              		.cfi_startproc
 371              		@ args = 20, pretend = 0, frame = 32
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0210 90B5     		push	{r4, r7, lr}
 374              	.LCFI12:
 375              		.cfi_def_cfa_offset 12
 376              		.cfi_offset 4, -12
 377              		.cfi_offset 7, -8
 378              		.cfi_offset 14, -4
 379 0212 89B0     		sub	sp, sp, #36
 380              	.LCFI13:
 381              		.cfi_def_cfa_offset 48
 382 0214 00AF     		add	r7, sp, #0
 383              	.LCFI14:
 384              		.cfi_def_cfa_register 7
 385 0216 F873     		strb	r0, [r7, #15]
 386 0218 B973     		strb	r1, [r7, #14]
 387 021a BA81     		strh	r2, [r7, #12]	@ movhi
 388 021c 7B81     		strh	r3, [r7, #10]	@ movhi
 102:../act_queue_utils.c **** 	AX12_reset_last_error(ax12Id);
 389              		.loc 1 102 0
 390 021e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 391 0220 1846     		mov	r0, r3
 392 0222 FFF7FEFF 		bl	AX12_reset_last_error
 103:../act_queue_utils.c **** 
 104:../act_queue_utils.c **** 	Uint16 current_pos = AX12_get_position(ax12Id);
 393              		.loc 1 104 0
 394 0226 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 395 0228 1846     		mov	r0, r3
 396 022a FFF7FEFF 		bl	AX12_get_position
 397 022e 0346     		mov	r3, r0
 398 0230 FB83     		strh	r3, [r7, #30]	@ movhi
 105:../act_queue_utils.c **** 	Uint8 error = AX12_get_last_error(ax12Id).error;
 399              		.loc 1 105 0
 400 0232 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 401 0234 1846     		mov	r0, r3
 402 0236 FFF7FEFF 		bl	AX12_get_last_error
 403 023a 3880     		strh	r0, [r7, #0]	@ movhi
 404 023c C0F30F43 		ubfx	r3, r0, #16, #16
 405 0240 7B80     		strh	r3, [r7, #2]	@ movhi
 406 0242 3B68     		ldr	r3, [r7, #0]
 407 0244 BB61     		str	r3, [r7, #24]
 408 0246 3B7E     		ldrb	r3, [r7, #24]
 409 0248 7B77     		strb	r3, [r7, #29]
 106:../act_queue_utils.c **** 	Uint16 dummy;
 107:../act_queue_utils.c **** 
 108:../act_queue_utils.c **** 	//Avec ça, on ne se soucie pas du contenu de result et error_code par la suite, on sait qu'ils ne 
 109:../act_queue_utils.c **** 	if(!result) result = (Uint8*)&dummy;
 410              		.loc 1 109 0
 411 024a BB6B     		ldr	r3, [r7, #56]
 412 024c 002B     		cmp	r3, #0
 413 024e 02D1     		bne	.L9
 414              		.loc 1 109 0 is_stmt 0 discriminator 1
 415 0250 07F11603 		add	r3, r7, #22
 416 0254 BB63     		str	r3, [r7, #56]
 417              	.L9:
 110:../act_queue_utils.c **** 	if(!error_code) error_code = (Uint8*)&dummy;
 418              		.loc 1 110 0 is_stmt 1
 419 0256 FB6B     		ldr	r3, [r7, #60]
 420 0258 002B     		cmp	r3, #0
 421 025a 02D1     		bne	.L10
 422              		.loc 1 110 0 is_stmt 0 discriminator 1
 423 025c 07F11603 		add	r3, r7, #22
 424 0260 FB63     		str	r3, [r7, #60]
 425              	.L10:
 111:../act_queue_utils.c **** 	if(!line) line = &dummy;
 426              		.loc 1 111 0 is_stmt 1
 427 0262 3B6C     		ldr	r3, [r7, #64]
 428 0264 002B     		cmp	r3, #0
 429 0266 02D1     		bne	.L11
 430              		.loc 1 111 0 is_stmt 0 discriminator 1
 431 0268 07F11603 		add	r3, r7, #22
 432 026c 3B64     		str	r3, [r7, #64]
 433              	.L11:
 112:../act_queue_utils.c **** 
 113:../act_queue_utils.c **** 	if(absolute((Sint16)current_pos - (Sint16)(wantedPosition)) <= pos_epsilon) {
 434              		.loc 1 113 0 is_stmt 1
 435 026e FB8B     		ldrh	r3, [r7, #30]
 436 0270 1AB2     		sxth	r2, r3
 437 0272 BB89     		ldrh	r3, [r7, #12]
 438 0274 1BB2     		sxth	r3, r3
 439 0276 D31A     		subs	r3, r2, r3
 440 0278 83EAE372 		eor	r2, r3, r3, asr #31
 441 027c A2EBE372 		sub	r2, r2, r3, asr #31
 442 0280 7B89     		ldrh	r3, [r7, #10]
 443 0282 9A42     		cmp	r2, r3
 444 0284 0CDC     		bgt	.L12
 114:../act_queue_utils.c **** 		*result = ACT_RESULT_DONE;
 445              		.loc 1 114 0
 446 0286 BB6B     		ldr	r3, [r7, #56]
 447 0288 4FF00002 		mov	r2, #0
 448 028c 1A70     		strb	r2, [r3, #0]
 115:../act_queue_utils.c **** 		*error_code = ACT_RESULT_ERROR_OK;
 449              		.loc 1 115 0
 450 028e FB6B     		ldr	r3, [r7, #60]
 451 0290 4FF00002 		mov	r2, #0
 452 0294 1A70     		strb	r2, [r3, #0]
 116:../act_queue_utils.c **** 		*line = 0x0100;
 453              		.loc 1 116 0
 454 0296 3B6C     		ldr	r3, [r7, #64]
 455 0298 4FF48072 		mov	r2, #256
 456 029c 1A80     		strh	r2, [r3, #0]	@ movhi
 457 029e 97E0     		b	.L13
 458              	.L12:
 117:../act_queue_utils.c **** 	} else if((error & AX12_ERROR_TIMEOUT) && (error & AX12_ERROR_RANGE)) {
 459              		.loc 1 117 0
 460 02a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 461 02a2 5BB2     		sxtb	r3, r3
 462 02a4 002B     		cmp	r3, #0
 463 02a6 17DA     		bge	.L14
 464              		.loc 1 117 0 is_stmt 0 discriminator 1
 465 02a8 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 466 02aa 03F00803 		and	r3, r3, #8
 467 02ae 002B     		cmp	r3, #0
 468 02b0 12D0     		beq	.L14
 118:../act_queue_utils.c **** 		//Si le driver a attendu trop longtemps, c'est a cause d'un deadlock plutot qu'un manque de resso
 119:../act_queue_utils.c **** 		AX12_set_torque_enabled(ax12Id, FALSE);
 469              		.loc 1 119 0 is_stmt 1
 470 02b2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 471 02b4 1846     		mov	r0, r3
 472 02b6 4FF00001 		mov	r1, #0
 473 02ba FFF7FEFF 		bl	AX12_set_torque_enabled
 120:../act_queue_utils.c **** 		*result = ACT_RESULT_NOT_HANDLED;
 474              		.loc 1 120 0
 475 02be BB6B     		ldr	r3, [r7, #56]
 476 02c0 4FF00202 		mov	r2, #2
 477 02c4 1A70     		strb	r2, [r3, #0]
 121:../act_queue_utils.c **** 		*error_code = ACT_RESULT_ERROR_LOGIC;
 478              		.loc 1 121 0
 479 02c6 FB6B     		ldr	r3, [r7, #60]
 480 02c8 4FF00402 		mov	r2, #4
 481 02cc 1A70     		strb	r2, [r3, #0]
 122:../act_queue_utils.c **** 		*line = 0x0200;
 482              		.loc 1 122 0
 483 02ce 3B6C     		ldr	r3, [r7, #64]
 484 02d0 4FF40072 		mov	r2, #512
 485 02d4 1A80     		strh	r2, [r3, #0]	@ movhi
 486 02d6 7BE0     		b	.L13
 487              	.L14:
 123:../act_queue_utils.c **** 	} else if(error & AX12_ERROR_TIMEOUT) {
 488              		.loc 1 123 0
 489 02d8 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 490 02da 5BB2     		sxtb	r3, r3
 491 02dc 002B     		cmp	r3, #0
 492 02de 12DA     		bge	.L15
 124:../act_queue_utils.c **** 		AX12_set_torque_enabled(ax12Id, FALSE);
 493              		.loc 1 124 0
 494 02e0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 495 02e2 1846     		mov	r0, r3
 496 02e4 4FF00001 		mov	r1, #0
 497 02e8 FFF7FEFF 		bl	AX12_set_torque_enabled
 125:../act_queue_utils.c **** 		*result = ACT_RESULT_FAILED;
 498              		.loc 1 125 0
 499 02ec BB6B     		ldr	r3, [r7, #56]
 500 02ee 4FF00102 		mov	r2, #1
 501 02f2 1A70     		strb	r2, [r3, #0]
 126:../act_queue_utils.c **** 		*error_code = ACT_RESULT_ERROR_NOT_HERE;
 502              		.loc 1 126 0
 503 02f4 FB6B     		ldr	r3, [r7, #60]
 504 02f6 4FF00302 		mov	r2, #3
 505 02fa 1A70     		strb	r2, [r3, #0]
 127:../act_queue_utils.c **** 		*line = 0x0300;
 506              		.loc 1 127 0
 507 02fc 3B6C     		ldr	r3, [r7, #64]
 508 02fe 4FF44072 		mov	r2, #768
 509 0302 1A80     		strh	r2, [r3, #0]	@ movhi
 510 0304 64E0     		b	.L13
 511              	.L15:
 128:../act_queue_utils.c **** 	} else if(CLOCK_get_time() >= QUEUE_get_initial_time(queueId) + timeout_ms_x100) {
 512              		.loc 1 128 0
 513 0306 FFF7FEFF 		bl	CLOCK_get_time
 514 030a 0346     		mov	r3, r0
 515 030c 1C46     		mov	r4, r3
 516 030e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 517 0310 1846     		mov	r0, r3
 518 0312 FFF7FEFF 		bl	QUEUE_get_initial_time
 519 0316 0346     		mov	r3, r0
 520 0318 1A46     		mov	r2, r3
 521 031a 3B8E     		ldrh	r3, [r7, #48]
 522 031c D318     		adds	r3, r2, r3
 523 031e 9C42     		cmp	r4, r3
 524 0320 2BDB     		blt	.L16
 129:../act_queue_utils.c **** 		//Timeout, l'ax12 n'a pas bouger à la bonne position a temps
 130:../act_queue_utils.c **** 		if(absolute((Sint16)current_pos - (Sint16)(wantedPosition)) <= large_epsilon) {
 525              		.loc 1 130 0
 526 0322 FB8B     		ldrh	r3, [r7, #30]
 527 0324 1AB2     		sxth	r2, r3
 528 0326 BB89     		ldrh	r3, [r7, #12]
 529 0328 1BB2     		sxth	r3, r3
 530 032a D31A     		subs	r3, r2, r3
 531 032c 83EAE372 		eor	r2, r3, r3, asr #31
 532 0330 A2EBE372 		sub	r2, r2, r3, asr #31
 533 0334 BB8E     		ldrh	r3, [r7, #52]
 534 0336 9A42     		cmp	r2, r3
 535 0338 0CDC     		bgt	.L17
 131:../act_queue_utils.c **** 			*result = ACT_RESULT_DONE;
 536              		.loc 1 131 0
 537 033a BB6B     		ldr	r3, [r7, #56]
 538 033c 4FF00002 		mov	r2, #0
 539 0340 1A70     		strb	r2, [r3, #0]
 132:../act_queue_utils.c **** 			*error_code = ACT_RESULT_ERROR_OK;
 540              		.loc 1 132 0
 541 0342 FB6B     		ldr	r3, [r7, #60]
 542 0344 4FF00002 		mov	r2, #0
 543 0348 1A70     		strb	r2, [r3, #0]
 133:../act_queue_utils.c **** 			*line = 0x0400;
 544              		.loc 1 133 0
 545 034a 3B6C     		ldr	r3, [r7, #64]
 546 034c 4FF48062 		mov	r2, #1024
 547 0350 1A80     		strh	r2, [r3, #0]	@ movhi
 548 0352 3DE0     		b	.L13
 549              	.L17:
 134:../act_queue_utils.c **** 		} else {
 135:../act_queue_utils.c **** 			AX12_set_torque_enabled(ax12Id, FALSE);
 550              		.loc 1 135 0
 551 0354 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 552 0356 1846     		mov	r0, r3
 553 0358 4FF00001 		mov	r1, #0
 554 035c FFF7FEFF 		bl	AX12_set_torque_enabled
 136:../act_queue_utils.c **** 			*result = ACT_RESULT_FAILED;
 555              		.loc 1 136 0
 556 0360 BB6B     		ldr	r3, [r7, #56]
 557 0362 4FF00102 		mov	r2, #1
 558 0366 1A70     		strb	r2, [r3, #0]
 137:../act_queue_utils.c **** 			*error_code = ACT_RESULT_ERROR_UNKNOWN;
 559              		.loc 1 137 0
 560 0368 FB6B     		ldr	r3, [r7, #60]
 561 036a 4FF0FF02 		mov	r2, #255
 562 036e 1A70     		strb	r2, [r3, #0]
 138:../act_queue_utils.c **** 			*line = 0x0500;
 563              		.loc 1 138 0
 564 0370 3B6C     		ldr	r3, [r7, #64]
 565 0372 4FF4A062 		mov	r2, #1280
 566 0376 1A80     		strh	r2, [r3, #0]	@ movhi
 567 0378 2AE0     		b	.L13
 568              	.L16:
 139:../act_queue_utils.c **** 		}
 140:../act_queue_utils.c **** 	} else if(error & AX12_ERROR_OVERHEATING) {
 569              		.loc 1 140 0
 570 037a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 571 037c 03F00403 		and	r3, r3, #4
 572 0380 002B     		cmp	r3, #0
 573 0382 12D0     		beq	.L18
 141:../act_queue_utils.c **** 		//autres erreurs fiable, les autres on les teste pas car si elle arrive, c'est plus probablement 
 142:../act_queue_utils.c **** 		AX12_set_torque_enabled(ax12Id, FALSE);
 574              		.loc 1 142 0
 575 0384 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 576 0386 1846     		mov	r0, r3
 577 0388 4FF00001 		mov	r1, #0
 578 038c FFF7FEFF 		bl	AX12_set_torque_enabled
 143:../act_queue_utils.c **** 		*result = ACT_RESULT_FAILED;
 579              		.loc 1 143 0
 580 0390 BB6B     		ldr	r3, [r7, #56]
 581 0392 4FF00102 		mov	r2, #1
 582 0396 1A70     		strb	r2, [r3, #0]
 144:../act_queue_utils.c **** 		*error_code = ACT_RESULT_ERROR_UNKNOWN;
 583              		.loc 1 144 0
 584 0398 FB6B     		ldr	r3, [r7, #60]
 585 039a 4FF0FF02 		mov	r2, #255
 586 039e 1A70     		strb	r2, [r3, #0]
 145:../act_queue_utils.c **** 		*line = error; //0x00xx avec xx = error
 587              		.loc 1 145 0
 588 03a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 589 03a2 9AB2     		uxth	r2, r3
 590 03a4 3B6C     		ldr	r3, [r7, #64]
 591 03a6 1A80     		strh	r2, [r3, #0]	@ movhi
 592 03a8 12E0     		b	.L13
 593              	.L18:
 146:../act_queue_utils.c **** 	} else if(error) {
 594              		.loc 1 146 0
 595 03aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 596 03ac 002B     		cmp	r3, #0
 597 03ae 0CD0     		beq	.L19
 147:../act_queue_utils.c **** 		component_printf(LOG_LEVEL_Error, "Error AX12 %d\n", error);
 598              		.loc 1 147 0
 599 03b0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 600 03b2 4FF00200 		mov	r0, #2
 601 03b6 40F20001 		movw	r1, #:lower16:.LC0
 602 03ba C0F20001 		movt	r1, #:upper16:.LC0
 603 03be 1A46     		mov	r2, r3
 604 03c0 FFF7FEFF 		bl	OUTPUTLOG_printf
 148:../act_queue_utils.c **** 		return FALSE;
 605              		.loc 1 148 0
 606 03c4 4FF00003 		mov	r3, #0
 607 03c8 04E0     		b	.L21
 608              	.L19:
 149:../act_queue_utils.c **** 	} else return FALSE;
 609              		.loc 1 149 0
 610 03ca 4FF00003 		mov	r3, #0
 611 03ce 01E0     		b	.L21
 612              	.L13:
 150:../act_queue_utils.c **** 
 151:../act_queue_utils.c **** 	return TRUE;
 613              		.loc 1 151 0
 614 03d0 4FF00103 		mov	r3, #1
 615              	.L21:
 152:../act_queue_utils.c **** }
 616              		.loc 1 152 0
 617 03d4 1846     		mov	r0, r3
 618 03d6 07F12407 		add	r7, r7, #36
 619 03da BD46     		mov	sp, r7
 620 03dc 90BD     		pop	{r4, r7, pc}
 621              		.cfi_endproc
 622              	.LFE115:
 624 03de 00BF     		.align	2
 625              		.global	ACTQ_check_status_dcmotor
 626              		.thumb
 627              		.thumb_func
 629              	ACTQ_check_status_dcmotor:
 630              	.LFB116:
 153:../act_queue_utils.c **** 
 154:../act_queue_utils.c **** bool_e ACTQ_check_status_dcmotor(Uint8 dcmotor_id, bool_e timeout_is_ok, Uint8* result, Uint8* erro
 631              		.loc 1 154 0
 632              		.cfi_startproc
 633              		@ args = 4, pretend = 0, frame = 24
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 03e0 80B5     		push	{r7, lr}
 636              	.LCFI15:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 03e2 86B0     		sub	sp, sp, #24
 641              	.LCFI16:
 642              		.cfi_def_cfa_offset 32
 643 03e4 00AF     		add	r7, sp, #0
 644              	.LCFI17:
 645              		.cfi_def_cfa_register 7
 646 03e6 BA60     		str	r2, [r7, #8]
 647 03e8 7B60     		str	r3, [r7, #4]
 648 03ea 0346     		mov	r3, r0
 649 03ec FB73     		strb	r3, [r7, #15]
 650 03ee 0B46     		mov	r3, r1
 651 03f0 BB73     		strb	r3, [r7, #14]
 155:../act_queue_utils.c **** 	DCM_working_state_e asserState = DCM_get_state(dcmotor_id);
 652              		.loc 1 155 0
 653 03f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 654 03f4 1846     		mov	r0, r3
 655 03f6 FFF7FEFF 		bl	DCM_get_state
 656 03fa 0346     		mov	r3, r0
 657 03fc FB75     		strb	r3, [r7, #23]
 156:../act_queue_utils.c **** 	Uint16 dummy;
 157:../act_queue_utils.c **** 
 158:../act_queue_utils.c **** 	if(!result) result = (Uint8*)&dummy;
 658              		.loc 1 158 0
 659 03fe BB68     		ldr	r3, [r7, #8]
 660 0400 002B     		cmp	r3, #0
 661 0402 02D1     		bne	.L23
 662              		.loc 1 158 0 is_stmt 0 discriminator 1
 663 0404 07F11403 		add	r3, r7, #20
 664 0408 BB60     		str	r3, [r7, #8]
 665              	.L23:
 159:../act_queue_utils.c **** 	if(!error_code) error_code = (Uint8*)&dummy;
 666              		.loc 1 159 0 is_stmt 1
 667 040a 7B68     		ldr	r3, [r7, #4]
 668 040c 002B     		cmp	r3, #0
 669 040e 02D1     		bne	.L24
 670              		.loc 1 159 0 is_stmt 0 discriminator 1
 671 0410 07F11403 		add	r3, r7, #20
 672 0414 7B60     		str	r3, [r7, #4]
 673              	.L24:
 160:../act_queue_utils.c **** 	if(!line) line = &dummy;
 674              		.loc 1 160 0 is_stmt 1
 675 0416 3B6A     		ldr	r3, [r7, #32]
 676 0418 002B     		cmp	r3, #0
 677 041a 02D1     		bne	.L25
 678              		.loc 1 160 0 is_stmt 0 discriminator 1
 679 041c 07F11403 		add	r3, r7, #20
 680 0420 3B62     		str	r3, [r7, #32]
 681              	.L25:
 161:../act_queue_utils.c **** 
 162:../act_queue_utils.c **** 	if(asserState == DCM_IDLE) {
 682              		.loc 1 162 0 is_stmt 1
 683 0422 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 684 0424 002B     		cmp	r3, #0
 685 0426 0CD1     		bne	.L26
 163:../act_queue_utils.c **** 		*result =    ACT_RESULT_DONE;
 686              		.loc 1 163 0
 687 0428 BB68     		ldr	r3, [r7, #8]
 688 042a 4FF00002 		mov	r2, #0
 689 042e 1A70     		strb	r2, [r3, #0]
 164:../act_queue_utils.c **** 		*error_code = ACT_RESULT_ERROR_OK;
 690              		.loc 1 164 0
 691 0430 7B68     		ldr	r3, [r7, #4]
 692 0432 4FF00002 		mov	r2, #0
 693 0436 1A70     		strb	r2, [r3, #0]
 165:../act_queue_utils.c **** 		*line = __LINE__;
 694              		.loc 1 165 0
 695 0438 3B6A     		ldr	r3, [r7, #32]
 696 043a 4FF0A502 		mov	r2, #165
 697 043e 1A80     		strh	r2, [r3, #0]	@ movhi
 698 0440 22E0     		b	.L27
 699              	.L26:
 166:../act_queue_utils.c **** 	} else if(asserState == DCM_TIMEOUT) {
 700              		.loc 1 166 0
 701 0442 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 702 0444 022B     		cmp	r3, #2
 703 0446 1CD1     		bne	.L28
 167:../act_queue_utils.c **** 		if(timeout_is_ok) {
 704              		.loc 1 167 0
 705 0448 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 706 044a 002B     		cmp	r3, #0
 707 044c 0CD0     		beq	.L29
 168:../act_queue_utils.c **** 			*result =    ACT_RESULT_DONE;
 708              		.loc 1 168 0
 709 044e BB68     		ldr	r3, [r7, #8]
 710 0450 4FF00002 		mov	r2, #0
 711 0454 1A70     		strb	r2, [r3, #0]
 169:../act_queue_utils.c **** 			*error_code = ACT_RESULT_ERROR_OK;
 712              		.loc 1 169 0
 713 0456 7B68     		ldr	r3, [r7, #4]
 714 0458 4FF00002 		mov	r2, #0
 715 045c 1A70     		strb	r2, [r3, #0]
 170:../act_queue_utils.c **** 			*line = __LINE__;
 716              		.loc 1 170 0
 717 045e 3B6A     		ldr	r3, [r7, #32]
 718 0460 4FF0AA02 		mov	r2, #170
 719 0464 1A80     		strh	r2, [r3, #0]	@ movhi
 720 0466 0FE0     		b	.L27
 721              	.L29:
 171:../act_queue_utils.c **** 		} else {
 172:../act_queue_utils.c **** 			*result =    ACT_RESULT_FAILED;
 722              		.loc 1 172 0
 723 0468 BB68     		ldr	r3, [r7, #8]
 724 046a 4FF00102 		mov	r2, #1
 725 046e 1A70     		strb	r2, [r3, #0]
 173:../act_queue_utils.c **** 			*error_code = ACT_RESULT_ERROR_TIMEOUT;
 726              		.loc 1 173 0
 727 0470 7B68     		ldr	r3, [r7, #4]
 728 0472 4FF00102 		mov	r2, #1
 729 0476 1A70     		strb	r2, [r3, #0]
 174:../act_queue_utils.c **** 			*line = __LINE__;
 730              		.loc 1 174 0
 731 0478 3B6A     		ldr	r3, [r7, #32]
 732 047a 4FF0AE02 		mov	r2, #174
 733 047e 1A80     		strh	r2, [r3, #0]	@ movhi
 734 0480 02E0     		b	.L27
 735              	.L28:
 175:../act_queue_utils.c **** 		}
 176:../act_queue_utils.c **** 	} else return FALSE;
 736              		.loc 1 176 0
 737 0482 4FF00003 		mov	r3, #0
 738 0486 01E0     		b	.L31
 739              	.L27:
 177:../act_queue_utils.c **** 
 178:../act_queue_utils.c **** 	return TRUE;
 740              		.loc 1 178 0
 741 0488 4FF00103 		mov	r3, #1
 742              	.L31:
 179:../act_queue_utils.c **** }
 743              		.loc 1 179 0
 744 048c 1846     		mov	r0, r3
 745 048e 07F11807 		add	r7, r7, #24
 746 0492 BD46     		mov	sp, r7
 747 0494 80BD     		pop	{r7, pc}
 748              		.cfi_endproc
 749              	.LFE116:
 751 0496 00BF     		.align	2
 752              		.global	ACTQ_finish_SendResult
 753              		.thumb
 754              		.thumb_func
 756              	ACTQ_finish_SendResult:
 757              	.LFB117:
 180:../act_queue_utils.c **** 
 181:../act_queue_utils.c **** //Renvoie un retour à la strat dans tous les cas
 182:../act_queue_utils.c **** bool_e ACTQ_finish_SendResult(queue_id_t queue_id, Uint11 act_sid, Uint8 result, Uint8 error_code, 
 758              		.loc 1 182 0
 759              		.cfi_startproc
 760              		@ args = 4, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0498 90B5     		push	{r4, r7, lr}
 763              	.LCFI18:
 764              		.cfi_def_cfa_offset 12
 765              		.cfi_offset 4, -12
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 049a 85B0     		sub	sp, sp, #20
 769              	.LCFI19:
 770              		.cfi_def_cfa_offset 32
 771 049c 02AF     		add	r7, sp, #8
 772              	.LCFI20:
 773              		.cfi_def_cfa 7, 24
 774 049e F871     		strb	r0, [r7, #7]
 775 04a0 B980     		strh	r1, [r7, #4]	@ movhi
 776 04a2 BA71     		strb	r2, [r7, #6]
 777 04a4 FB70     		strb	r3, [r7, #3]
 183:../act_queue_utils.c **** 	ACTQ_sendResultWithParam(act_sid, QUEUE_get_arg(queue_id)->canCommand, result, error_code, param);
 778              		.loc 1 183 0
 779 04a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 780 04a8 1846     		mov	r0, r3
 781 04aa FFF7FEFF 		bl	QUEUE_get_arg
 782 04ae 0346     		mov	r3, r0
 783 04b0 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 784 04b2 B888     		ldrh	r0, [r7, #4]
 785 04b4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 786 04b6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 787 04b8 3C8B     		ldrh	r4, [r7, #24]
 788 04ba 0094     		str	r4, [sp, #0]
 789 04bc FFF7FEFF 		bl	ACTQ_sendResultWithParam
 184:../act_queue_utils.c **** 
 185:../act_queue_utils.c **** 	if(result != ACT_RESULT_DONE)
 790              		.loc 1 185 0
 791 04c0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 792 04c2 002B     		cmp	r3, #0
 793 04c4 02D0     		beq	.L33
 186:../act_queue_utils.c **** 		return FALSE;
 794              		.loc 1 186 0
 795 04c6 4FF00003 		mov	r3, #0
 796 04ca 01E0     		b	.L34
 797              	.L33:
 187:../act_queue_utils.c **** 
 188:../act_queue_utils.c **** 	return TRUE;
 798              		.loc 1 188 0
 799 04cc 4FF00103 		mov	r3, #1
 800              	.L34:
 189:../act_queue_utils.c **** }
 801              		.loc 1 189 0
 802 04d0 1846     		mov	r0, r3
 803 04d2 07F10C07 		add	r7, r7, #12
 804 04d6 BD46     		mov	sp, r7
 805 04d8 90BD     		pop	{r4, r7, pc}
 806              		.cfi_endproc
 807              	.LFE117:
 809 04da 00BF     		.align	2
 810              		.global	ACTQ_finish_SendResultIfFail
 811              		.thumb
 812              		.thumb_func
 814              	ACTQ_finish_SendResultIfFail:
 815              	.LFB118:
 190:../act_queue_utils.c **** 
 191:../act_queue_utils.c **** //Retour à la strat seulement si l'opération à fail
 192:../act_queue_utils.c **** bool_e ACTQ_finish_SendResultIfFail(queue_id_t queue_id, Uint11 act_sid, Uint8 result, Uint8 error_
 816              		.loc 1 192 0
 817              		.cfi_startproc
 818              		@ args = 4, pretend = 0, frame = 8
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 04dc 90B5     		push	{r4, r7, lr}
 821              	.LCFI21:
 822              		.cfi_def_cfa_offset 12
 823              		.cfi_offset 4, -12
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 04de 87B0     		sub	sp, sp, #28
 827              	.LCFI22:
 828              		.cfi_def_cfa_offset 40
 829 04e0 04AF     		add	r7, sp, #16
 830              	.LCFI23:
 831              		.cfi_def_cfa 7, 24
 832 04e2 F871     		strb	r0, [r7, #7]
 833 04e4 B980     		strh	r1, [r7, #4]	@ movhi
 834 04e6 BA71     		strb	r2, [r7, #6]
 835 04e8 FB70     		strb	r3, [r7, #3]
 193:../act_queue_utils.c **** 	if(result != ACT_RESULT_DONE && error_code != ACT_RESULT_ERROR_OTHER) {
 836              		.loc 1 193 0
 837 04ea BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 838 04ec 002B     		cmp	r3, #0
 839 04ee 12D0     		beq	.L36
 840              		.loc 1 193 0 is_stmt 0 discriminator 1
 841 04f0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 842 04f2 022B     		cmp	r3, #2
 843 04f4 0FD0     		beq	.L36
 194:../act_queue_utils.c **** 		ACTQ_sendResultWithParam(act_sid, QUEUE_get_arg(queue_id)->canCommand, result, error_code, param)
 844              		.loc 1 194 0 is_stmt 1
 845 04f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 846 04f8 1846     		mov	r0, r3
 847 04fa FFF7FEFF 		bl	QUEUE_get_arg
 848 04fe 0346     		mov	r3, r0
 849 0500 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 850 0502 B888     		ldrh	r0, [r7, #4]
 851 0504 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 852 0506 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 853 0508 3C8B     		ldrh	r4, [r7, #24]
 854 050a 0094     		str	r4, [sp, #0]
 855 050c FFF7FEFF 		bl	ACTQ_sendResultWithParam
 195:../act_queue_utils.c **** 		return FALSE;
 856              		.loc 1 195 0
 857 0510 4FF00003 		mov	r3, #0
 858 0514 14E0     		b	.L37
 859              	.L36:
 196:../act_queue_utils.c **** 	} else ACTQ_printResult(act_sid, QUEUE_get_arg(queue_id)->canCommand, result, error_code, CAN_TPT_
 860              		.loc 1 196 0
 861 0516 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 862 0518 1846     		mov	r0, r3
 863 051a FFF7FEFF 		bl	QUEUE_get_arg
 864 051e 0346     		mov	r3, r0
 865 0520 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 866 0522 B888     		ldrh	r0, [r7, #4]
 867 0524 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 868 0526 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 869 0528 4FF00104 		mov	r4, #1
 870 052c 0094     		str	r4, [sp, #0]
 871 052e 3C8B     		ldrh	r4, [r7, #24]
 872 0530 0194     		str	r4, [sp, #4]
 873 0532 4FF00004 		mov	r4, #0
 874 0536 0294     		str	r4, [sp, #8]
 875 0538 00F064F8 		bl	ACTQ_printResult
 197:../act_queue_utils.c **** 
 198:../act_queue_utils.c **** 	return TRUE;
 876              		.loc 1 198 0
 877 053c 4FF00103 		mov	r3, #1
 878              	.L37:
 199:../act_queue_utils.c **** }
 879              		.loc 1 199 0
 880 0540 1846     		mov	r0, r3
 881 0542 07F10C07 		add	r7, r7, #12
 882 0546 BD46     		mov	sp, r7
 883 0548 90BD     		pop	{r4, r7, pc}
 884              		.cfi_endproc
 885              	.LFE118:
 887 054a 00BF     		.align	2
 888              		.global	ACTQ_finish_SendResultIfSuccess
 889              		.thumb
 890              		.thumb_func
 892              	ACTQ_finish_SendResultIfSuccess:
 893              	.LFB119:
 200:../act_queue_utils.c **** 
 201:../act_queue_utils.c **** //Retour à la strat seulement si l'opération à reussi
 202:../act_queue_utils.c **** bool_e ACTQ_finish_SendResultIfSuccess(queue_id_t queue_id, Uint11 act_sid, Uint8 result, Uint8 err
 894              		.loc 1 202 0
 895              		.cfi_startproc
 896              		@ args = 4, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 054c 90B5     		push	{r4, r7, lr}
 899              	.LCFI24:
 900              		.cfi_def_cfa_offset 12
 901              		.cfi_offset 4, -12
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 054e 87B0     		sub	sp, sp, #28
 905              	.LCFI25:
 906              		.cfi_def_cfa_offset 40
 907 0550 04AF     		add	r7, sp, #16
 908              	.LCFI26:
 909              		.cfi_def_cfa 7, 24
 910 0552 F871     		strb	r0, [r7, #7]
 911 0554 B980     		strh	r1, [r7, #4]	@ movhi
 912 0556 BA71     		strb	r2, [r7, #6]
 913 0558 FB70     		strb	r3, [r7, #3]
 203:../act_queue_utils.c **** 	if(result == ACT_RESULT_DONE) {
 914              		.loc 1 203 0
 915 055a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 916 055c 002B     		cmp	r3, #0
 917 055e 0FD1     		bne	.L39
 204:../act_queue_utils.c **** 		ACTQ_sendResultWithParam(act_sid, QUEUE_get_arg(queue_id)->canCommand, result, error_code, param)
 918              		.loc 1 204 0
 919 0560 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 920 0562 1846     		mov	r0, r3
 921 0564 FFF7FEFF 		bl	QUEUE_get_arg
 922 0568 0346     		mov	r3, r0
 923 056a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 924 056c B888     		ldrh	r0, [r7, #4]
 925 056e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 926 0570 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 927 0572 3C8B     		ldrh	r4, [r7, #24]
 928 0574 0094     		str	r4, [sp, #0]
 929 0576 FFF7FEFF 		bl	ACTQ_sendResultWithParam
 205:../act_queue_utils.c **** 		return TRUE;
 930              		.loc 1 205 0
 931 057a 4FF00103 		mov	r3, #1
 932 057e 14E0     		b	.L40
 933              	.L39:
 206:../act_queue_utils.c **** 	} else ACTQ_printResult(act_sid, QUEUE_get_arg(queue_id)->canCommand, result, error_code, CAN_TPT_
 934              		.loc 1 206 0
 935 0580 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 936 0582 1846     		mov	r0, r3
 937 0584 FFF7FEFF 		bl	QUEUE_get_arg
 938 0588 0346     		mov	r3, r0
 939 058a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 940 058c B888     		ldrh	r0, [r7, #4]
 941 058e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 942 0590 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 943 0592 4FF00104 		mov	r4, #1
 944 0596 0094     		str	r4, [sp, #0]
 945 0598 3C8B     		ldrh	r4, [r7, #24]
 946 059a 0194     		str	r4, [sp, #4]
 947 059c 4FF00004 		mov	r4, #0
 948 05a0 0294     		str	r4, [sp, #8]
 949 05a2 00F02FF8 		bl	ACTQ_printResult
 207:../act_queue_utils.c **** 
 208:../act_queue_utils.c **** 	return FALSE;
 950              		.loc 1 208 0
 951 05a6 4FF00003 		mov	r3, #0
 952              	.L40:
 209:../act_queue_utils.c **** }
 953              		.loc 1 209 0
 954 05aa 1846     		mov	r0, r3
 955 05ac 07F10C07 		add	r7, r7, #12
 956 05b0 BD46     		mov	sp, r7
 957 05b2 90BD     		pop	{r4, r7, pc}
 958              		.cfi_endproc
 959              	.LFE119:
 961              		.align	2
 962              		.global	ACTQ_finish_SendNothing
 963              		.thumb
 964              		.thumb_func
 966              	ACTQ_finish_SendNothing:
 967              	.LFB120:
 210:../act_queue_utils.c **** 
 211:../act_queue_utils.c **** //Ne fait aucun retour
 212:../act_queue_utils.c **** bool_e ACTQ_finish_SendNothing(queue_id_t queue_id, Uint11 act_sid, Uint8 result, Uint8 error_code,
 968              		.loc 1 212 0
 969              		.cfi_startproc
 970              		@ args = 4, pretend = 0, frame = 8
 971              		@ frame_needed = 1, uses_anonymous_args = 0
 972 05b4 90B5     		push	{r4, r7, lr}
 973              	.LCFI27:
 974              		.cfi_def_cfa_offset 12
 975              		.cfi_offset 4, -12
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 05b6 87B0     		sub	sp, sp, #28
 979              	.LCFI28:
 980              		.cfi_def_cfa_offset 40
 981 05b8 04AF     		add	r7, sp, #16
 982              	.LCFI29:
 983              		.cfi_def_cfa 7, 24
 984 05ba F871     		strb	r0, [r7, #7]
 985 05bc B980     		strh	r1, [r7, #4]	@ movhi
 986 05be BA71     		strb	r2, [r7, #6]
 987 05c0 FB70     		strb	r3, [r7, #3]
 213:../act_queue_utils.c **** 	ACTQ_printResult(act_sid, QUEUE_get_arg(queue_id)->canCommand, result, error_code, CAN_TPT_Line, p
 988              		.loc 1 213 0
 989 05c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 990 05c4 1846     		mov	r0, r3
 991 05c6 FFF7FEFF 		bl	QUEUE_get_arg
 992 05ca 0346     		mov	r3, r0
 993 05cc 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 994 05ce B888     		ldrh	r0, [r7, #4]
 995 05d0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 996 05d2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 997 05d4 4FF00104 		mov	r4, #1
 998 05d8 0094     		str	r4, [sp, #0]
 999 05da 3C8B     		ldrh	r4, [r7, #24]
 1000 05dc 0194     		str	r4, [sp, #4]
 1001 05de 4FF00004 		mov	r4, #0
 1002 05e2 0294     		str	r4, [sp, #8]
 1003 05e4 00F00EF8 		bl	ACTQ_printResult
 214:../act_queue_utils.c **** 	if(result == ACT_RESULT_DONE)
 1004              		.loc 1 214 0
 1005 05e8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1006 05ea 002B     		cmp	r3, #0
 1007 05ec 02D1     		bne	.L42
 215:../act_queue_utils.c **** 		return TRUE;
 1008              		.loc 1 215 0
 1009 05ee 4FF00103 		mov	r3, #1
 1010 05f2 01E0     		b	.L43
 1011              	.L42:
 216:../act_queue_utils.c **** 
 217:../act_queue_utils.c **** 	return FALSE;
 1012              		.loc 1 217 0
 1013 05f4 4FF00003 		mov	r3, #0
 1014              	.L43:
 218:../act_queue_utils.c **** }
 1015              		.loc 1 218 0
 1016 05f8 1846     		mov	r0, r3
 1017 05fa 07F10C07 		add	r7, r7, #12
 1018 05fe BD46     		mov	sp, r7
 1019 0600 90BD     		pop	{r4, r7, pc}
 1020              		.cfi_endproc
 1021              	.LFE120:
 1023              		.section	.rodata
 1024 0019 000000   		.align	2
 1025              	.LC1:
 1026 001c 556E6B6E 		.ascii	"Unknown\000"
 1026      6F776E00 
 1027              		.align	2
 1028              	.LC2:
 1029 0024 556E6B6E 		.ascii	"Unknown error\000"
 1029      6F776E20 
 1029      6572726F 
 1029      7200
 1030 0032 0000     		.align	2
 1031              	.LC3:
 1032 0034 73656E74 		.ascii	"sent\000"
 1032      00
 1033 0039 000000   		.align	2
 1034              	.LC4:
 1035 003c 6E6F7420 		.ascii	"not sent\000"
 1035      73656E74 
 1035      00
 1036 0045 000000   		.align	2
 1037              	.LC5:
 1038 0048 42616C6C 		.ascii	"BallInflater\000"
 1038      496E666C 
 1038      61746572 
 1038      00
 1039 0055 000000   		.align	2
 1040              	.LC6:
 1041 0058 42616C6C 		.ascii	"BallLauncher\000"
 1041      4C61756E 
 1041      63686572 
 1041      00
 1042 0065 000000   		.align	2
 1043              	.LC7:
 1044 0068 42616C6C 		.ascii	"BallSorter\000"
 1044      536F7274 
 1044      657200
 1045 0073 00       		.align	2
 1046              	.LC8:
 1047 0074 43616E64 		.ascii	"CandleColor\000"
 1047      6C65436F 
 1047      6C6F7200 
 1048              		.align	2
 1049              	.LC9:
 1050 0080 48616D6D 		.ascii	"Hammer\000"
 1050      657200
 1051 0087 00       		.align	2
 1052              	.LC10:
 1053 0088 4C696674 		.ascii	"LiftLeft\000"
 1053      4C656674 
 1053      00
 1054 0091 000000   		.align	2
 1055              	.LC11:
 1056 0094 4C696674 		.ascii	"LiftRight\000"
 1056      52696768 
 1056      7400
 1057 009e 0000     		.align	2
 1058              	.LC12:
 1059 00a0 506C6174 		.ascii	"Plate\000"
 1059      6500
 1060 00a6 0000     		.align	2
 1061              	.LC13:
 1062 00a8 446F6E65 		.ascii	"Done\000"
 1062      00
 1063 00ad 000000   		.align	2
 1064              	.LC14:
 1065 00b0 4661696C 		.ascii	"Failed\000"
 1065      656400
 1066 00b7 00       		.align	2
 1067              	.LC15:
 1068 00b8 4E6F7448 		.ascii	"NotHandled\000"
 1068      616E646C 
 1068      656400
 1069 00c3 00       		.align	2
 1070              	.LC16:
 1071 00c4 4C6F6769 		.ascii	"Logic\000"
 1071      6300
 1072 00ca 0000     		.align	2
 1073              	.LC17:
 1074 00cc 4E6F7448 		.ascii	"NotHere\000"
 1074      65726500 
 1075              		.align	2
 1076              	.LC18:
 1077 00d4 4E6F5265 		.ascii	"NoResources\000"
 1077      736F7572 
 1077      63657300 
 1078              		.align	2
 1079              	.LC19:
 1080 00e0 4F6B00   		.ascii	"Ok\000"
 1081 00e3 00       		.align	2
 1082              	.LC20:
 1083 00e4 4F746865 		.ascii	"Other\000"
 1083      7200
 1084 00ea 0000     		.align	2
 1085              	.LC21:
 1086 00ec 54696D65 		.ascii	"Timeout\000"
 1086      6F757400 
 1087              		.align	2
 1088              	.LC22:
 1089 00f4 41637455 		.ascii	"ActUtils: Result msg: Act: %s(0x%x), cmd: 0x%x(%u),"
 1089      74696C73 
 1089      3A205265 
 1089      73756C74 
 1089      206D7367 
 1090 0127 20726573 		.ascii	" result: %s(%u), error: %s(%u), param: 0x%x(%u) (%s"
 1090      756C743A 
 1090      20257328 
 1090      2575292C 
 1090      20657272 
 1091 015a 290A00   		.ascii	")\012\000"
 1092 015d 000000   		.align	2
 1093              	.LC23:
 1094 0160 41637455 		.ascii	"ActUtils: Result msg: Act: %s(0x%x), cmd: 0x%x(%u),"
 1094      74696C73 
 1094      3A205265 
 1094      73756C74 
 1094      206D7367 
 1095 0193 20726573 		.ascii	" result: %s(%u), error: %s(%u), line: %u (%s)\012\000"
 1095      756C743A 
 1095      20257328 
 1095      2575292C 
 1095      20657272 
 1096 01c2 0000     		.align	2
 1097              	.LC24:
 1098 01c4 41637455 		.ascii	"ActUtils: Result msg: Act: %s(0x%x), cmd: 0x%x(%u),"
 1098      74696C73 
 1098      3A205265 
 1098      73756C74 
 1098      206D7367 
 1099 01f7 20726573 		.ascii	" result: %s(%u), error: %s(%u) (%s)\012\000"
 1099      756C743A 
 1099      20257328 
 1099      2575292C 
 1099      20657272 
 1100              		.text
 1101 0602 00BF     		.align	2
 1102              		.thumb
 1103              		.thumb_func
 1105              	ACTQ_printResult:
 1106              	.LFB121:
 219:../act_queue_utils.c **** 
 220:../act_queue_utils.c **** static void ACTQ_printResult(Uint11 originalSid, Uint8 originalCommand, Uint8 result, Uint8 errorCo
 1107              		.loc 1 220 0
 1108              		.cfi_startproc
 1109              		@ args = 12, pretend = 0, frame = 32
 1110              		@ frame_needed = 1, uses_anonymous_args = 0
 1111 0604 F0B5     		push	{r4, r5, r6, r7, lr}
 1112              	.LCFI30:
 1113              		.cfi_def_cfa_offset 20
 1114              		.cfi_offset 4, -20
 1115              		.cfi_offset 5, -16
 1116              		.cfi_offset 6, -12
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119 0606 93B0     		sub	sp, sp, #76
 1120              	.LCFI31:
 1121              		.cfi_def_cfa_offset 96
 1122 0608 0AAF     		add	r7, sp, #40
 1123              	.LCFI32:
 1124              		.cfi_def_cfa 7, 56
 1125 060a F880     		strh	r0, [r7, #6]	@ movhi
 1126 060c 7971     		strb	r1, [r7, #5]
 1127 060e 3A71     		strb	r2, [r7, #4]
 1128 0610 FB70     		strb	r3, [r7, #3]
 221:../act_queue_utils.c **** #ifdef VERBOSE_MODE
 222:../act_queue_utils.c **** 	const char* originalSidStr = "Unknown";
 1129              		.loc 1 222 0
 1130 0612 40F20003 		movw	r3, #:lower16:.LC1
 1131 0616 C0F20003 		movt	r3, #:upper16:.LC1
 1132 061a FB61     		str	r3, [r7, #28]
 223:../act_queue_utils.c **** 	const char* resultStr = "Unknown";
 1133              		.loc 1 223 0
 1134 061c 40F20003 		movw	r3, #:lower16:.LC1
 1135 0620 C0F20003 		movt	r3, #:upper16:.LC1
 1136 0624 BB61     		str	r3, [r7, #24]
 224:../act_queue_utils.c **** 	const char* errorCodeStr = "Unknown error";
 1137              		.loc 1 224 0
 1138 0626 40F20003 		movw	r3, #:lower16:.LC2
 1139 062a C0F20003 		movt	r3, #:upper16:.LC2
 1140 062e 7B61     		str	r3, [r7, #20]
 225:../act_queue_utils.c **** 	const char* sendedStr = (sended_can_result == TRUE)? "sent" : "not sent";
 1141              		.loc 1 225 0
 1142 0630 97F84030 		ldrb	r3, [r7, #64]	@ zero_extendqisi2
 1143 0634 012B     		cmp	r3, #1
 1144 0636 04D1     		bne	.L45
 1145              		.loc 1 225 0 is_stmt 0 discriminator 1
 1146 0638 40F20003 		movw	r3, #:lower16:.LC3
 1147 063c C0F20003 		movt	r3, #:upper16:.LC3
 1148 0640 03E0     		b	.L46
 1149              	.L45:
 1150              		.loc 1 225 0 discriminator 2
 1151 0642 40F20003 		movw	r3, #:lower16:.LC4
 1152 0646 C0F20003 		movt	r3, #:upper16:.LC4
 1153              	.L46:
 1154              		.loc 1 225 0 discriminator 3
 1155 064a FB60     		str	r3, [r7, #12]
 226:../act_queue_utils.c **** 
 227:../act_queue_utils.c **** 	originalSid = originalSid & 0xFF;
 1156              		.loc 1 227 0 is_stmt 1 discriminator 3
 1157 064c FB88     		ldrh	r3, [r7, #6]	@ movhi
 1158 064e DBB2     		uxtb	r3, r3
 1159 0650 FB80     		strh	r3, [r7, #6]	@ movhi
 228:../act_queue_utils.c **** 	switch(originalSid) {
 1160              		.loc 1 228 0 discriminator 3
 1161 0652 FB88     		ldrh	r3, [r7, #6]
 1162 0654 03F1FF33 		add	r3, r3, #-1
 1163 0658 142B     		cmp	r3, #20
 1164 065a 5DD8     		bhi	.L47
 1165 065c 01A2     		adr	r2, .L56
 1166 065e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1167 0662 00BF     		.align	2
 1168              	.L56:
 1169 0664 E9060000 		.word	.L48+1
 1170 0668 19070000 		.word	.L47+1
 1171 066c B9060000 		.word	.L49+1
 1172 0670 DD060000 		.word	.L50+1
 1173 0674 19070000 		.word	.L47+1
 1174 0678 19070000 		.word	.L47+1
 1175 067c 19070000 		.word	.L47+1
 1176 0680 19070000 		.word	.L47+1
 1177 0684 19070000 		.word	.L47+1
 1178 0688 19070000 		.word	.L47+1
 1179 068c 19070000 		.word	.L47+1
 1180 0690 19070000 		.word	.L47+1
 1181 0694 19070000 		.word	.L47+1
 1182 0698 19070000 		.word	.L47+1
 1183 069c 19070000 		.word	.L47+1
 1184 06a0 19070000 		.word	.L47+1
 1185 06a4 C5060000 		.word	.L51+1
 1186 06a8 0D070000 		.word	.L52+1
 1187 06ac D1060000 		.word	.L53+1
 1188 06b0 01070000 		.word	.L54+1
 1189 06b4 F5060000 		.word	.L55+1
 1190              	.L49:
 229:../act_queue_utils.c **** 		case ACT_BALLINFLATER & 0xFF:       originalSidStr = "BallInflater"; break;
 1191              		.loc 1 229 0
 1192 06b8 40F20003 		movw	r3, #:lower16:.LC5
 1193 06bc C0F20003 		movt	r3, #:upper16:.LC5
 1194 06c0 FB61     		str	r3, [r7, #28]
 1195 06c2 2FE0     		b	.L57
 1196              	.L51:
 230:../act_queue_utils.c **** 		case ACT_BALLLAUNCHER & 0xFF:       originalSidStr = "BallLauncher"; break;
 1197              		.loc 1 230 0
 1198 06c4 40F20003 		movw	r3, #:lower16:.LC6
 1199 06c8 C0F20003 		movt	r3, #:upper16:.LC6
 1200 06cc FB61     		str	r3, [r7, #28]
 1201 06ce 29E0     		b	.L57
 1202              	.L53:
 231:../act_queue_utils.c **** 		case ACT_BALLSORTER & 0xFF:         originalSidStr = "BallSorter";   break;
 1203              		.loc 1 231 0
 1204 06d0 40F20003 		movw	r3, #:lower16:.LC7
 1205 06d4 C0F20003 		movt	r3, #:upper16:.LC7
 1206 06d8 FB61     		str	r3, [r7, #28]
 1207 06da 23E0     		b	.L57
 1208              	.L50:
 232:../act_queue_utils.c **** 		case ACT_CANDLECOLOR & 0xFF:        originalSidStr = "CandleColor";  break;
 1209              		.loc 1 232 0
 1210 06dc 40F20003 		movw	r3, #:lower16:.LC8
 1211 06e0 C0F20003 		movt	r3, #:upper16:.LC8
 1212 06e4 FB61     		str	r3, [r7, #28]
 1213 06e6 1DE0     		b	.L57
 1214              	.L48:
 233:../act_queue_utils.c **** 		case ACT_HAMMER & 0xFF:             originalSidStr = "Hammer";       break;
 1215              		.loc 1 233 0
 1216 06e8 40F20003 		movw	r3, #:lower16:.LC9
 1217 06ec C0F20003 		movt	r3, #:upper16:.LC9
 1218 06f0 FB61     		str	r3, [r7, #28]
 1219 06f2 17E0     		b	.L57
 1220              	.L55:
 234:../act_queue_utils.c **** 		case ACT_LIFT_LEFT & 0xFF:          originalSidStr = "LiftLeft";     break;
 1221              		.loc 1 234 0
 1222 06f4 40F20003 		movw	r3, #:lower16:.LC10
 1223 06f8 C0F20003 		movt	r3, #:upper16:.LC10
 1224 06fc FB61     		str	r3, [r7, #28]
 1225 06fe 11E0     		b	.L57
 1226              	.L54:
 235:../act_queue_utils.c **** 		case ACT_LIFT_RIGHT & 0xFF:         originalSidStr = "LiftRight";    break;
 1227              		.loc 1 235 0
 1228 0700 40F20003 		movw	r3, #:lower16:.LC11
 1229 0704 C0F20003 		movt	r3, #:upper16:.LC11
 1230 0708 FB61     		str	r3, [r7, #28]
 1231 070a 0BE0     		b	.L57
 1232              	.L52:
 236:../act_queue_utils.c **** 		case ACT_PLATE & 0xFF:              originalSidStr = "Plate";        break;
 1233              		.loc 1 236 0
 1234 070c 40F20003 		movw	r3, #:lower16:.LC12
 1235 0710 C0F20003 		movt	r3, #:upper16:.LC12
 1236 0714 FB61     		str	r3, [r7, #28]
 1237 0716 05E0     		b	.L57
 1238              	.L47:
 237:../act_queue_utils.c **** 		default:                     originalSidStr = "Unknown";      break;
 1239              		.loc 1 237 0
 1240 0718 40F20003 		movw	r3, #:lower16:.LC1
 1241 071c C0F20003 		movt	r3, #:upper16:.LC1
 1242 0720 FB61     		str	r3, [r7, #28]
 1243 0722 00BF     		nop
 1244              	.L57:
 238:../act_queue_utils.c **** 	}
 239:../act_queue_utils.c **** 	switch(result) {
 1245              		.loc 1 239 0
 1246 0724 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1247 0726 012B     		cmp	r3, #1
 1248 0728 09D0     		beq	.L60
 1249 072a 022B     		cmp	r3, #2
 1250 072c 0DD0     		beq	.L61
 1251 072e 002B     		cmp	r3, #0
 1252 0730 11D1     		bne	.L77
 1253              	.L59:
 240:../act_queue_utils.c **** 		case ACT_RESULT_DONE:        resultStr = "Done";       break;
 1254              		.loc 1 240 0
 1255 0732 40F20003 		movw	r3, #:lower16:.LC13
 1256 0736 C0F20003 		movt	r3, #:upper16:.LC13
 1257 073a BB61     		str	r3, [r7, #24]
 1258 073c 11E0     		b	.L62
 1259              	.L60:
 241:../act_queue_utils.c **** 		case ACT_RESULT_FAILED:      resultStr = "Failed";     break;
 1260              		.loc 1 241 0
 1261 073e 40F20003 		movw	r3, #:lower16:.LC14
 1262 0742 C0F20003 		movt	r3, #:upper16:.LC14
 1263 0746 BB61     		str	r3, [r7, #24]
 1264 0748 0BE0     		b	.L62
 1265              	.L61:
 242:../act_queue_utils.c **** 		case ACT_RESULT_NOT_HANDLED: resultStr = "NotHandled"; break;
 1266              		.loc 1 242 0
 1267 074a 40F20003 		movw	r3, #:lower16:.LC15
 1268 074e C0F20003 		movt	r3, #:upper16:.LC15
 1269 0752 BB61     		str	r3, [r7, #24]
 1270 0754 05E0     		b	.L62
 1271              	.L77:
 243:../act_queue_utils.c **** 		default:                     resultStr = "Unknown";    break;
 1272              		.loc 1 243 0
 1273 0756 40F20003 		movw	r3, #:lower16:.LC1
 1274 075a C0F20003 		movt	r3, #:upper16:.LC1
 1275 075e BB61     		str	r3, [r7, #24]
 1276 0760 00BF     		nop
 1277              	.L62:
 244:../act_queue_utils.c **** 	}
 245:../act_queue_utils.c **** 	switch(errorCode) {
 1278              		.loc 1 245 0
 1279 0762 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1280 0764 032B     		cmp	r3, #3
 1281 0766 15D0     		beq	.L67
 1282 0768 032B     		cmp	r3, #3
 1283 076a 06DC     		bgt	.L71
 1284 076c 012B     		cmp	r3, #1
 1285 076e 29D0     		beq	.L65
 1286 0770 012B     		cmp	r3, #1
 1287 0772 21DC     		bgt	.L66
 1288 0774 002B     		cmp	r3, #0
 1289 0776 19D0     		beq	.L64
 1290 0778 30E0     		b	.L63
 1291              	.L71:
 1292 077a 052B     		cmp	r3, #5
 1293 077c 10D0     		beq	.L69
 1294 077e 052B     		cmp	r3, #5
 1295 0780 02DB     		blt	.L68
 1296 0782 FF2B     		cmp	r3, #255
 1297 0784 24D0     		beq	.L70
 1298 0786 29E0     		b	.L63
 1299              	.L68:
 246:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_LOGIC:        errorCodeStr = "Logic";         break;
 1300              		.loc 1 246 0
 1301 0788 40F20003 		movw	r3, #:lower16:.LC16
 1302 078c C0F20003 		movt	r3, #:upper16:.LC16
 1303 0790 7B61     		str	r3, [r7, #20]
 1304 0792 29E0     		b	.L72
 1305              	.L67:
 247:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_NOT_HERE:     errorCodeStr = "NotHere";       break;
 1306              		.loc 1 247 0
 1307 0794 40F20003 		movw	r3, #:lower16:.LC17
 1308 0798 C0F20003 		movt	r3, #:upper16:.LC17
 1309 079c 7B61     		str	r3, [r7, #20]
 1310 079e 23E0     		b	.L72
 1311              	.L69:
 248:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_NO_RESOURCES: errorCodeStr = "NoResources";   break;
 1312              		.loc 1 248 0
 1313 07a0 40F20003 		movw	r3, #:lower16:.LC18
 1314 07a4 C0F20003 		movt	r3, #:upper16:.LC18
 1315 07a8 7B61     		str	r3, [r7, #20]
 1316 07aa 1DE0     		b	.L72
 1317              	.L64:
 249:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_OK:           errorCodeStr = "Ok";            break;
 1318              		.loc 1 249 0
 1319 07ac 40F20003 		movw	r3, #:lower16:.LC19
 1320 07b0 C0F20003 		movt	r3, #:upper16:.LC19
 1321 07b4 7B61     		str	r3, [r7, #20]
 1322 07b6 17E0     		b	.L72
 1323              	.L66:
 250:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_OTHER:        errorCodeStr = "Other";         break;
 1324              		.loc 1 250 0
 1325 07b8 40F20003 		movw	r3, #:lower16:.LC20
 1326 07bc C0F20003 		movt	r3, #:upper16:.LC20
 1327 07c0 7B61     		str	r3, [r7, #20]
 1328 07c2 11E0     		b	.L72
 1329              	.L65:
 251:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_TIMEOUT:      errorCodeStr = "Timeout";       break;
 1330              		.loc 1 251 0
 1331 07c4 40F20003 		movw	r3, #:lower16:.LC21
 1332 07c8 C0F20003 		movt	r3, #:upper16:.LC21
 1333 07cc 7B61     		str	r3, [r7, #20]
 1334 07ce 0BE0     		b	.L72
 1335              	.L70:
 252:../act_queue_utils.c **** 		case ACT_RESULT_ERROR_UNKNOWN:      errorCodeStr = "Unknown";       break;
 1336              		.loc 1 252 0
 1337 07d0 40F20003 		movw	r3, #:lower16:.LC1
 1338 07d4 C0F20003 		movt	r3, #:upper16:.LC1
 1339 07d8 7B61     		str	r3, [r7, #20]
 1340 07da 05E0     		b	.L72
 1341              	.L63:
 253:../act_queue_utils.c **** 		default:                            errorCodeStr = "Unknown error"; break;
 1342              		.loc 1 253 0
 1343 07dc 40F20003 		movw	r3, #:lower16:.LC2
 1344 07e0 C0F20003 		movt	r3, #:upper16:.LC2
 1345 07e4 7B61     		str	r3, [r7, #20]
 1346 07e6 00BF     		nop
 1347              	.L72:
 254:../act_queue_utils.c **** 	}
 255:../act_queue_utils.c **** 	log_level_e level = LOG_LEVEL_Debug;
 1348              		.loc 1 255 0
 1349 07e8 4FF00503 		mov	r3, #5
 1350 07ec FB74     		strb	r3, [r7, #19]
 256:../act_queue_utils.c **** 	if(result != ACT_RESULT_DONE)
 1351              		.loc 1 256 0
 1352 07ee 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1353 07f0 002B     		cmp	r3, #0
 1354 07f2 02D0     		beq	.L73
 257:../act_queue_utils.c **** 		level = LOG_LEVEL_Error;
 1355              		.loc 1 257 0
 1356 07f4 4FF00203 		mov	r3, #2
 1357 07f8 FB74     		strb	r3, [r7, #19]
 1358              	.L73:
 258:../act_queue_utils.c **** 	if(paramType == CAN_TPT_Normal) {
 1359              		.loc 1 258 0
 1360 07fa 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1361 07fe 022B     		cmp	r3, #2
 1362 0800 1FD1     		bne	.L74
 259:../act_queue_utils.c **** 		component_printf(level, "Result msg: Act: %s(0x%x), cmd: 0x%x(%u), result: %s(%u), error: %s(%u),
 1363              		.loc 1 259 0
 1364 0802 FB88     		ldrh	r3, [r7, #6]
 1365 0804 DBB2     		uxtb	r3, r3
 1366 0806 97F805E0 		ldrb	lr, [r7, #5]	@ zero_extendqisi2
 1367 080a 7E79     		ldrb	r6, [r7, #5]	@ zero_extendqisi2
 1368 080c 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1369 080e FC78     		ldrb	r4, [r7, #3]	@ zero_extendqisi2
 1370 0810 B88F     		ldrh	r0, [r7, #60]
 1371 0812 B98F     		ldrh	r1, [r7, #60]
 1372 0814 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1373 0816 CDF800E0 		str	lr, [sp, #0]
 1374 081a 0196     		str	r6, [sp, #4]
 1375 081c BE69     		ldr	r6, [r7, #24]
 1376 081e 0296     		str	r6, [sp, #8]
 1377 0820 0395     		str	r5, [sp, #12]
 1378 0822 7D69     		ldr	r5, [r7, #20]
 1379 0824 0495     		str	r5, [sp, #16]
 1380 0826 0594     		str	r4, [sp, #20]
 1381 0828 0690     		str	r0, [sp, #24]
 1382 082a 0791     		str	r1, [sp, #28]
 1383 082c F968     		ldr	r1, [r7, #12]
 1384 082e 0891     		str	r1, [sp, #32]
 1385 0830 1046     		mov	r0, r2
 1386 0832 40F20001 		movw	r1, #:lower16:.LC22
 1387 0836 C0F20001 		movt	r1, #:upper16:.LC22
 1388 083a FA69     		ldr	r2, [r7, #28]
 1389 083c FFF7FEFF 		bl	OUTPUTLOG_printf
 1390 0840 38E0     		b	.L44
 1391              	.L74:
 260:../act_queue_utils.c **** 			originalSidStr, originalSid & 0xFF,
 261:../act_queue_utils.c **** 			originalCommand, originalCommand,
 262:../act_queue_utils.c **** 			resultStr, result,
 263:../act_queue_utils.c **** 			errorCodeStr, errorCode,
 264:../act_queue_utils.c **** 			param, param,
 265:../act_queue_utils.c **** 			sendedStr);
 266:../act_queue_utils.c **** 	} else if(paramType == CAN_TPT_Line) {
 1392              		.loc 1 266 0
 1393 0842 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 1394 0846 012B     		cmp	r3, #1
 1395 0848 1BD1     		bne	.L76
 267:../act_queue_utils.c **** 		component_printf(level, "Result msg: Act: %s(0x%x), cmd: 0x%x(%u), result: %s(%u), error: %s(%u),
 1396              		.loc 1 267 0
 1397 084a FB88     		ldrh	r3, [r7, #6]
 1398 084c DBB2     		uxtb	r3, r3
 1399 084e 7E79     		ldrb	r6, [r7, #5]	@ zero_extendqisi2
 1400 0850 7D79     		ldrb	r5, [r7, #5]	@ zero_extendqisi2
 1401 0852 3C79     		ldrb	r4, [r7, #4]	@ zero_extendqisi2
 1402 0854 F878     		ldrb	r0, [r7, #3]	@ zero_extendqisi2
 1403 0856 B98F     		ldrh	r1, [r7, #60]
 1404 0858 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1405 085a 0096     		str	r6, [sp, #0]
 1406 085c 0195     		str	r5, [sp, #4]
 1407 085e BD69     		ldr	r5, [r7, #24]
 1408 0860 0295     		str	r5, [sp, #8]
 1409 0862 0394     		str	r4, [sp, #12]
 1410 0864 7C69     		ldr	r4, [r7, #20]
 1411 0866 0494     		str	r4, [sp, #16]
 1412 0868 0590     		str	r0, [sp, #20]
 1413 086a 0691     		str	r1, [sp, #24]
 1414 086c F968     		ldr	r1, [r7, #12]
 1415 086e 0791     		str	r1, [sp, #28]
 1416 0870 1046     		mov	r0, r2
 1417 0872 40F20001 		movw	r1, #:lower16:.LC23
 1418 0876 C0F20001 		movt	r1, #:upper16:.LC23
 1419 087a FA69     		ldr	r2, [r7, #28]
 1420 087c FFF7FEFF 		bl	OUTPUTLOG_printf
 1421 0880 18E0     		b	.L44
 1422              	.L76:
 268:../act_queue_utils.c **** 			originalSidStr, originalSid & 0xFF,
 269:../act_queue_utils.c **** 			originalCommand, originalCommand,
 270:../act_queue_utils.c **** 			resultStr, result,
 271:../act_queue_utils.c **** 			errorCodeStr, errorCode,
 272:../act_queue_utils.c **** 			param,
 273:../act_queue_utils.c **** 			sendedStr);
 274:../act_queue_utils.c **** 	} else {
 275:../act_queue_utils.c **** 		component_printf(level, "Result msg: Act: %s(0x%x), cmd: 0x%x(%u), result: %s(%u), error: %s(%u) 
 1423              		.loc 1 275 0
 1424 0882 FB88     		ldrh	r3, [r7, #6]
 1425 0884 DBB2     		uxtb	r3, r3
 1426 0886 7D79     		ldrb	r5, [r7, #5]	@ zero_extendqisi2
 1427 0888 7C79     		ldrb	r4, [r7, #5]	@ zero_extendqisi2
 1428 088a 3879     		ldrb	r0, [r7, #4]	@ zero_extendqisi2
 1429 088c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1430 088e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 1431 0890 0095     		str	r5, [sp, #0]
 1432 0892 0194     		str	r4, [sp, #4]
 1433 0894 BC69     		ldr	r4, [r7, #24]
 1434 0896 0294     		str	r4, [sp, #8]
 1435 0898 0390     		str	r0, [sp, #12]
 1436 089a 7869     		ldr	r0, [r7, #20]
 1437 089c 0490     		str	r0, [sp, #16]
 1438 089e 0591     		str	r1, [sp, #20]
 1439 08a0 F968     		ldr	r1, [r7, #12]
 1440 08a2 0691     		str	r1, [sp, #24]
 1441 08a4 1046     		mov	r0, r2
 1442 08a6 40F20001 		movw	r1, #:lower16:.LC24
 1443 08aa C0F20001 		movt	r1, #:upper16:.LC24
 1444 08ae FA69     		ldr	r2, [r7, #28]
 1445 08b0 FFF7FEFF 		bl	OUTPUTLOG_printf
 1446              	.L44:
 276:../act_queue_utils.c **** 			originalSidStr, originalSid & 0xFF,
 277:../act_queue_utils.c **** 			originalCommand, originalCommand,
 278:../act_queue_utils.c **** 			resultStr, result,
 279:../act_queue_utils.c **** 			errorCodeStr, errorCode,
 280:../act_queue_utils.c **** 			sendedStr);
 281:../act_queue_utils.c **** 	}
 282:../act_queue_utils.c **** #endif
 283:../act_queue_utils.c **** }
 1447              		.loc 1 283 0
 1448 08b4 07F12407 		add	r7, r7, #36
 1449 08b8 BD46     		mov	sp, r7
 1450 08ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1451              		.cfi_endproc
 1452              	.LFE121:
 1454              	.Letext0:
 1455              		.file 2 "c:\\program files (x86)\\eclipse-arm-eseo\\gcc-arm-none-eabi-4_7-2013q2-20130614-win32\\g
 1456              		.file 3 "../QS/QS_types.h"
 1457              		.file 4 "../config/config_krusty/config_global_vars_types.h"
 1458              		.file 5 "../QS/QS_global_vars.h"
 1459              		.file 6 "../config/config_global_vars.h"
 1460              		.file 7 "../queue.h"
 1461              		.file 8 "../QS/QS_DCMotor2.h"
 1462              		.file 9 "../QS/QS_outputlog.h"
 1463              		.file 10 "../stm32f4xx/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 act_queue_utils.c
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:18     .text:00000000 $t
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:23     .text:00000000 ACTQ_push_operation_from_msg
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:756    .text:00000498 ACTQ_finish_SendResult
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:128    .text:000000cc ACTQ_sendResult
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1105   .text:00000604 ACTQ_printResult
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:204    .text:00000138 ACTQ_sendResultWithParam
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:283    .text:000001a4 ACTQ_sendResultWitExplicitLine
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:358    .rodata:00000000 $d
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:359    .rodata:00000000 .LC0
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:367    .text:00000210 ACTQ_check_status_ax12
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:629    .text:000003e0 ACTQ_check_status_dcmotor
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:814    .text:000004dc ACTQ_finish_SendResultIfFail
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:892    .text:0000054c ACTQ_finish_SendResultIfSuccess
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:966    .text:000005b4 ACTQ_finish_SendNothing
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1025   .rodata:0000001c .LC1
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1028   .rodata:00000024 .LC2
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1031   .rodata:00000034 .LC3
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1034   .rodata:0000003c .LC4
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1037   .rodata:00000048 .LC5
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1040   .rodata:00000058 .LC6
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1043   .rodata:00000068 .LC7
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1046   .rodata:00000074 .LC8
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1049   .rodata:00000080 .LC9
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1052   .rodata:00000088 .LC10
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1055   .rodata:00000094 .LC11
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1058   .rodata:000000a0 .LC12
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1061   .rodata:000000a8 .LC13
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1064   .rodata:000000b0 .LC14
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1067   .rodata:000000b8 .LC15
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1070   .rodata:000000c4 .LC16
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1073   .rodata:000000cc .LC17
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1076   .rodata:000000d4 .LC18
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1079   .rodata:000000e0 .LC19
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1082   .rodata:000000e4 .LC20
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1085   .rodata:000000ec .LC21
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1088   .rodata:000000f4 .LC22
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1093   .rodata:00000160 .LC23
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1097   .rodata:000001c4 .LC24
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1169   .text:00000664 $d
C:\Users\Amaury\AppData\Local\Temp\ccIJJgDN.s:1192   .text:000006b8 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.13c6c37fe6ef97541a459ad1f2cd1ddb
                           .group:00000000 wm4.stm32f4xx.h.54.d172d9d6631f11a8436908e748990b53
                           .group:00000000 wm4.core_cm4.h.32.39d0f71cd333856d56f1935d9037195e
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.163.d36d54ebc869626f337c4fcb95a9b424
                           .group:00000000 wm4.stm32f4xx.h.306.7867854ab89778ccd63e1fde7c22c0b6
                           .group:00000000 wm4.stm32f4xx_rcc.h.65.29a27820bc754566c4190ed8ad1c1d80
                           .group:00000000 wm4.misc.h.31.041217492a6cb86f2fb26099f373a465
                           .group:00000000 wm4.stm32f4xx.h.7233.cb6cb3cb095c29e1fc0eb152d26090b1
                           .group:00000000 wm4.Global_config.h.14.bea53ddf4045d71f1c9fb87037131e8e
                           .group:00000000 wm4.config_global.h.12.5c30ea43d7f0d9daa101874e8ba75f6f
                           .group:00000000 wm4.config_qs.h.12.4699be7196e891fb4cd84d522e29cde7
                           .group:00000000 wm4.config_qs.h.12.8e0ab7f7cbbdaecfb1e464f5610b5d86
                           .group:00000000 wm4.QS_macro.h.19.3d2533714681986d2ad8c517737c4640
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.QS_timer.h.23.f1c7374d1ffe22793578c04386c6b1e2
                           .group:00000000 wm4.queue.h.39.c6c83c771916888b8b8278e5c5477b11
                           .group:00000000 wm4.QS_CANmsgList.h.18.4820ab5d82fa43f9421f4e5eb46c19bc
                           .group:00000000 wm4.QS_ax12.h.14.bdca40ad9d76c87d4eb8bcff38d0d363
                           .group:00000000 wm4.config_debug.h.12.ce495d07741075ca26554eb90b0ab381
                           .group:00000000 wm4.QS_outputlog.h.12.497571275ee7bc35db4cbeb19919be7a

UNDEFINED SYMBOLS
QUEUE_create
QUEUE_take_sem
QUEUE_add
QUEUE_give_sem
global
CAN_send
AX12_reset_last_error
AX12_get_position
AX12_get_last_error
AX12_set_torque_enabled
CLOCK_get_time
QUEUE_get_initial_time
OUTPUTLOG_printf
DCM_get_state
QUEUE_get_arg
